<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="790" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="773.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="773.00"> </text><svg id="frames" x="10" width="1180" total_samples="36939"><g><title>server`&lt;server::structs::MessageType as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="0.0217%" y="597" width="0.0108%" height="15" fill="rgb(227,0,7)" fg:x="8" fg:w="4"/><text x="0.2717%" y="607.50"></text></g><g><title>server`core::ptr::drop_in_place&lt;std::process::Command&gt; (8 samples, 0.02%)</title><rect x="0.0379%" y="597" width="0.0217%" height="15" fill="rgb(217,0,24)" fg:x="14" fg:w="8"/><text x="0.2879%" y="607.50"></text></g><g><title>server`core::ptr::drop_in_place&lt;std::sys::unix::process::process_common::Command&gt; (8 samples, 0.02%)</title><rect x="0.0379%" y="581" width="0.0217%" height="15" fill="rgb(221,193,54)" fg:x="14" fg:w="8"/><text x="0.2879%" y="591.50"></text></g><g><title>server`&lt;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt; as nalgebra::geometry::abstract_rotation::AbstractRotation&lt;T,3_usize&gt;&gt;::transform_point (7 samples, 0.02%)</title><rect x="0.0893%" y="533" width="0.0190%" height="15" fill="rgb(248,212,6)" fg:x="33" fg:w="7"/><text x="0.3393%" y="543.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::geometry::point::OPoint&lt;T,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt; for &amp;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::mul (7 samples, 0.02%)</title><rect x="0.0893%" y="517" width="0.0190%" height="15" fill="rgb(208,68,35)" fg:x="33" fg:w="7"/><text x="0.3393%" y="527.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,SB&gt;&gt; for &amp;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::mul (7 samples, 0.02%)</title><rect x="0.0893%" y="501" width="0.0190%" height="15" fill="rgb(232,128,0)" fg:x="33" fg:w="7"/><text x="0.3393%" y="511.50"></text></g><g><title>server`parry3d::mass_properties::mass_properties::MassProperties::world_com (8 samples, 0.02%)</title><rect x="0.0893%" y="565" width="0.0217%" height="15" fill="rgb(207,160,47)" fg:x="33" fg:w="8"/><text x="0.3393%" y="575.50"></text></g><g><title>server`nalgebra::geometry::isometry_ops::_&lt;impl core::ops::arith::Mul&lt;nalgebra::geometry::point::OPoint&lt;T,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt; for &amp;nalgebra::geometry::isometry::Isometry&lt;T,R,_&gt;&gt;::mul (8 samples, 0.02%)</title><rect x="0.0893%" y="549" width="0.0217%" height="15" fill="rgb(228,23,34)" fg:x="33" fg:w="8"/><text x="0.3393%" y="559.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Mul&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::mul (11 samples, 0.03%)</title><rect x="0.1218%" y="549" width="0.0298%" height="15" fill="rgb(218,30,26)" fg:x="45" fg:w="11"/><text x="0.3718%" y="559.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for &amp;nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::mul (9 samples, 0.02%)</title><rect x="0.1272%" y="533" width="0.0244%" height="15" fill="rgb(220,122,19)" fg:x="47" fg:w="9"/><text x="0.3772%" y="543.50"></text></g><g><title>server`rapier3d::dynamics::rigid_body_components::RigidBodyMassProps::update_world_mass_properties (33 samples, 0.09%)</title><rect x="0.0812%" y="581" width="0.0893%" height="15" fill="rgb(250,228,42)" fg:x="30" fg:w="33"/><text x="0.3312%" y="591.50"></text></g><g><title>server`parry3d::mass_properties::mass_properties::MassProperties::world_inv_inertia_sqrt (22 samples, 0.06%)</title><rect x="0.1110%" y="565" width="0.0596%" height="15" fill="rgb(240,193,28)" fg:x="41" fg:w="22"/><text x="0.3610%" y="575.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul&lt;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt; for &amp;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::mul (4 samples, 0.01%)</title><rect x="0.1597%" y="549" width="0.0108%" height="15" fill="rgb(216,20,37)" fg:x="59" fg:w="4"/><text x="0.4097%" y="559.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt; for &amp;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::mul (4 samples, 0.01%)</title><rect x="0.1597%" y="533" width="0.0108%" height="15" fill="rgb(206,188,39)" fg:x="59" fg:w="4"/><text x="0.4097%" y="543.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt; for &amp;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;::mul (4 samples, 0.01%)</title><rect x="0.1597%" y="517" width="0.0108%" height="15" fill="rgb(217,207,13)" fg:x="59" fg:w="4"/><text x="0.4097%" y="527.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::index::Index&lt;usize&gt; for nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;::index (4 samples, 0.01%)</title><rect x="0.1597%" y="501" width="0.0108%" height="15" fill="rgb(231,73,38)" fg:x="59" fg:w="4"/><text x="0.4097%" y="511.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::index::Index&lt;usize&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (4 samples, 0.01%)</title><rect x="0.1597%" y="485" width="0.0108%" height="15" fill="rgb(225,20,46)" fg:x="59" fg:w="4"/><text x="0.4097%" y="495.50"></text></g><g><title>server`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.01%)</title><rect x="0.1760%" y="517" width="0.0108%" height="15" fill="rgb(210,31,41)" fg:x="65" fg:w="4"/><text x="0.4260%" y="527.50"></text></g><g><title>server`alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.01%)</title><rect x="0.1760%" y="549" width="0.0135%" height="15" fill="rgb(221,200,47)" fg:x="65" fg:w="5"/><text x="0.4260%" y="559.50"></text></g><g><title>server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.01%)</title><rect x="0.1760%" y="533" width="0.0135%" height="15" fill="rgb(226,26,5)" fg:x="65" fg:w="5"/><text x="0.4260%" y="543.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Add&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (6 samples, 0.02%)</title><rect x="0.2057%" y="485" width="0.0162%" height="15" fill="rgb(249,33,26)" fg:x="76" fg:w="6"/><text x="0.4557%" y="495.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Add&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (6 samples, 0.02%)</title><rect x="0.2057%" y="469" width="0.0162%" height="15" fill="rgb(235,183,28)" fg:x="76" fg:w="6"/><text x="0.4557%" y="479.50"></text></g><g><title>server`&lt;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt; as nalgebra::geometry::abstract_rotation::AbstractRotation&lt;T,3_usize&gt;&gt;::transform_vector (17 samples, 0.05%)</title><rect x="0.1895%" y="517" width="0.0460%" height="15" fill="rgb(221,5,38)" fg:x="70" fg:w="17"/><text x="0.4395%" y="527.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,SB&gt;&gt; for &amp;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::mul (16 samples, 0.04%)</title><rect x="0.1922%" y="501" width="0.0433%" height="15" fill="rgb(247,18,42)" fg:x="71" fg:w="16"/><text x="0.4422%" y="511.50"></text></g><g><title>server`nalgebra::base::indexing::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::get_unchecked (8 samples, 0.02%)</title><rect x="0.2599%" y="421" width="0.0217%" height="15" fill="rgb(241,131,45)" fg:x="96" fg:w="8"/><text x="0.5099%" y="431.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::get_unchecked (7 samples, 0.02%)</title><rect x="0.2626%" y="405" width="0.0190%" height="15" fill="rgb(249,31,29)" fg:x="97" fg:w="7"/><text x="0.5126%" y="415.50"></text></g><g><title>server`rapier3d::dynamics::rigid_body_components::RigidBodyColliders::update_positions (43 samples, 0.12%)</title><rect x="0.1733%" y="565" width="0.1164%" height="15" fill="rgb(225,111,53)" fg:x="64" fg:w="43"/><text x="0.4233%" y="575.50"></text></g><g><title>server`nalgebra::geometry::isometry_ops::_&lt;impl core::ops::arith::Mul&lt;nalgebra::geometry::isometry::Isometry&lt;T,R,_&gt;&gt; for &amp;nalgebra::geometry::isometry::Isometry&lt;T,R,_&gt;&gt;::mul (37 samples, 0.10%)</title><rect x="0.1895%" y="549" width="0.1002%" height="15" fill="rgb(238,160,17)" fg:x="70" fg:w="37"/><text x="0.4395%" y="559.50"></text></g><g><title>server`nalgebra::geometry::isometry_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::geometry::isometry::Isometry&lt;T,R,_&gt;&gt; for &amp;nalgebra::geometry::isometry::Isometry&lt;T,R,_&gt;&gt;::mul (37 samples, 0.10%)</title><rect x="0.1895%" y="533" width="0.1002%" height="15" fill="rgb(214,148,48)" fg:x="70" fg:w="37"/><text x="0.4395%" y="543.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul for nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::mul (17 samples, 0.05%)</title><rect x="0.2436%" y="517" width="0.0460%" height="15" fill="rgb(232,36,49)" fg:x="90" fg:w="17"/><text x="0.4936%" y="527.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt; for &amp;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::mul (16 samples, 0.04%)</title><rect x="0.2464%" y="501" width="0.0433%" height="15" fill="rgb(209,103,24)" fg:x="91" fg:w="16"/><text x="0.4964%" y="511.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt; for &amp;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;::mul (16 samples, 0.04%)</title><rect x="0.2464%" y="485" width="0.0433%" height="15" fill="rgb(229,88,8)" fg:x="91" fg:w="16"/><text x="0.4964%" y="495.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::index::Index&lt;usize&gt; for nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;::index (15 samples, 0.04%)</title><rect x="0.2491%" y="469" width="0.0406%" height="15" fill="rgb(213,181,19)" fg:x="92" fg:w="15"/><text x="0.4991%" y="479.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::index::Index&lt;usize&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (15 samples, 0.04%)</title><rect x="0.2491%" y="453" width="0.0406%" height="15" fill="rgb(254,191,54)" fg:x="92" fg:w="15"/><text x="0.4991%" y="463.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::index::Index&lt;(usize,usize)&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (13 samples, 0.04%)</title><rect x="0.2545%" y="437" width="0.0352%" height="15" fill="rgb(241,83,37)" fg:x="94" fg:w="13"/><text x="0.5045%" y="447.50"></text></g><g><title>server`rapier3d::pipeline::physics_pipeline::PhysicsPipeline::advance_to_final_positions (45 samples, 0.12%)</title><rect x="0.1706%" y="581" width="0.1218%" height="15" fill="rgb(233,36,39)" fg:x="63" fg:w="45"/><text x="0.4206%" y="591.50"></text></g><g><title>server`rapier3d::dynamics::island_manager::IslandManager::update_active_set_with_contacts (4 samples, 0.01%)</title><rect x="0.2978%" y="565" width="0.0108%" height="15" fill="rgb(226,3,54)" fg:x="110" fg:w="4"/><text x="0.5478%" y="575.50"></text></g><g><title>server`rapier3d::dynamics::rigid_body_components::RigidBodyMassProps::update_world_mass_properties (8 samples, 0.02%)</title><rect x="0.3140%" y="565" width="0.0217%" height="15" fill="rgb(245,192,40)" fg:x="116" fg:w="8"/><text x="0.5640%" y="575.50"></text></g><g><title>server`parry3d::mass_properties::mass_properties::MassProperties::world_inv_inertia_sqrt (6 samples, 0.02%)</title><rect x="0.3194%" y="549" width="0.0162%" height="15" fill="rgb(238,167,29)" fg:x="118" fg:w="6"/><text x="0.5694%" y="559.50"></text></g><g><title>server`rapier3d::dynamics::solver::solver_constraints::SolverConstraints&lt;rapier3d::dynamics::solver::velocity_constraint::AnyVelocityConstraint&gt;::compute_nongrouped_ground_constraints (7 samples, 0.02%)</title><rect x="0.3384%" y="533" width="0.0190%" height="15" fill="rgb(232,182,51)" fg:x="125" fg:w="7"/><text x="0.5884%" y="543.50"></text></g><g><title>server`rapier3d::dynamics::solver::velocity_ground_constraint::VelocityGroundConstraint::generate (7 samples, 0.02%)</title><rect x="0.3384%" y="517" width="0.0190%" height="15" fill="rgb(231,60,39)" fg:x="125" fg:w="7"/><text x="0.5884%" y="527.50"></text></g><g><title>server`rapier3d::dynamics::solver::solver_constraints::SolverConstraints&lt;rapier3d::dynamics::solver::velocity_constraint::AnyVelocityConstraint&gt;::init (8 samples, 0.02%)</title><rect x="0.3384%" y="549" width="0.0217%" height="15" fill="rgb(208,69,12)" fg:x="125" fg:w="8"/><text x="0.5884%" y="559.50"></text></g><g><title>server`nalgebra::geometry::isometry_construction::_&lt;impl nalgebra::geometry::isometry::Isometry&lt;T,nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;,3_usize&gt;&gt;::new (4 samples, 0.01%)</title><rect x="0.3980%" y="517" width="0.0108%" height="15" fill="rgb(235,93,37)" fg:x="147" fg:w="4"/><text x="0.6480%" y="527.50"></text></g><g><title>server`nalgebra::geometry::quaternion_construction::_&lt;impl nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::from_scaled_axis (4 samples, 0.01%)</title><rect x="0.3980%" y="501" width="0.0108%" height="15" fill="rgb(213,116,39)" fg:x="147" fg:w="4"/><text x="0.6480%" y="511.50"></text></g><g><title>server`nalgebra::geometry::quaternion_construction::_&lt;impl nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::new (4 samples, 0.01%)</title><rect x="0.3980%" y="485" width="0.0108%" height="15" fill="rgb(222,207,29)" fg:x="147" fg:w="4"/><text x="0.6480%" y="495.50"></text></g><g><title>server`&lt;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt; as nalgebra::geometry::abstract_rotation::AbstractRotation&lt;T,3_usize&gt;&gt;::transform_vector (5 samples, 0.01%)</title><rect x="0.4088%" y="485" width="0.0135%" height="15" fill="rgb(206,96,30)" fg:x="151" fg:w="5"/><text x="0.6588%" y="495.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,SB&gt;&gt; for &amp;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::mul (5 samples, 0.01%)</title><rect x="0.4088%" y="469" width="0.0135%" height="15" fill="rgb(218,138,4)" fg:x="151" fg:w="5"/><text x="0.6588%" y="479.50"></text></g><g><title>server`nalgebra::geometry::isometry_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::geometry::isometry::Isometry&lt;T,R,_&gt;&gt; for nalgebra::geometry::isometry::Isometry&lt;T,R,_&gt;&gt;::mul (10 samples, 0.03%)</title><rect x="0.4088%" y="517" width="0.0271%" height="15" fill="rgb(250,191,14)" fg:x="151" fg:w="10"/><text x="0.6588%" y="527.50"></text></g><g><title>server`nalgebra::geometry::isometry_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::geometry::isometry::Isometry&lt;T,R,_&gt;&gt; for &amp;nalgebra::geometry::isometry::Isometry&lt;T,R,_&gt;&gt;::mul (10 samples, 0.03%)</title><rect x="0.4088%" y="501" width="0.0271%" height="15" fill="rgb(239,60,40)" fg:x="151" fg:w="10"/><text x="0.6588%" y="511.50"></text></g><g><title>server`&lt;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt; as nalgebra::geometry::abstract_rotation::AbstractRotation&lt;T,3_usize&gt;&gt;::transform_point (4 samples, 0.01%)</title><rect x="0.4359%" y="501" width="0.0108%" height="15" fill="rgb(206,27,48)" fg:x="161" fg:w="4"/><text x="0.6859%" y="511.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::geometry::point::OPoint&lt;T,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt; for &amp;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::mul (4 samples, 0.01%)</title><rect x="0.4359%" y="485" width="0.0108%" height="15" fill="rgb(225,35,8)" fg:x="161" fg:w="4"/><text x="0.6859%" y="495.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,SB&gt;&gt; for &amp;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::mul (4 samples, 0.01%)</title><rect x="0.4359%" y="469" width="0.0108%" height="15" fill="rgb(250,213,24)" fg:x="161" fg:w="4"/><text x="0.6859%" y="479.50"></text></g><g><title>server`nalgebra::geometry::isometry_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::geometry::point::OPoint&lt;T,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt; for &amp;nalgebra::geometry::isometry::Isometry&lt;T,R,_&gt;&gt;::mul (5 samples, 0.01%)</title><rect x="0.4359%" y="517" width="0.0135%" height="15" fill="rgb(247,123,22)" fg:x="161" fg:w="5"/><text x="0.6859%" y="527.50"></text></g><g><title>server`rapier3d::dynamics::rigid_body_components::RigidBodyVelocity::integrate (26 samples, 0.07%)</title><rect x="0.3925%" y="533" width="0.0704%" height="15" fill="rgb(231,138,38)" fg:x="145" fg:w="26"/><text x="0.6425%" y="543.50"></text></g><g><title>server`nalgebra::geometry::isometry_ops::_&lt;impl core::ops::arith::Mul&lt;nalgebra::geometry::translation::Translation&lt;T,_&gt;&gt; for nalgebra::geometry::isometry::Isometry&lt;T,R,_&gt;&gt;::mul (5 samples, 0.01%)</title><rect x="0.4494%" y="517" width="0.0135%" height="15" fill="rgb(231,145,46)" fg:x="166" fg:w="5"/><text x="0.6994%" y="527.50"></text></g><g><title>server`nalgebra::geometry::isometry_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::geometry::translation::Translation&lt;T,_&gt;&gt; for &amp;nalgebra::geometry::isometry::Isometry&lt;T,R,_&gt;&gt;::mul (5 samples, 0.01%)</title><rect x="0.4494%" y="501" width="0.0135%" height="15" fill="rgb(251,118,11)" fg:x="166" fg:w="5"/><text x="0.6994%" y="511.50"></text></g><g><title>server`nalgebra::base::componentwise::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::component_mul (6 samples, 0.02%)</title><rect x="0.4846%" y="469" width="0.0162%" height="15" fill="rgb(217,147,25)" fg:x="179" fg:w="6"/><text x="0.7346%" y="479.50"></text></g><g><title>server`rapier3d::dynamics::solver::velocity_ground_constraint_element::VelocityGroundConstraintNormalPart&lt;N&gt;::solve (12 samples, 0.03%)</title><rect x="0.4765%" y="485" width="0.0325%" height="15" fill="rgb(247,81,37)" fg:x="176" fg:w="12"/><text x="0.7265%" y="495.50"></text></g><g><title>server`nalgebra::base::blas::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dot (4 samples, 0.01%)</title><rect x="0.5089%" y="469" width="0.0108%" height="15" fill="rgb(209,12,38)" fg:x="188" fg:w="4"/><text x="0.7589%" y="479.50"></text></g><g><title>server`nalgebra::base::componentwise::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::component_mul (12 samples, 0.03%)</title><rect x="0.5198%" y="469" width="0.0325%" height="15" fill="rgb(227,1,9)" fg:x="192" fg:w="12"/><text x="0.7698%" y="479.50"></text></g><g><title>server`nalgebra::base::matrix_simba::_&lt;impl simba::simd::simd_value::SimdValue for nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::select (6 samples, 0.02%)</title><rect x="0.5604%" y="453" width="0.0162%" height="15" fill="rgb(248,47,43)" fg:x="207" fg:w="6"/><text x="0.8104%" y="463.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::zip_map (6 samples, 0.02%)</title><rect x="0.5604%" y="437" width="0.0162%" height="15" fill="rgb(221,10,30)" fg:x="207" fg:w="6"/><text x="0.8104%" y="447.50"></text></g><g><title>server`nalgebra::base::norm::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::simd_cap_magnitude (13 samples, 0.04%)</title><rect x="0.5523%" y="469" width="0.0352%" height="15" fill="rgb(210,229,1)" fg:x="204" fg:w="13"/><text x="0.8023%" y="479.50"></text></g><g><title>server`nalgebra::base::norm::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm (4 samples, 0.01%)</title><rect x="0.5766%" y="453" width="0.0108%" height="15" fill="rgb(222,148,37)" fg:x="213" fg:w="4"/><text x="0.8266%" y="463.50"></text></g><g><title>server`nalgebra::base::norm::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm_squared (4 samples, 0.01%)</title><rect x="0.5766%" y="437" width="0.0108%" height="15" fill="rgb(234,67,33)" fg:x="213" fg:w="4"/><text x="0.8266%" y="447.50"></text></g><g><title>server`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.01%)</title><rect x="0.5983%" y="421" width="0.0108%" height="15" fill="rgb(247,98,35)" fg:x="221" fg:w="4"/><text x="0.8483%" y="431.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Add&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (9 samples, 0.02%)</title><rect x="0.5875%" y="469" width="0.0244%" height="15" fill="rgb(247,138,52)" fg:x="217" fg:w="9"/><text x="0.8375%" y="479.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Add&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (9 samples, 0.02%)</title><rect x="0.5875%" y="453" width="0.0244%" height="15" fill="rgb(213,79,30)" fg:x="217" fg:w="9"/><text x="0.8375%" y="463.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (9 samples, 0.02%)</title><rect x="0.5875%" y="437" width="0.0244%" height="15" fill="rgb(246,177,23)" fg:x="217" fg:w="9"/><text x="0.8375%" y="447.50"></text></g><g><title>server`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="0.6172%" y="453" width="0.0135%" height="15" fill="rgb(230,62,27)" fg:x="228" fg:w="5"/><text x="0.8672%" y="463.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Mul&lt;T&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul (7 samples, 0.02%)</title><rect x="0.6172%" y="469" width="0.0190%" height="15" fill="rgb(216,154,8)" fg:x="228" fg:w="7"/><text x="0.8672%" y="479.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Sub&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub (10 samples, 0.03%)</title><rect x="0.6362%" y="469" width="0.0271%" height="15" fill="rgb(244,35,45)" fg:x="235" fg:w="10"/><text x="0.8862%" y="479.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Sub&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub (8 samples, 0.02%)</title><rect x="0.6416%" y="453" width="0.0217%" height="15" fill="rgb(251,115,12)" fg:x="237" fg:w="8"/><text x="0.8916%" y="463.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub_assign_statically_unchecked (4 samples, 0.01%)</title><rect x="0.6524%" y="437" width="0.0108%" height="15" fill="rgb(240,54,50)" fg:x="241" fg:w="4"/><text x="0.9024%" y="447.50"></text></g><g><title>server`rapier3d::dynamics::solver::island_solver::IslandSolver::init_and_solve (123 samples, 0.33%)</title><rect x="0.3357%" y="565" width="0.3330%" height="15" fill="rgb(233,84,52)" fg:x="124" fg:w="123"/><text x="0.5857%" y="575.50"></text></g><g><title>server`rapier3d::dynamics::solver::velocity_solver::VelocitySolver::solve (114 samples, 0.31%)</title><rect x="0.3601%" y="549" width="0.3086%" height="15" fill="rgb(207,117,47)" fg:x="133" fg:w="114"/><text x="0.6101%" y="559.50"></text></g><g><title>server`rapier3d::dynamics::solver::velocity_constraint::AnyVelocityConstraint::solve (74 samples, 0.20%)</title><rect x="0.4683%" y="533" width="0.2003%" height="15" fill="rgb(249,43,39)" fg:x="173" fg:w="74"/><text x="0.7183%" y="543.50"></text></g><g><title>server`rapier3d::dynamics::solver::velocity_ground_constraint::VelocityGroundConstraint::solve (72 samples, 0.19%)</title><rect x="0.4738%" y="517" width="0.1949%" height="15" fill="rgb(209,38,44)" fg:x="175" fg:w="72"/><text x="0.7238%" y="527.50"></text></g><g><title>server`rapier3d::dynamics::solver::velocity_ground_constraint_element::VelocityGroundConstraintElement&lt;N&gt;::solve_group (72 samples, 0.19%)</title><rect x="0.4738%" y="501" width="0.1949%" height="15" fill="rgb(236,212,23)" fg:x="175" fg:w="72"/><text x="0.7238%" y="511.50"></text></g><g><title>server`rapier3d::dynamics::solver::velocity_ground_constraint_element::VelocityGroundConstraintTangentPart&lt;N&gt;::solve (59 samples, 0.16%)</title><rect x="0.5089%" y="485" width="0.1597%" height="15" fill="rgb(242,79,21)" fg:x="188" fg:w="59"/><text x="0.7589%" y="495.50"></text></g><g><title>server`rapier3d::pipeline::physics_pipeline::PhysicsPipeline::build_islands_and_solve_velocity_constraints (142 samples, 0.38%)</title><rect x="0.2924%" y="581" width="0.3844%" height="15" fill="rgb(211,96,35)" fg:x="108" fg:w="142"/><text x="0.5424%" y="591.50"></text></g><g><title>server`nalgebra::base::construction::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::repeat (6 samples, 0.02%)</title><rect x="0.7012%" y="517" width="0.0162%" height="15" fill="rgb(253,215,40)" fg:x="259" fg:w="6"/><text x="0.9512%" y="527.50"></text></g><g><title>server`nalgebra::base::construction::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::repeat_generic (6 samples, 0.02%)</title><rect x="0.7012%" y="501" width="0.0162%" height="15" fill="rgb(211,81,21)" fg:x="259" fg:w="6"/><text x="0.9512%" y="511.50"></text></g><g><title>server`nalgebra::base::construction::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,R,C&gt;&gt;::Buffer&gt;&gt;::from_iterator_generic (6 samples, 0.02%)</title><rect x="0.7012%" y="485" width="0.0162%" height="15" fill="rgb(208,190,38)" fg:x="259" fg:w="6"/><text x="0.9512%" y="495.50"></text></g><g><title>server`&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;T,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;::allocate_from_iterator (6 samples, 0.02%)</title><rect x="0.7012%" y="469" width="0.0162%" height="15" fill="rgb(235,213,38)" fg:x="259" fg:w="6"/><text x="0.9512%" y="479.50"></text></g><g><title>server`&lt;parry3d::bounding_volume::aabb::Aabb as parry3d::bounding_volume::bounding_volume::BoundingVolume&gt;::loosened (13 samples, 0.04%)</title><rect x="0.7012%" y="533" width="0.0352%" height="15" fill="rgb(237,122,38)" fg:x="259" fg:w="13"/><text x="0.9512%" y="543.50"></text></g><g><title>server`nalgebra::geometry::point_ops::_&lt;impl core::ops::arith::Add&lt;nalgebra::base::matrix::Matrix&lt;T,D2,nalgebra::base::dimension::Const&lt;1_usize&gt;,SB&gt;&gt; for nalgebra::geometry::point::OPoint&lt;T,D1&gt;&gt;::add (7 samples, 0.02%)</title><rect x="0.7174%" y="517" width="0.0190%" height="15" fill="rgb(244,218,35)" fg:x="265" fg:w="7"/><text x="0.9674%" y="527.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Add&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (7 samples, 0.02%)</title><rect x="0.7174%" y="501" width="0.0190%" height="15" fill="rgb(240,68,47)" fg:x="265" fg:w="7"/><text x="0.9674%" y="511.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Add&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (6 samples, 0.02%)</title><rect x="0.7201%" y="485" width="0.0162%" height="15" fill="rgb(210,16,53)" fg:x="266" fg:w="6"/><text x="0.9701%" y="495.50"></text></g><g><title>server`nalgebra::geometry::point::OPoint&lt;T,D&gt;::inf (9 samples, 0.02%)</title><rect x="0.7363%" y="517" width="0.0244%" height="15" fill="rgb(235,124,12)" fg:x="272" fg:w="9"/><text x="0.9863%" y="527.50"></text></g><g><title>server`nalgebra::base::componentwise::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::inf (8 samples, 0.02%)</title><rect x="0.7391%" y="501" width="0.0217%" height="15" fill="rgb(224,169,11)" fg:x="273" fg:w="8"/><text x="0.9891%" y="511.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::zip_map (7 samples, 0.02%)</title><rect x="0.7418%" y="485" width="0.0190%" height="15" fill="rgb(250,166,2)" fg:x="274" fg:w="7"/><text x="0.9918%" y="495.50"></text></g><g><title>server`&lt;parry3d::bounding_volume::aabb::Aabb as parry3d::bounding_volume::bounding_volume::BoundingVolume&gt;::merged (15 samples, 0.04%)</title><rect x="0.7363%" y="533" width="0.0406%" height="15" fill="rgb(242,216,29)" fg:x="272" fg:w="15"/><text x="0.9863%" y="543.50"></text></g><g><title>server`nalgebra::geometry::point::OPoint&lt;T,D&gt;::sup (6 samples, 0.02%)</title><rect x="0.7607%" y="517" width="0.0162%" height="15" fill="rgb(230,116,27)" fg:x="281" fg:w="6"/><text x="1.0107%" y="527.50"></text></g><g><title>server`nalgebra::base::componentwise::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sup (6 samples, 0.02%)</title><rect x="0.7607%" y="501" width="0.0162%" height="15" fill="rgb(228,99,48)" fg:x="281" fg:w="6"/><text x="1.0107%" y="511.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::zip_map (5 samples, 0.01%)</title><rect x="0.7634%" y="485" width="0.0135%" height="15" fill="rgb(253,11,6)" fg:x="282" fg:w="5"/><text x="1.0134%" y="495.50"></text></g><g><title>server`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="0.7851%" y="485" width="0.0108%" height="15" fill="rgb(247,143,39)" fg:x="290" fg:w="4"/><text x="1.0351%" y="495.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::cross (9 samples, 0.02%)</title><rect x="0.8067%" y="405" width="0.0244%" height="15" fill="rgb(236,97,10)" fg:x="298" fg:w="9"/><text x="1.0567%" y="415.50"></text></g><g><title>server`nalgebra::base::indexing::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::get_unchecked_mut (4 samples, 0.01%)</title><rect x="0.8203%" y="389" width="0.0108%" height="15" fill="rgb(233,208,19)" fg:x="303" fg:w="4"/><text x="1.0703%" y="399.50"></text></g><g><title>server`nalgebra::base::storage::RawStorageMut::get_unchecked_mut (4 samples, 0.01%)</title><rect x="0.8203%" y="373" width="0.0108%" height="15" fill="rgb(216,164,2)" fg:x="303" fg:w="4"/><text x="1.0703%" y="383.50"></text></g><g><title>server`nalgebra::base::storage::RawStorageMut::get_address_unchecked_mut (4 samples, 0.01%)</title><rect x="0.8203%" y="357" width="0.0108%" height="15" fill="rgb(220,129,5)" fg:x="303" fg:w="4"/><text x="1.0703%" y="367.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Add&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (4 samples, 0.01%)</title><rect x="0.8311%" y="405" width="0.0108%" height="15" fill="rgb(242,17,10)" fg:x="307" fg:w="4"/><text x="1.0811%" y="415.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Add&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (4 samples, 0.01%)</title><rect x="0.8419%" y="405" width="0.0108%" height="15" fill="rgb(242,107,0)" fg:x="311" fg:w="4"/><text x="1.0919%" y="415.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Add&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (4 samples, 0.01%)</title><rect x="0.8419%" y="389" width="0.0108%" height="15" fill="rgb(251,28,31)" fg:x="311" fg:w="4"/><text x="1.0919%" y="399.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Mul&lt;T&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul (6 samples, 0.02%)</title><rect x="0.8528%" y="405" width="0.0162%" height="15" fill="rgb(233,223,10)" fg:x="315" fg:w="6"/><text x="1.1028%" y="415.50"></text></g><g><title>server`&lt;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt; as nalgebra::geometry::abstract_rotation::AbstractRotation&lt;T,3_usize&gt;&gt;::transform_point (27 samples, 0.07%)</title><rect x="0.8013%" y="453" width="0.0731%" height="15" fill="rgb(215,21,27)" fg:x="296" fg:w="27"/><text x="1.0513%" y="463.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::geometry::point::OPoint&lt;T,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt; for &amp;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::mul (25 samples, 0.07%)</title><rect x="0.8067%" y="437" width="0.0677%" height="15" fill="rgb(232,23,21)" fg:x="298" fg:w="25"/><text x="1.0567%" y="447.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,SB&gt;&gt; for &amp;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::mul (25 samples, 0.07%)</title><rect x="0.8067%" y="421" width="0.0677%" height="15" fill="rgb(244,5,23)" fg:x="298" fg:w="25"/><text x="1.0567%" y="431.50"></text></g><g><title>server`nalgebra::geometry::isometry::Isometry&lt;T,R,_&gt;::transform_point (28 samples, 0.08%)</title><rect x="0.8013%" y="485" width="0.0758%" height="15" fill="rgb(226,81,46)" fg:x="296" fg:w="28"/><text x="1.0513%" y="495.50"></text></g><g><title>server`nalgebra::geometry::isometry_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::geometry::point::OPoint&lt;T,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt; for &amp;nalgebra::geometry::isometry::Isometry&lt;T,R,_&gt;&gt;::mul (28 samples, 0.08%)</title><rect x="0.8013%" y="469" width="0.0758%" height="15" fill="rgb(247,70,30)" fg:x="296" fg:w="28"/><text x="1.0513%" y="479.50"></text></g><g><title>server`&lt;nalgebra::base::dimension::Const&lt;_&gt; as nalgebra::base::dimension::Dim&gt;::value (4 samples, 0.01%)</title><rect x="1.3076%" y="373" width="0.0108%" height="15" fill="rgb(212,68,19)" fg:x="483" fg:w="4"/><text x="1.5576%" y="383.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::get_unchecked_linear (23 samples, 0.06%)</title><rect x="1.3211%" y="373" width="0.0623%" height="15" fill="rgb(240,187,13)" fg:x="488" fg:w="23"/><text x="1.5711%" y="383.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::get_address_unchecked_linear (13 samples, 0.04%)</title><rect x="1.3482%" y="357" width="0.0352%" height="15" fill="rgb(223,113,26)" fg:x="498" fg:w="13"/><text x="1.5982%" y="367.50"></text></g><g><title>server`nalgebra::base::indexing::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::get_unchecked (85 samples, 0.23%)</title><rect x="1.2399%" y="405" width="0.2301%" height="15" fill="rgb(206,192,2)" fg:x="458" fg:w="85"/><text x="1.4899%" y="415.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::get_unchecked (78 samples, 0.21%)</title><rect x="1.2588%" y="389" width="0.2112%" height="15" fill="rgb(241,108,4)" fg:x="465" fg:w="78"/><text x="1.5088%" y="399.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::linear_index (32 samples, 0.09%)</title><rect x="1.3834%" y="373" width="0.0866%" height="15" fill="rgb(247,173,49)" fg:x="511" fg:w="32"/><text x="1.6334%" y="383.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::linear_index (15 samples, 0.04%)</title><rect x="1.5783%" y="357" width="0.0406%" height="15" fill="rgb(224,114,35)" fg:x="583" fg:w="15"/><text x="1.8283%" y="367.50"></text></g><g><title>server`nalgebra::base::indexing::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::get_unchecked_mut (69 samples, 0.19%)</title><rect x="1.4700%" y="405" width="0.1868%" height="15" fill="rgb(245,159,27)" fg:x="543" fg:w="69"/><text x="1.7200%" y="415.50"></text></g><g><title>server`nalgebra::base::storage::RawStorageMut::get_unchecked_mut (60 samples, 0.16%)</title><rect x="1.4944%" y="389" width="0.1624%" height="15" fill="rgb(245,172,44)" fg:x="552" fg:w="60"/><text x="1.7444%" y="399.50"></text></g><g><title>server`nalgebra::base::storage::RawStorageMut::get_address_unchecked_mut (44 samples, 0.12%)</title><rect x="1.5377%" y="373" width="0.1191%" height="15" fill="rgb(236,23,11)" fg:x="568" fg:w="44"/><text x="1.7877%" y="383.50"></text></g><g><title>server`nalgebra::base::storage::RawStorageMut::get_address_unchecked_linear_mut (14 samples, 0.04%)</title><rect x="1.6189%" y="357" width="0.0379%" height="15" fill="rgb(205,117,38)" fg:x="598" fg:w="14"/><text x="1.8689%" y="367.50"></text></g><g><title>server`&lt;nalgebra::base::array_storage::ArrayStorage&lt;T,_,_&gt; as nalgebra::base::storage::RawStorageMut&lt;T,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;::ptr_mut (5 samples, 0.01%)</title><rect x="1.6432%" y="341" width="0.0135%" height="15" fill="rgb(237,72,25)" fg:x="607" fg:w="5"/><text x="1.8932%" y="351.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::cross (285 samples, 0.77%)</title><rect x="0.9123%" y="421" width="0.7715%" height="15" fill="rgb(244,70,9)" fg:x="337" fg:w="285"/><text x="1.1623%" y="431.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::shape (10 samples, 0.03%)</title><rect x="1.6568%" y="405" width="0.0271%" height="15" fill="rgb(217,125,39)" fg:x="612" fg:w="10"/><text x="1.9068%" y="415.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::shape_generic (4 samples, 0.01%)</title><rect x="1.6730%" y="389" width="0.0108%" height="15" fill="rgb(235,36,10)" fg:x="618" fg:w="4"/><text x="1.9230%" y="399.50"></text></g><g><title>server`core::mem::transmute_copy (4 samples, 0.01%)</title><rect x="1.7218%" y="389" width="0.0108%" height="15" fill="rgb(251,123,47)" fg:x="636" fg:w="4"/><text x="1.9718%" y="399.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::into_owned_sum (8 samples, 0.02%)</title><rect x="1.7136%" y="405" width="0.0217%" height="15" fill="rgb(221,13,13)" fg:x="633" fg:w="8"/><text x="1.9636%" y="415.50"></text></g><g><title>server`&lt;nalgebra::base::array_storage::ArrayStorage&lt;T,_,_&gt; as nalgebra::base::storage::RawStorage&lt;T,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;::as_slice_unchecked (7 samples, 0.02%)</title><rect x="1.7624%" y="389" width="0.0190%" height="15" fill="rgb(238,131,9)" fg:x="651" fg:w="7"/><text x="2.0124%" y="399.50"></text></g><g><title>server`core::slice::raw::from_raw_parts (5 samples, 0.01%)</title><rect x="1.7678%" y="373" width="0.0135%" height="15" fill="rgb(211,50,8)" fg:x="653" fg:w="5"/><text x="2.0178%" y="383.50"></text></g><g><title>server`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (4 samples, 0.01%)</title><rect x="1.7921%" y="389" width="0.0108%" height="15" fill="rgb(245,182,24)" fg:x="662" fg:w="4"/><text x="2.0421%" y="399.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (16 samples, 0.04%)</title><rect x="1.8057%" y="373" width="0.0433%" height="15" fill="rgb(242,14,37)" fg:x="667" fg:w="16"/><text x="2.0557%" y="383.50"></text></g><g><title>server`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (20 samples, 0.05%)</title><rect x="1.8030%" y="389" width="0.0541%" height="15" fill="rgb(246,228,12)" fg:x="666" fg:w="20"/><text x="2.0530%" y="399.50"></text></g><g><title>server`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="1.8625%" y="373" width="0.0135%" height="15" fill="rgb(213,55,15)" fg:x="688" fg:w="5"/><text x="2.1125%" y="383.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::get_unchecked (8 samples, 0.02%)</title><rect x="1.8571%" y="389" width="0.0217%" height="15" fill="rgb(209,9,3)" fg:x="686" fg:w="8"/><text x="2.1071%" y="399.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::shape (4 samples, 0.01%)</title><rect x="1.8842%" y="389" width="0.0108%" height="15" fill="rgb(230,59,30)" fg:x="696" fg:w="4"/><text x="2.1342%" y="399.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Add&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (79 samples, 0.21%)</title><rect x="1.6839%" y="421" width="0.2139%" height="15" fill="rgb(209,121,21)" fg:x="622" fg:w="79"/><text x="1.9339%" y="431.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (57 samples, 0.15%)</title><rect x="1.7434%" y="405" width="0.1543%" height="15" fill="rgb(220,109,13)" fg:x="644" fg:w="57"/><text x="1.9934%" y="415.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::into_owned_sum (7 samples, 0.02%)</title><rect x="1.9356%" y="389" width="0.0190%" height="15" fill="rgb(232,18,1)" fg:x="715" fg:w="7"/><text x="2.1856%" y="399.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::shape (6 samples, 0.02%)</title><rect x="1.9546%" y="389" width="0.0162%" height="15" fill="rgb(215,41,42)" fg:x="722" fg:w="6"/><text x="2.2046%" y="399.50"></text></g><g><title>server`&lt;nalgebra::base::array_storage::ArrayStorage&lt;T,_,_&gt; as nalgebra::base::storage::RawStorage&lt;T,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;::as_slice_unchecked (5 samples, 0.01%)</title><rect x="2.0087%" y="373" width="0.0135%" height="15" fill="rgb(224,123,36)" fg:x="742" fg:w="5"/><text x="2.2587%" y="383.50"></text></g><g><title>server`&lt;nalgebra::base::array_storage::ArrayStorage&lt;T,_,_&gt; as nalgebra::base::storage::RawStorageMut&lt;T,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;::as_mut_slice_unchecked (4 samples, 0.01%)</title><rect x="2.0223%" y="373" width="0.0108%" height="15" fill="rgb(240,125,3)" fg:x="747" fg:w="4"/><text x="2.2723%" y="383.50"></text></g><g><title>server`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (7 samples, 0.02%)</title><rect x="2.0358%" y="373" width="0.0190%" height="15" fill="rgb(205,98,50)" fg:x="752" fg:w="7"/><text x="2.2858%" y="383.50"></text></g><g><title>server`core::mem::replace (7 samples, 0.02%)</title><rect x="2.0926%" y="341" width="0.0190%" height="15" fill="rgb(205,185,37)" fg:x="773" fg:w="7"/><text x="2.3426%" y="351.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (23 samples, 0.06%)</title><rect x="2.0547%" y="357" width="0.0623%" height="15" fill="rgb(238,207,15)" fg:x="759" fg:w="23"/><text x="2.3047%" y="367.50"></text></g><g><title>server`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (6 samples, 0.02%)</title><rect x="2.1170%" y="357" width="0.0162%" height="15" fill="rgb(213,199,42)" fg:x="782" fg:w="6"/><text x="2.3670%" y="367.50"></text></g><g><title>server`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (30 samples, 0.08%)</title><rect x="2.0547%" y="373" width="0.0812%" height="15" fill="rgb(235,201,11)" fg:x="759" fg:w="30"/><text x="2.3047%" y="383.50"></text></g><g><title>server`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="2.1549%" y="357" width="0.0135%" height="15" fill="rgb(207,46,11)" fg:x="796" fg:w="5"/><text x="2.4049%" y="367.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::get_unchecked (13 samples, 0.04%)</title><rect x="2.1360%" y="373" width="0.0352%" height="15" fill="rgb(241,35,35)" fg:x="789" fg:w="13"/><text x="2.3860%" y="383.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Add&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (104 samples, 0.28%)</title><rect x="1.8977%" y="421" width="0.2815%" height="15" fill="rgb(243,32,47)" fg:x="701" fg:w="104"/><text x="2.1477%" y="431.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Add&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (102 samples, 0.28%)</title><rect x="1.9031%" y="405" width="0.2761%" height="15" fill="rgb(247,202,23)" fg:x="703" fg:w="102"/><text x="2.1531%" y="415.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (77 samples, 0.21%)</title><rect x="1.9708%" y="389" width="0.2085%" height="15" fill="rgb(219,102,11)" fg:x="728" fg:w="77"/><text x="2.2208%" y="399.50"></text></g><g><title>server`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (14 samples, 0.04%)</title><rect x="2.2984%" y="389" width="0.0379%" height="15" fill="rgb(243,110,44)" fg:x="849" fg:w="14"/><text x="2.5484%" y="399.50"></text></g><g><title>server`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.14%)</title><rect x="2.2307%" y="405" width="0.1408%" height="15" fill="rgb(222,74,54)" fg:x="824" fg:w="52"/><text x="2.4807%" y="415.50"></text></g><g><title>server`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (13 samples, 0.04%)</title><rect x="2.3363%" y="389" width="0.0352%" height="15" fill="rgb(216,99,12)" fg:x="863" fg:w="13"/><text x="2.5863%" y="399.50"></text></g><g><title>server`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (6 samples, 0.02%)</title><rect x="2.4067%" y="373" width="0.0162%" height="15" fill="rgb(226,22,26)" fg:x="889" fg:w="6"/><text x="2.6567%" y="383.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::iter_mut (19 samples, 0.05%)</title><rect x="2.3796%" y="405" width="0.0514%" height="15" fill="rgb(217,163,10)" fg:x="879" fg:w="19"/><text x="2.6296%" y="415.50"></text></g><g><title>server`core::slice::iter::IterMut&lt;T&gt;::new (18 samples, 0.05%)</title><rect x="2.3823%" y="389" width="0.0487%" height="15" fill="rgb(213,25,53)" fg:x="880" fg:w="18"/><text x="2.6323%" y="399.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::as_mut_slice (10 samples, 0.03%)</title><rect x="2.4310%" y="405" width="0.0271%" height="15" fill="rgb(252,105,26)" fg:x="898" fg:w="10"/><text x="2.6810%" y="415.50"></text></g><g><title>server`&lt;nalgebra::base::array_storage::ArrayStorage&lt;T,_,_&gt; as nalgebra::base::storage::RawStorageMut&lt;T,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;::as_mut_slice_unchecked (8 samples, 0.02%)</title><rect x="2.4364%" y="389" width="0.0217%" height="15" fill="rgb(220,39,43)" fg:x="900" fg:w="8"/><text x="2.6864%" y="399.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Mul&lt;T&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul (104 samples, 0.28%)</title><rect x="2.1793%" y="421" width="0.2815%" height="15" fill="rgb(229,68,48)" fg:x="805" fg:w="104"/><text x="2.4293%" y="431.50"></text></g><g><title>server`nalgebra::convert (4 samples, 0.01%)</title><rect x="2.4608%" y="421" width="0.0108%" height="15" fill="rgb(252,8,32)" fg:x="909" fg:w="4"/><text x="2.7108%" y="431.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::vector_to_matrix_index (5 samples, 0.01%)</title><rect x="2.4798%" y="389" width="0.0135%" height="15" fill="rgb(223,20,43)" fg:x="916" fg:w="5"/><text x="2.7298%" y="399.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::shape (4 samples, 0.01%)</title><rect x="2.4825%" y="373" width="0.0108%" height="15" fill="rgb(229,81,49)" fg:x="917" fg:w="4"/><text x="2.7325%" y="383.50"></text></g><g><title>server`nalgebra::base::indexing::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::get_unchecked (8 samples, 0.02%)</title><rect x="2.5041%" y="373" width="0.0217%" height="15" fill="rgb(236,28,36)" fg:x="925" fg:w="8"/><text x="2.7541%" y="383.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::get_unchecked (8 samples, 0.02%)</title><rect x="2.5041%" y="357" width="0.0217%" height="15" fill="rgb(249,185,26)" fg:x="925" fg:w="8"/><text x="2.7541%" y="367.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::shape (6 samples, 0.02%)</title><rect x="2.5258%" y="373" width="0.0162%" height="15" fill="rgb(249,174,33)" fg:x="933" fg:w="6"/><text x="2.7758%" y="383.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::shape_generic (4 samples, 0.01%)</title><rect x="2.5312%" y="357" width="0.0108%" height="15" fill="rgb(233,201,37)" fg:x="935" fg:w="4"/><text x="2.7812%" y="367.50"></text></g><g><title>server`nalgebra::geometry::quaternion::Quaternion&lt;T&gt;::scalar (27 samples, 0.07%)</title><rect x="2.4716%" y="421" width="0.0731%" height="15" fill="rgb(221,78,26)" fg:x="913" fg:w="27"/><text x="2.7216%" y="431.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::index::Index&lt;usize&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (27 samples, 0.07%)</title><rect x="2.4716%" y="405" width="0.0731%" height="15" fill="rgb(250,127,30)" fg:x="913" fg:w="27"/><text x="2.7216%" y="415.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::index::Index&lt;(usize,usize)&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (19 samples, 0.05%)</title><rect x="2.4933%" y="389" width="0.0514%" height="15" fill="rgb(230,49,44)" fg:x="921" fg:w="19"/><text x="2.7433%" y="399.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::get_address_unchecked_linear (4 samples, 0.01%)</title><rect x="2.5853%" y="325" width="0.0108%" height="15" fill="rgb(229,67,23)" fg:x="955" fg:w="4"/><text x="2.8353%" y="335.50"></text></g><g><title>server`nalgebra::base::matrix_slice::SliceStorage&lt;T,R,C,nalgebra::base::dimension::Dynamic,nalgebra::base::dimension::Dynamic&gt;::new_unchecked (16 samples, 0.04%)</title><rect x="2.5691%" y="373" width="0.0433%" height="15" fill="rgb(249,83,47)" fg:x="949" fg:w="16"/><text x="2.8191%" y="383.50"></text></g><g><title>server`nalgebra::base::matrix_slice::SliceStorage&lt;T,R,C,nalgebra::base::dimension::Dynamic,nalgebra::base::dimension::Dynamic&gt;::new_with_strides_unchecked (12 samples, 0.03%)</title><rect x="2.5799%" y="357" width="0.0325%" height="15" fill="rgb(215,43,3)" fg:x="953" fg:w="12"/><text x="2.8299%" y="367.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::get_address_unchecked (12 samples, 0.03%)</title><rect x="2.5799%" y="341" width="0.0325%" height="15" fill="rgb(238,154,13)" fg:x="953" fg:w="12"/><text x="2.8299%" y="351.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::linear_index (6 samples, 0.02%)</title><rect x="2.5962%" y="325" width="0.0162%" height="15" fill="rgb(219,56,2)" fg:x="959" fg:w="6"/><text x="2.8462%" y="335.50"></text></g><g><title>server`&lt;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt; as nalgebra::geometry::abstract_rotation::AbstractRotation&lt;T,3_usize&gt;&gt;::transform_point (655 samples, 1.77%)</title><rect x="0.8798%" y="469" width="1.7732%" height="15" fill="rgb(233,0,4)" fg:x="325" fg:w="655"/><text x="1.1298%" y="479.50">s..</text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::geometry::point::OPoint&lt;T,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt; for &amp;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::mul (655 samples, 1.77%)</title><rect x="0.8798%" y="453" width="1.7732%" height="15" fill="rgb(235,30,7)" fg:x="325" fg:w="655"/><text x="1.1298%" y="463.50">s..</text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,SB&gt;&gt; for &amp;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::mul (651 samples, 1.76%)</title><rect x="0.8907%" y="437" width="1.7624%" height="15" fill="rgb(250,79,13)" fg:x="329" fg:w="651"/><text x="1.1407%" y="447.50"></text></g><g><title>server`nalgebra::geometry::quaternion::Quaternion&lt;T&gt;::vector (40 samples, 0.11%)</title><rect x="2.5447%" y="421" width="0.1083%" height="15" fill="rgb(211,146,34)" fg:x="940" fg:w="40"/><text x="2.7947%" y="431.50"></text></g><g><title>server`nalgebra::base::matrix_slice::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::fixed_rows (40 samples, 0.11%)</title><rect x="2.5447%" y="405" width="0.1083%" height="15" fill="rgb(228,22,38)" fg:x="940" fg:w="40"/><text x="2.7947%" y="415.50"></text></g><g><title>server`nalgebra::base::matrix_slice::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::rows_generic (40 samples, 0.11%)</title><rect x="2.5447%" y="389" width="0.1083%" height="15" fill="rgb(235,168,5)" fg:x="940" fg:w="40"/><text x="2.7947%" y="399.50"></text></g><g><title>server`nalgebra::base::matrix_slice::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::assert_slice_index (15 samples, 0.04%)</title><rect x="2.6124%" y="373" width="0.0406%" height="15" fill="rgb(221,155,16)" fg:x="965" fg:w="15"/><text x="2.8624%" y="383.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::shape (7 samples, 0.02%)</title><rect x="2.6341%" y="357" width="0.0190%" height="15" fill="rgb(215,215,53)" fg:x="973" fg:w="7"/><text x="2.8841%" y="367.50"></text></g><g><title>server`core::mem::forget (5 samples, 0.01%)</title><rect x="2.6828%" y="421" width="0.0135%" height="15" fill="rgb(223,4,10)" fg:x="991" fg:w="5"/><text x="2.9328%" y="431.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::into_owned_sum (5 samples, 0.01%)</title><rect x="2.6990%" y="421" width="0.0135%" height="15" fill="rgb(234,103,6)" fg:x="997" fg:w="5"/><text x="2.9490%" y="431.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::shape (4 samples, 0.01%)</title><rect x="2.7126%" y="421" width="0.0108%" height="15" fill="rgb(227,97,0)" fg:x="1002" fg:w="4"/><text x="2.9626%" y="431.50"></text></g><g><title>server`&lt;nalgebra::base::array_storage::ArrayStorage&lt;T,_,_&gt; as nalgebra::base::storage::RawStorage&lt;T,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;::as_slice_unchecked (5 samples, 0.01%)</title><rect x="2.7586%" y="405" width="0.0135%" height="15" fill="rgb(234,150,53)" fg:x="1019" fg:w="5"/><text x="3.0086%" y="415.50"></text></g><g><title>server`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (6 samples, 0.02%)</title><rect x="2.7803%" y="405" width="0.0162%" height="15" fill="rgb(228,201,54)" fg:x="1027" fg:w="6"/><text x="3.0303%" y="415.50"></text></g><g><title>server`core::mem::replace (5 samples, 0.01%)</title><rect x="2.8452%" y="373" width="0.0135%" height="15" fill="rgb(222,22,37)" fg:x="1051" fg:w="5"/><text x="3.0952%" y="383.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (26 samples, 0.07%)</title><rect x="2.8019%" y="389" width="0.0704%" height="15" fill="rgb(237,53,32)" fg:x="1035" fg:w="26"/><text x="3.0519%" y="399.50"></text></g><g><title>server`core::ptr::read (5 samples, 0.01%)</title><rect x="2.8588%" y="373" width="0.0135%" height="15" fill="rgb(233,25,53)" fg:x="1056" fg:w="5"/><text x="3.1088%" y="383.50"></text></g><g><title>server`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (31 samples, 0.08%)</title><rect x="2.7965%" y="405" width="0.0839%" height="15" fill="rgb(210,40,34)" fg:x="1033" fg:w="31"/><text x="3.0465%" y="415.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::get_unchecked (7 samples, 0.02%)</title><rect x="2.8804%" y="405" width="0.0190%" height="15" fill="rgb(241,220,44)" fg:x="1064" fg:w="7"/><text x="3.1304%" y="415.50"></text></g><g><title>server`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="2.8858%" y="389" width="0.0135%" height="15" fill="rgb(235,28,35)" fg:x="1066" fg:w="5"/><text x="3.1358%" y="399.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Add&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (95 samples, 0.26%)</title><rect x="2.6611%" y="437" width="0.2572%" height="15" fill="rgb(210,56,17)" fg:x="983" fg:w="95"/><text x="2.9111%" y="447.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (72 samples, 0.19%)</title><rect x="2.7234%" y="421" width="0.1949%" height="15" fill="rgb(224,130,29)" fg:x="1006" fg:w="72"/><text x="2.9734%" y="431.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::shape (4 samples, 0.01%)</title><rect x="2.9075%" y="405" width="0.0108%" height="15" fill="rgb(235,212,8)" fg:x="1074" fg:w="4"/><text x="3.1575%" y="415.50"></text></g><g><title>server`nalgebra::geometry::isometry_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::geometry::point::OPoint&lt;T,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt; for &amp;nalgebra::geometry::isometry::Isometry&lt;T,R,_&gt;&gt;::mul (755 samples, 2.04%)</title><rect x="0.8771%" y="485" width="2.0439%" height="15" fill="rgb(223,33,50)" fg:x="324" fg:w="755"/><text x="1.1271%" y="495.50">s..</text></g><g><title>server`nalgebra::geometry::translation_ops::_&lt;impl core::ops::arith::Mul&lt;nalgebra::geometry::point::OPoint&lt;T,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt; for &amp;nalgebra::geometry::translation::Translation&lt;T,_&gt;&gt;::mul (99 samples, 0.27%)</title><rect x="2.6530%" y="469" width="0.2680%" height="15" fill="rgb(219,149,13)" fg:x="980" fg:w="99"/><text x="2.9030%" y="479.50"></text></g><g><title>server`nalgebra::geometry::point_ops::_&lt;impl core::ops::arith::Add&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,D2,nalgebra::base::dimension::Const&lt;1_usize&gt;,SB&gt;&gt; for nalgebra::geometry::point::OPoint&lt;T,D1&gt;&gt;::add (98 samples, 0.27%)</title><rect x="2.6557%" y="453" width="0.2653%" height="15" fill="rgb(250,156,29)" fg:x="981" fg:w="98"/><text x="2.9057%" y="463.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (14 samples, 0.04%)</title><rect x="3.0266%" y="421" width="0.0379%" height="15" fill="rgb(216,193,19)" fg:x="1118" fg:w="14"/><text x="3.2766%" y="431.50"></text></g><g><title>server`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (23 samples, 0.06%)</title><rect x="3.0104%" y="437" width="0.0623%" height="15" fill="rgb(216,135,14)" fg:x="1112" fg:w="23"/><text x="3.2604%" y="447.50"></text></g><g><title>server`nalgebra::base::componentwise::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::inf::_{{closure}} (13 samples, 0.04%)</title><rect x="3.0808%" y="437" width="0.0352%" height="15" fill="rgb(241,47,5)" fg:x="1138" fg:w="13"/><text x="3.3308%" y="447.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::get_unchecked_linear (12 samples, 0.03%)</title><rect x="3.1430%" y="421" width="0.0325%" height="15" fill="rgb(233,42,35)" fg:x="1161" fg:w="12"/><text x="3.3930%" y="431.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::get_address_unchecked_linear (8 samples, 0.02%)</title><rect x="3.1538%" y="405" width="0.0217%" height="15" fill="rgb(231,13,6)" fg:x="1165" fg:w="8"/><text x="3.4038%" y="415.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::get_unchecked (30 samples, 0.08%)</title><rect x="3.1241%" y="437" width="0.0812%" height="15" fill="rgb(207,181,40)" fg:x="1154" fg:w="30"/><text x="3.3741%" y="447.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::linear_index (11 samples, 0.03%)</title><rect x="3.1755%" y="421" width="0.0298%" height="15" fill="rgb(254,173,49)" fg:x="1173" fg:w="11"/><text x="3.4255%" y="431.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::linear_index (7 samples, 0.02%)</title><rect x="3.2296%" y="405" width="0.0190%" height="15" fill="rgb(221,1,38)" fg:x="1193" fg:w="7"/><text x="3.4796%" y="415.50"></text></g><g><title>server`nalgebra::base::componentwise::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::inf (121 samples, 0.33%)</title><rect x="2.9292%" y="469" width="0.3276%" height="15" fill="rgb(206,124,46)" fg:x="1082" fg:w="121"/><text x="3.1792%" y="479.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::zip_map (120 samples, 0.32%)</title><rect x="2.9319%" y="453" width="0.3249%" height="15" fill="rgb(249,21,11)" fg:x="1083" fg:w="120"/><text x="3.1819%" y="463.50"></text></g><g><title>server`nalgebra::base::storage::RawStorageMut::get_unchecked_mut (19 samples, 0.05%)</title><rect x="3.2053%" y="437" width="0.0514%" height="15" fill="rgb(222,201,40)" fg:x="1184" fg:w="19"/><text x="3.4553%" y="447.50"></text></g><g><title>server`nalgebra::base::storage::RawStorageMut::get_address_unchecked_mut (18 samples, 0.05%)</title><rect x="3.2080%" y="421" width="0.0487%" height="15" fill="rgb(235,61,29)" fg:x="1185" fg:w="18"/><text x="3.4580%" y="431.50"></text></g><g><title>server`nalgebra::geometry::point::OPoint&lt;T,D&gt;::inf (126 samples, 0.34%)</title><rect x="2.9210%" y="485" width="0.3411%" height="15" fill="rgb(219,207,3)" fg:x="1079" fg:w="126"/><text x="3.1710%" y="495.50"></text></g><g><title>server`core::mem::replace (7 samples, 0.02%)</title><rect x="3.4029%" y="405" width="0.0190%" height="15" fill="rgb(222,56,46)" fg:x="1257" fg:w="7"/><text x="3.6529%" y="415.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (19 samples, 0.05%)</title><rect x="3.3785%" y="421" width="0.0514%" height="15" fill="rgb(239,76,54)" fg:x="1248" fg:w="19"/><text x="3.6285%" y="431.50"></text></g><g><title>server`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (4 samples, 0.01%)</title><rect x="3.4300%" y="421" width="0.0108%" height="15" fill="rgb(231,124,27)" fg:x="1267" fg:w="4"/><text x="3.6800%" y="431.50"></text></g><g><title>server`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (28 samples, 0.08%)</title><rect x="3.3677%" y="437" width="0.0758%" height="15" fill="rgb(249,195,6)" fg:x="1244" fg:w="28"/><text x="3.6177%" y="447.50"></text></g><g><title>server`nalgebra::base::componentwise::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sup::_{{closure}} (13 samples, 0.04%)</title><rect x="3.4489%" y="437" width="0.0352%" height="15" fill="rgb(237,174,47)" fg:x="1274" fg:w="13"/><text x="3.6989%" y="447.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::get_unchecked_linear (13 samples, 0.04%)</title><rect x="3.5058%" y="421" width="0.0352%" height="15" fill="rgb(206,201,31)" fg:x="1295" fg:w="13"/><text x="3.7558%" y="431.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::get_address_unchecked_linear (9 samples, 0.02%)</title><rect x="3.5166%" y="405" width="0.0244%" height="15" fill="rgb(231,57,52)" fg:x="1299" fg:w="9"/><text x="3.7666%" y="415.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::get_unchecked (29 samples, 0.08%)</title><rect x="3.4922%" y="437" width="0.0785%" height="15" fill="rgb(248,177,22)" fg:x="1290" fg:w="29"/><text x="3.7422%" y="447.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::linear_index (11 samples, 0.03%)</title><rect x="3.5410%" y="421" width="0.0298%" height="15" fill="rgb(215,211,37)" fg:x="1308" fg:w="11"/><text x="3.7910%" y="431.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::linear_index (7 samples, 0.02%)</title><rect x="3.6141%" y="405" width="0.0190%" height="15" fill="rgb(241,128,51)" fg:x="1335" fg:w="7"/><text x="3.8641%" y="415.50"></text></g><g><title>server`parry3d::bounding_volume::aabb_utils::point_cloud_aabb (1,061 samples, 2.87%)</title><rect x="0.7797%" y="501" width="2.8723%" height="15" fill="rgb(227,165,31)" fg:x="288" fg:w="1061"/><text x="1.0297%" y="511.50">se..</text></g><g><title>server`nalgebra::geometry::point::OPoint&lt;T,D&gt;::sup (144 samples, 0.39%)</title><rect x="3.2621%" y="485" width="0.3898%" height="15" fill="rgb(228,167,24)" fg:x="1205" fg:w="144"/><text x="3.5121%" y="495.50"></text></g><g><title>server`nalgebra::base::componentwise::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sup (143 samples, 0.39%)</title><rect x="3.2648%" y="469" width="0.3871%" height="15" fill="rgb(228,143,12)" fg:x="1206" fg:w="143"/><text x="3.5148%" y="479.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::zip_map (139 samples, 0.38%)</title><rect x="3.2757%" y="453" width="0.3763%" height="15" fill="rgb(249,149,8)" fg:x="1210" fg:w="139"/><text x="3.5257%" y="463.50"></text></g><g><title>server`nalgebra::base::storage::RawStorageMut::get_unchecked_mut (30 samples, 0.08%)</title><rect x="3.5708%" y="437" width="0.0812%" height="15" fill="rgb(243,35,44)" fg:x="1319" fg:w="30"/><text x="3.8208%" y="447.50"></text></g><g><title>server`nalgebra::base::storage::RawStorageMut::get_address_unchecked_mut (25 samples, 0.07%)</title><rect x="3.5843%" y="421" width="0.0677%" height="15" fill="rgb(246,89,9)" fg:x="1324" fg:w="25"/><text x="3.8343%" y="431.50"></text></g><g><title>server`nalgebra::base::storage::RawStorageMut::get_address_unchecked_linear_mut (7 samples, 0.02%)</title><rect x="3.6330%" y="405" width="0.0190%" height="15" fill="rgb(233,213,13)" fg:x="1342" fg:w="7"/><text x="3.8830%" y="415.50"></text></g><g><title>server`&lt;parry3d::shape::convex_polyhedron::ConvexPolyhedron as parry3d::shape::shape::Shape&gt;::compute_aabb (1,064 samples, 2.88%)</title><rect x="0.7770%" y="533" width="2.8804%" height="15" fill="rgb(233,141,41)" fg:x="287" fg:w="1064"/><text x="1.0270%" y="543.50">se..</text></g><g><title>server`parry3d::bounding_volume::aabb_convex_polyhedron::_&lt;impl parry3d::shape::convex_polyhedron::ConvexPolyhedron&gt;::aabb (1,064 samples, 2.88%)</title><rect x="0.7770%" y="517" width="2.8804%" height="15" fill="rgb(239,167,4)" fg:x="287" fg:w="1064"/><text x="1.0270%" y="527.50">se..</text></g><g><title>server`parry3d::bounding_volume::aabb::Aabb::volume (12 samples, 0.03%)</title><rect x="3.6709%" y="533" width="0.0325%" height="15" fill="rgb(209,217,16)" fg:x="1356" fg:w="12"/><text x="3.9209%" y="543.50"></text></g><g><title>server`parry3d::bounding_volume::aabb::Aabb::extents (12 samples, 0.03%)</title><rect x="3.6709%" y="517" width="0.0325%" height="15" fill="rgb(219,88,35)" fg:x="1356" fg:w="12"/><text x="3.9209%" y="527.50"></text></g><g><title>server`nalgebra::geometry::point_ops::_&lt;impl core::ops::arith::Sub for nalgebra::geometry::point::OPoint&lt;T,D&gt;&gt;::sub (12 samples, 0.03%)</title><rect x="3.6709%" y="501" width="0.0325%" height="15" fill="rgb(220,193,23)" fg:x="1356" fg:w="12"/><text x="3.9209%" y="511.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Sub&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub (12 samples, 0.03%)</title><rect x="3.6709%" y="485" width="0.0325%" height="15" fill="rgb(230,90,52)" fg:x="1356" fg:w="12"/><text x="3.9209%" y="495.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Sub&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub (12 samples, 0.03%)</title><rect x="3.6709%" y="469" width="0.0325%" height="15" fill="rgb(252,106,19)" fg:x="1356" fg:w="12"/><text x="3.9209%" y="479.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub_assign_statically_unchecked (8 samples, 0.02%)</title><rect x="3.6817%" y="453" width="0.0217%" height="15" fill="rgb(206,74,20)" fg:x="1360" fg:w="8"/><text x="3.9317%" y="463.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::all (4 samples, 0.01%)</title><rect x="3.7061%" y="453" width="0.0108%" height="15" fill="rgb(230,138,44)" fg:x="1369" fg:w="4"/><text x="3.9561%" y="463.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.01%)</title><rect x="3.7061%" y="437" width="0.0108%" height="15" fill="rgb(235,182,43)" fg:x="1369" fg:w="4"/><text x="3.9561%" y="447.50"></text></g><g><title>server`nalgebra::partial_ge (5 samples, 0.01%)</title><rect x="3.7061%" y="501" width="0.0135%" height="15" fill="rgb(242,16,51)" fg:x="1369" fg:w="5"/><text x="3.9561%" y="511.50"></text></g><g><title>server`&lt;nalgebra::geometry::point::OPoint&lt;T,D&gt; as core::cmp::PartialOrd&gt;::ge (5 samples, 0.01%)</title><rect x="3.7061%" y="485" width="0.0135%" height="15" fill="rgb(248,9,4)" fg:x="1369" fg:w="5"/><text x="3.9561%" y="495.50"></text></g><g><title>server`&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::cmp::PartialOrd&gt;::ge (5 samples, 0.01%)</title><rect x="3.7061%" y="469" width="0.0135%" height="15" fill="rgb(210,31,22)" fg:x="1369" fg:w="5"/><text x="3.9561%" y="479.50"></text></g><g><title>server`&lt;parry3d::bounding_volume::aabb::Aabb as parry3d::bounding_volume::bounding_volume::BoundingVolume&gt;::intersects (7 samples, 0.02%)</title><rect x="3.7061%" y="517" width="0.0190%" height="15" fill="rgb(239,54,39)" fg:x="1369" fg:w="7"/><text x="3.9561%" y="527.50"></text></g><g><title>server`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (6 samples, 0.02%)</title><rect x="3.7467%" y="437" width="0.0162%" height="15" fill="rgb(230,99,41)" fg:x="1384" fg:w="6"/><text x="3.9967%" y="447.50"></text></g><g><title>server`rapier3d::geometry::broad_phase_multi_sap::sap_layer::SAPLayer::ensure_region_exists (11 samples, 0.03%)</title><rect x="3.7359%" y="517" width="0.0298%" height="15" fill="rgb(253,106,12)" fg:x="1380" fg:w="11"/><text x="3.9859%" y="527.50"></text></g><g><title>server`std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (11 samples, 0.03%)</title><rect x="3.7359%" y="501" width="0.0298%" height="15" fill="rgb(213,46,41)" fg:x="1380" fg:w="11"/><text x="3.9859%" y="511.50"></text></g><g><title>server`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (11 samples, 0.03%)</title><rect x="3.7359%" y="485" width="0.0298%" height="15" fill="rgb(215,133,35)" fg:x="1380" fg:w="11"/><text x="3.9859%" y="495.50"></text></g><g><title>server`hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.02%)</title><rect x="3.7440%" y="469" width="0.0217%" height="15" fill="rgb(213,28,5)" fg:x="1383" fg:w="8"/><text x="3.9940%" y="479.50"></text></g><g><title>server`hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.02%)</title><rect x="3.7440%" y="453" width="0.0217%" height="15" fill="rgb(215,77,49)" fg:x="1383" fg:w="8"/><text x="3.9940%" y="463.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::map (8 samples, 0.02%)</title><rect x="3.7684%" y="501" width="0.0217%" height="15" fill="rgb(248,100,22)" fg:x="1392" fg:w="8"/><text x="4.0184%" y="511.50"></text></g><g><title>server`rapier3d::geometry::broad_phase_multi_sap::sap_layer::SAPLayer::preupdate_collider (36 samples, 0.10%)</title><rect x="3.7034%" y="533" width="0.0975%" height="15" fill="rgb(208,67,9)" fg:x="1368" fg:w="36"/><text x="3.9534%" y="543.50"></text></g><g><title>server`rapier3d::geometry::broad_phase_multi_sap::sap_utils::point_key (12 samples, 0.03%)</title><rect x="3.7684%" y="517" width="0.0325%" height="15" fill="rgb(219,133,21)" fg:x="1392" fg:w="12"/><text x="4.0184%" y="527.50"></text></g><g><title>server`nalgebra::geometry::point_ops::_&lt;impl core::ops::arith::Div&lt;T&gt; for nalgebra::geometry::point::OPoint&lt;T,D&gt;&gt;::div (4 samples, 0.01%)</title><rect x="3.7900%" y="501" width="0.0108%" height="15" fill="rgb(246,46,29)" fg:x="1400" fg:w="4"/><text x="4.0400%" y="511.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Div&lt;T&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::div (4 samples, 0.01%)</title><rect x="3.7900%" y="485" width="0.0108%" height="15" fill="rgb(246,185,52)" fg:x="1400" fg:w="4"/><text x="4.0400%" y="495.50"></text></g><g><title>server`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.01%)</title><rect x="3.8117%" y="485" width="0.0135%" height="15" fill="rgb(252,136,11)" fg:x="1408" fg:w="5"/><text x="4.0617%" y="495.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::get_unchecked (4 samples, 0.01%)</title><rect x="3.8252%" y="485" width="0.0108%" height="15" fill="rgb(219,138,53)" fg:x="1413" fg:w="4"/><text x="4.0752%" y="495.50"></text></g><g><title>server`rapier3d::geometry::broad_phase_multi_sap::broad_phase::BroadPhase::handle_modified_collider (1,161 samples, 3.14%)</title><rect x="0.7012%" y="549" width="3.1430%" height="15" fill="rgb(211,51,23)" fg:x="259" fg:w="1161"/><text x="0.9512%" y="559.50">ser..</text></g><g><title>server`rapier3d::geometry::broad_phase_multi_sap::sap_utils::clamp_point (13 samples, 0.04%)</title><rect x="3.8090%" y="533" width="0.0352%" height="15" fill="rgb(247,221,28)" fg:x="1407" fg:w="13"/><text x="4.0590%" y="543.50"></text></g><g><title>server`nalgebra::geometry::point::OPoint&lt;T,D&gt;::map (13 samples, 0.04%)</title><rect x="3.8090%" y="517" width="0.0352%" height="15" fill="rgb(251,222,45)" fg:x="1407" fg:w="13"/><text x="4.0590%" y="527.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::map (13 samples, 0.04%)</title><rect x="3.8090%" y="501" width="0.0352%" height="15" fill="rgb(217,162,53)" fg:x="1407" fg:w="13"/><text x="4.0590%" y="511.50"></text></g><g><title>server`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="3.8577%" y="517" width="0.0108%" height="15" fill="rgb(229,93,14)" fg:x="1425" fg:w="4"/><text x="4.1077%" y="527.50"></text></g><g><title>server`&lt;rapier3d::geometry::broad_phase_multi_sap::sap_proxy::SAPProxies as core::ops::index::IndexMut&lt;u32&gt;&gt;::index_mut (4 samples, 0.01%)</title><rect x="3.8685%" y="517" width="0.0108%" height="15" fill="rgb(209,67,49)" fg:x="1429" fg:w="4"/><text x="4.1185%" y="527.50"></text></g><g><title>server`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (4 samples, 0.01%)</title><rect x="3.8685%" y="501" width="0.0108%" height="15" fill="rgb(213,87,29)" fg:x="1429" fg:w="4"/><text x="4.1185%" y="511.50"></text></g><g><title>server`rapier3d::geometry::broad_phase_multi_sap::sap_axis::SAPAxis::batch_insert (4 samples, 0.01%)</title><rect x="3.9200%" y="501" width="0.0108%" height="15" fill="rgb(205,151,52)" fg:x="1448" fg:w="4"/><text x="4.1700%" y="511.50"></text></g><g><title>server`&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (8 samples, 0.02%)</title><rect x="3.9795%" y="485" width="0.0217%" height="15" fill="rgb(253,215,39)" fg:x="1470" fg:w="8"/><text x="4.2295%" y="495.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::iter (5 samples, 0.01%)</title><rect x="3.9877%" y="469" width="0.0135%" height="15" fill="rgb(221,220,41)" fg:x="1473" fg:w="5"/><text x="4.2377%" y="479.50"></text></g><g><title>server`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="4.0066%" y="485" width="0.0162%" height="15" fill="rgb(218,133,21)" fg:x="1480" fg:w="6"/><text x="4.2566%" y="495.50"></text></g><g><title>server`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (6 samples, 0.02%)</title><rect x="4.0066%" y="469" width="0.0162%" height="15" fill="rgb(221,193,43)" fg:x="1480" fg:w="6"/><text x="4.2566%" y="479.50"></text></g><g><title>server`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="4.0256%" y="485" width="0.0135%" height="15" fill="rgb(240,128,52)" fg:x="1487" fg:w="5"/><text x="4.2756%" y="495.50"></text></g><g><title>server`rapier3d::geometry::broad_phase_multi_sap::sap_axis::SAPAxis::delete_out_of_bounds_proxies (42 samples, 0.11%)</title><rect x="3.9335%" y="501" width="0.1137%" height="15" fill="rgb(253,114,12)" fg:x="1453" fg:w="42"/><text x="4.1835%" y="511.50"></text></g><g><title>server`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (6 samples, 0.02%)</title><rect x="4.2557%" y="437" width="0.0162%" height="15" fill="rgb(215,223,47)" fg:x="1572" fg:w="6"/><text x="4.5057%" y="447.50"></text></g><g><title>server`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (9 samples, 0.02%)</title><rect x="4.2719%" y="437" width="0.0244%" height="15" fill="rgb(248,225,23)" fg:x="1578" fg:w="9"/><text x="4.5219%" y="447.50"></text></g><g><title>server`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (8 samples, 0.02%)</title><rect x="4.2963%" y="437" width="0.0217%" height="15" fill="rgb(250,108,0)" fg:x="1587" fg:w="8"/><text x="4.5463%" y="447.50"></text></g><g><title>server`alloc::vec::Vec&lt;T,A&gt;::as_ptr (37 samples, 0.10%)</title><rect x="4.2205%" y="453" width="0.1002%" height="15" fill="rgb(228,208,7)" fg:x="1559" fg:w="37"/><text x="4.4705%" y="463.50"></text></g><g><title>server`core::ptr::metadata::from_raw_parts (8 samples, 0.02%)</title><rect x="4.3477%" y="437" width="0.0217%" height="15" fill="rgb(244,45,10)" fg:x="1606" fg:w="8"/><text x="4.5977%" y="447.50"></text></g><g><title>server`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (75 samples, 0.20%)</title><rect x="4.1907%" y="469" width="0.2030%" height="15" fill="rgb(207,125,25)" fg:x="1548" fg:w="75"/><text x="4.4407%" y="479.50"></text></g><g><title>server`core::slice::raw::from_raw_parts (27 samples, 0.07%)</title><rect x="4.3206%" y="453" width="0.0731%" height="15" fill="rgb(210,195,18)" fg:x="1596" fg:w="27"/><text x="4.5706%" y="463.50"></text></g><g><title>server`core::ptr::slice_from_raw_parts (9 samples, 0.02%)</title><rect x="4.3694%" y="437" width="0.0244%" height="15" fill="rgb(249,80,12)" fg:x="1614" fg:w="9"/><text x="4.6194%" y="447.50"></text></g><g><title>server`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (97 samples, 0.26%)</title><rect x="4.1636%" y="485" width="0.2626%" height="15" fill="rgb(221,65,9)" fg:x="1538" fg:w="97"/><text x="4.4136%" y="495.50"></text></g><g><title>server`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (12 samples, 0.03%)</title><rect x="4.3937%" y="469" width="0.0325%" height="15" fill="rgb(235,49,36)" fg:x="1623" fg:w="12"/><text x="4.6437%" y="479.50"></text></g><g><title>server`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.02%)</title><rect x="4.4046%" y="453" width="0.0217%" height="15" fill="rgb(225,32,20)" fg:x="1627" fg:w="8"/><text x="4.6546%" y="463.50"></text></g><g><title>server`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (4 samples, 0.01%)</title><rect x="4.4804%" y="437" width="0.0108%" height="15" fill="rgb(215,141,46)" fg:x="1655" fg:w="4"/><text x="4.7304%" y="447.50"></text></g><g><title>server`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (13 samples, 0.04%)</title><rect x="4.4641%" y="453" width="0.0352%" height="15" fill="rgb(250,160,47)" fg:x="1649" fg:w="13"/><text x="4.7141%" y="463.50"></text></g><g><title>server`core::ptr::metadata::from_raw_parts_mut (4 samples, 0.01%)</title><rect x="4.5101%" y="437" width="0.0108%" height="15" fill="rgb(216,222,40)" fg:x="1666" fg:w="4"/><text x="4.7601%" y="447.50"></text></g><g><title>server`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (36 samples, 0.10%)</title><rect x="4.4452%" y="469" width="0.0975%" height="15" fill="rgb(234,217,39)" fg:x="1642" fg:w="36"/><text x="4.6952%" y="479.50"></text></g><g><title>server`core::slice::raw::from_raw_parts_mut (16 samples, 0.04%)</title><rect x="4.4993%" y="453" width="0.0433%" height="15" fill="rgb(207,178,40)" fg:x="1662" fg:w="16"/><text x="4.7493%" y="463.50"></text></g><g><title>server`core::ptr::slice_from_raw_parts_mut (8 samples, 0.02%)</title><rect x="4.5210%" y="437" width="0.0217%" height="15" fill="rgb(221,136,13)" fg:x="1670" fg:w="8"/><text x="4.7710%" y="447.50"></text></g><g><title>server`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (56 samples, 0.15%)</title><rect x="4.4262%" y="485" width="0.1516%" height="15" fill="rgb(249,199,10)" fg:x="1635" fg:w="56"/><text x="4.6762%" y="495.50"></text></g><g><title>server`core::slice::index::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (13 samples, 0.04%)</title><rect x="4.5426%" y="469" width="0.0352%" height="15" fill="rgb(249,222,13)" fg:x="1678" fg:w="13"/><text x="4.7926%" y="479.50"></text></g><g><title>server`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (6 samples, 0.02%)</title><rect x="4.5616%" y="453" width="0.0162%" height="15" fill="rgb(244,185,38)" fg:x="1685" fg:w="6"/><text x="4.8116%" y="463.50"></text></g><g><title>server`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (8 samples, 0.02%)</title><rect x="4.6265%" y="421" width="0.0217%" height="15" fill="rgb(236,202,9)" fg:x="1709" fg:w="8"/><text x="4.8765%" y="431.50"></text></g><g><title>server`alloc::vec::Vec&lt;T,A&gt;::as_ptr (19 samples, 0.05%)</title><rect x="4.6157%" y="437" width="0.0514%" height="15" fill="rgb(250,229,37)" fg:x="1705" fg:w="19"/><text x="4.8657%" y="447.50"></text></g><g><title>server`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (32 samples, 0.09%)</title><rect x="4.6022%" y="453" width="0.0866%" height="15" fill="rgb(206,174,23)" fg:x="1700" fg:w="32"/><text x="4.8522%" y="463.50"></text></g><g><title>server`core::slice::raw::from_raw_parts (8 samples, 0.02%)</title><rect x="4.6672%" y="437" width="0.0217%" height="15" fill="rgb(211,33,43)" fg:x="1724" fg:w="8"/><text x="4.9172%" y="447.50"></text></g><g><title>server`&lt;rapier3d::geometry::broad_phase_multi_sap::sap_proxy::SAPProxies as core::ops::index::Index&lt;u32&gt;&gt;::index (47 samples, 0.13%)</title><rect x="4.5778%" y="485" width="0.1272%" height="15" fill="rgb(245,58,50)" fg:x="1691" fg:w="47"/><text x="4.8278%" y="495.50"></text></g><g><title>server`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (45 samples, 0.12%)</title><rect x="4.5832%" y="469" width="0.1218%" height="15" fill="rgb(244,68,36)" fg:x="1693" fg:w="45"/><text x="4.8332%" y="479.50"></text></g><g><title>server`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (6 samples, 0.02%)</title><rect x="4.6888%" y="453" width="0.0162%" height="15" fill="rgb(232,229,15)" fg:x="1732" fg:w="6"/><text x="4.9388%" y="463.50"></text></g><g><title>server`core::mem::replace (7 samples, 0.02%)</title><rect x="4.7592%" y="453" width="0.0190%" height="15" fill="rgb(254,30,23)" fg:x="1758" fg:w="7"/><text x="5.0092%" y="463.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (28 samples, 0.08%)</title><rect x="4.7240%" y="469" width="0.0758%" height="15" fill="rgb(235,160,14)" fg:x="1745" fg:w="28"/><text x="4.9740%" y="479.50"></text></g><g><title>server`core::ptr::read (8 samples, 0.02%)</title><rect x="4.7781%" y="453" width="0.0217%" height="15" fill="rgb(212,155,44)" fg:x="1765" fg:w="8"/><text x="5.0281%" y="463.50"></text></g><g><title>server`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (5 samples, 0.01%)</title><rect x="4.7998%" y="469" width="0.0135%" height="15" fill="rgb(226,2,50)" fg:x="1773" fg:w="5"/><text x="5.0498%" y="479.50"></text></g><g><title>server`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (41 samples, 0.11%)</title><rect x="4.7051%" y="485" width="0.1110%" height="15" fill="rgb(234,177,6)" fg:x="1738" fg:w="41"/><text x="4.9551%" y="495.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::vector_to_matrix_index (18 samples, 0.05%)</title><rect x="4.8485%" y="453" width="0.0487%" height="15" fill="rgb(217,24,9)" fg:x="1791" fg:w="18"/><text x="5.0985%" y="463.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::shape (10 samples, 0.03%)</title><rect x="4.8702%" y="437" width="0.0271%" height="15" fill="rgb(220,13,46)" fg:x="1799" fg:w="10"/><text x="5.1202%" y="447.50"></text></g><g><title>server`&lt;nalgebra::base::dimension::Const&lt;_&gt; as nalgebra::base::dimension::Dim&gt;::value (4 samples, 0.01%)</title><rect x="4.9216%" y="437" width="0.0108%" height="15" fill="rgb(239,221,27)" fg:x="1818" fg:w="4"/><text x="5.1716%" y="447.50"></text></g><g><title>server`&lt;nalgebra::base::dimension::Const&lt;_&gt; as nalgebra::base::dimension::Dim&gt;::value (4 samples, 0.01%)</title><rect x="4.9568%" y="405" width="0.0108%" height="15" fill="rgb(222,198,25)" fg:x="1831" fg:w="4"/><text x="5.2068%" y="415.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::get_unchecked_linear (13 samples, 0.04%)</title><rect x="4.9676%" y="405" width="0.0352%" height="15" fill="rgb(211,99,13)" fg:x="1835" fg:w="13"/><text x="5.2176%" y="415.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::get_address_unchecked_linear (12 samples, 0.03%)</title><rect x="4.9704%" y="389" width="0.0325%" height="15" fill="rgb(232,111,31)" fg:x="1836" fg:w="12"/><text x="5.2204%" y="399.50"></text></g><g><title>server`&lt;nalgebra::base::array_storage::ArrayStorage&lt;T,_,_&gt; as nalgebra::base::storage::RawStorage&lt;T,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;::ptr (6 samples, 0.02%)</title><rect x="4.9866%" y="373" width="0.0162%" height="15" fill="rgb(245,82,37)" fg:x="1842" fg:w="6"/><text x="5.2366%" y="383.50"></text></g><g><title>server`nalgebra::base::indexing::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::get_unchecked (42 samples, 0.11%)</title><rect x="4.9325%" y="437" width="0.1137%" height="15" fill="rgb(227,149,46)" fg:x="1822" fg:w="42"/><text x="5.1825%" y="447.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::get_unchecked (38 samples, 0.10%)</title><rect x="4.9433%" y="421" width="0.1029%" height="15" fill="rgb(218,36,50)" fg:x="1826" fg:w="38"/><text x="5.1933%" y="431.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::linear_index (16 samples, 0.04%)</title><rect x="5.0028%" y="405" width="0.0433%" height="15" fill="rgb(226,80,48)" fg:x="1848" fg:w="16"/><text x="5.2528%" y="415.50"></text></g><g><title>server`rapier3d::geometry::broad_phase_multi_sap::sap_axis::SAPAxis::update_endpoints (380 samples, 1.03%)</title><rect x="4.0472%" y="501" width="1.0287%" height="15" fill="rgb(238,224,15)" fg:x="1495" fg:w="380"/><text x="4.2972%" y="511.50"></text></g><g><title>server`nalgebra::geometry::point_ops::_&lt;impl core::ops::index::Index&lt;usize&gt; for nalgebra::geometry::point::OPoint&lt;T,D&gt;&gt;::index (95 samples, 0.26%)</title><rect x="4.8188%" y="485" width="0.2572%" height="15" fill="rgb(241,136,10)" fg:x="1780" fg:w="95"/><text x="5.0688%" y="495.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::index::Index&lt;usize&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (91 samples, 0.25%)</title><rect x="4.8296%" y="469" width="0.2464%" height="15" fill="rgb(208,32,45)" fg:x="1784" fg:w="91"/><text x="5.0796%" y="479.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::index::Index&lt;(usize,usize)&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (66 samples, 0.18%)</title><rect x="4.8973%" y="453" width="0.1787%" height="15" fill="rgb(207,135,9)" fg:x="1809" fg:w="66"/><text x="5.1473%" y="463.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::shape (11 samples, 0.03%)</title><rect x="5.0462%" y="437" width="0.0298%" height="15" fill="rgb(206,86,44)" fg:x="1864" fg:w="11"/><text x="5.2962%" y="447.50"></text></g><g><title>server`rapier3d::geometry::broad_phase_multi_sap::sap_layer::SAPLayer::update_regions (458 samples, 1.24%)</title><rect x="3.8469%" y="533" width="1.2399%" height="15" fill="rgb(245,177,15)" fg:x="1421" fg:w="458"/><text x="4.0969%" y="543.50"></text></g><g><title>server`rapier3d::geometry::broad_phase_multi_sap::sap_region::SAPRegion::update (440 samples, 1.19%)</title><rect x="3.8956%" y="517" width="1.1912%" height="15" fill="rgb(206,64,50)" fg:x="1439" fg:w="440"/><text x="4.1456%" y="527.50"></text></g><g><title>server`rapier3d::geometry::broad_phase_multi_sap::sap_endpoint::SAPEndpoint::is_start (4 samples, 0.01%)</title><rect x="5.0759%" y="501" width="0.0108%" height="15" fill="rgb(234,36,40)" fg:x="1875" fg:w="4"/><text x="5.3259%" y="511.50"></text></g><g><title>server`rapier3d::geometry::broad_phase_multi_sap::broad_phase::BroadPhase::update_layers_and_find_pairs (460 samples, 1.25%)</title><rect x="3.8442%" y="549" width="1.2453%" height="15" fill="rgb(213,64,8)" fg:x="1420" fg:w="460"/><text x="4.0942%" y="559.50"></text></g><g><title>server`rapier3d::geometry::broad_phase_multi_sap::broad_phase::BroadPhase::update (1,627 samples, 4.40%)</title><rect x="0.6876%" y="565" width="4.4046%" height="15" fill="rgb(210,75,36)" fg:x="254" fg:w="1627"/><text x="0.9376%" y="575.50">serve..</text></g><g><title>server`parry3d::query::sat::sat_cuboid_cuboid::cuboid_cuboid_find_local_separating_normal_oneway (5 samples, 0.01%)</title><rect x="5.1057%" y="453" width="0.0135%" height="15" fill="rgb(229,88,21)" fg:x="1886" fg:w="5"/><text x="5.3557%" y="463.50"></text></g><g><title>server`parry3d::query::contact_manifolds::contact_manifolds_cuboid_cuboid::contact_manifold_cuboid_cuboid_shapes (18 samples, 0.05%)</title><rect x="5.0976%" y="485" width="0.0487%" height="15" fill="rgb(252,204,47)" fg:x="1883" fg:w="18"/><text x="5.3476%" y="495.50"></text></g><g><title>server`parry3d::query::contact_manifolds::contact_manifolds_cuboid_cuboid::contact_manifold_cuboid_cuboid (18 samples, 0.05%)</title><rect x="5.0976%" y="469" width="0.0487%" height="15" fill="rgb(208,77,27)" fg:x="1883" fg:w="18"/><text x="5.3476%" y="479.50"></text></g><g><title>server`parry3d::shape::polygonal_feature3d::PolygonalFeature::contacts (10 samples, 0.03%)</title><rect x="5.1193%" y="453" width="0.0271%" height="15" fill="rgb(221,76,26)" fg:x="1891" fg:w="10"/><text x="5.3693%" y="463.50"></text></g><g><title>server`parry3d::shape::polygonal_feature3d::PolygonalFeature::contacts_face_face (10 samples, 0.03%)</title><rect x="5.1193%" y="437" width="0.0271%" height="15" fill="rgb(225,139,18)" fg:x="1891" fg:w="10"/><text x="5.3693%" y="447.50"></text></g><g><title>server`parry3d::shape::polygonal_feature3d::closest_points_line2d (4 samples, 0.01%)</title><rect x="5.1355%" y="421" width="0.0108%" height="15" fill="rgb(230,137,11)" fg:x="1897" fg:w="4"/><text x="5.3855%" y="431.50"></text></g><g><title>server`parry3d::query::epa::epa3::EPA::compute_silhouette (4 samples, 0.01%)</title><rect x="5.1653%" y="437" width="0.0108%" height="15" fill="rgb(212,28,1)" fg:x="1908" fg:w="4"/><text x="5.4153%" y="447.50"></text></g><g><title>server`parry3d::query::epa::epa3::Face::new_with_proj (4 samples, 0.01%)</title><rect x="5.1815%" y="421" width="0.0108%" height="15" fill="rgb(248,164,17)" fg:x="1914" fg:w="4"/><text x="5.4315%" y="431.50"></text></g><g><title>server`parry3d::utils::ccw_face_normal::ccw_face_normal (4 samples, 0.01%)</title><rect x="5.1815%" y="405" width="0.0108%" height="15" fill="rgb(222,171,42)" fg:x="1914" fg:w="4"/><text x="5.4315%" y="415.50"></text></g><g><title>server`nalgebra::base::unit::Unit&lt;T&gt;::try_new (4 samples, 0.01%)</title><rect x="5.1815%" y="389" width="0.0108%" height="15" fill="rgb(243,84,45)" fg:x="1914" fg:w="4"/><text x="5.4315%" y="399.50"></text></g><g><title>server`nalgebra::base::unit::Unit&lt;T&gt;::try_new_and_get (4 samples, 0.01%)</title><rect x="5.1815%" y="373" width="0.0108%" height="15" fill="rgb(252,49,23)" fg:x="1914" fg:w="4"/><text x="5.4315%" y="383.50"></text></g><g><title>server`parry3d::query::point::point_triangle::_&lt;impl parry3d::query::point::point_query::PointQueryWithLocation for parry3d::shape::triangle::Triangle&gt;::project_local_point_and_get_location::stable_check_edges_voronoi (5 samples, 0.01%)</title><rect x="5.2113%" y="405" width="0.0135%" height="15" fill="rgb(215,19,7)" fg:x="1925" fg:w="5"/><text x="5.4613%" y="415.50"></text></g><g><title>server`parry3d::query::epa::epa3::Face::new (21 samples, 0.06%)</title><rect x="5.1788%" y="437" width="0.0569%" height="15" fill="rgb(238,81,41)" fg:x="1913" fg:w="21"/><text x="5.4288%" y="447.50"></text></g><g><title>server`parry3d::query::point::point_triangle::_&lt;impl parry3d::query::point::point_query::PointQueryWithLocation for parry3d::shape::triangle::Triangle&gt;::project_local_point_and_get_location (16 samples, 0.04%)</title><rect x="5.1923%" y="421" width="0.0433%" height="15" fill="rgb(210,199,37)" fg:x="1918" fg:w="16"/><text x="5.4423%" y="431.50"></text></g><g><title>server`parry3d::query::point::point_triangle::compute_result (4 samples, 0.01%)</title><rect x="5.2248%" y="405" width="0.0108%" height="15" fill="rgb(244,192,49)" fg:x="1930" fg:w="4"/><text x="5.4748%" y="415.50"></text></g><g><title>server`approx::Relative&lt;A,B&gt;::eq (4 samples, 0.01%)</title><rect x="5.2248%" y="389" width="0.0108%" height="15" fill="rgb(226,211,11)" fg:x="1930" fg:w="4"/><text x="5.4748%" y="399.50"></text></g><g><title>server`&lt;nalgebra::geometry::point::OPoint&lt;T,D&gt; as approx::relative_eq::RelativeEq&gt;::relative_eq (4 samples, 0.01%)</title><rect x="5.2248%" y="373" width="0.0108%" height="15" fill="rgb(236,162,54)" fg:x="1930" fg:w="4"/><text x="5.4748%" y="383.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::relative_eq (4 samples, 0.01%)</title><rect x="5.2248%" y="357" width="0.0108%" height="15" fill="rgb(220,229,9)" fg:x="1930" fg:w="4"/><text x="5.4748%" y="367.50"></text></g><g><title>server`&lt;parry3d::shape::convex_polyhedron::ConvexPolyhedron as parry3d::shape::support_map::SupportMap&gt;::local_support_point (6 samples, 0.02%)</title><rect x="5.2357%" y="421" width="0.0162%" height="15" fill="rgb(250,87,22)" fg:x="1934" fg:w="6"/><text x="5.4857%" y="431.50"></text></g><g><title>server`parry3d::utils::point_cloud_support_point::point_cloud_support_point (6 samples, 0.02%)</title><rect x="5.2357%" y="405" width="0.0162%" height="15" fill="rgb(239,43,17)" fg:x="1934" fg:w="6"/><text x="5.4857%" y="415.50"></text></g><g><title>server`parry3d::utils::point_cloud_support_point::point_cloud_support_point_id (6 samples, 0.02%)</title><rect x="5.2357%" y="389" width="0.0162%" height="15" fill="rgb(231,177,25)" fg:x="1934" fg:w="6"/><text x="5.4857%" y="399.50"></text></g><g><title>server`nalgebra::base::blas::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dot (6 samples, 0.02%)</title><rect x="5.2357%" y="373" width="0.0162%" height="15" fill="rgb(219,179,1)" fg:x="1934" fg:w="6"/><text x="5.4857%" y="383.50"></text></g><g><title>server`parry3d::query::epa::epa3::EPA::closest_points (38 samples, 0.10%)</title><rect x="5.1544%" y="453" width="0.1029%" height="15" fill="rgb(238,219,53)" fg:x="1904" fg:w="38"/><text x="5.4044%" y="463.50"></text></g><g><title>server`parry3d::query::gjk::cso_point::CSOPoint::from_shapes (8 samples, 0.02%)</title><rect x="5.2357%" y="437" width="0.0217%" height="15" fill="rgb(232,167,36)" fg:x="1934" fg:w="8"/><text x="5.4857%" y="447.50"></text></g><g><title>server`parry3d::query::gjk::cso_point::CSOPoint::from_shapes (6 samples, 0.02%)</title><rect x="5.2573%" y="453" width="0.0162%" height="15" fill="rgb(244,19,51)" fg:x="1942" fg:w="6"/><text x="5.5073%" y="463.50"></text></g><g><title>server`&lt;parry3d::shape::convex_polyhedron::ConvexPolyhedron as parry3d::shape::support_map::SupportMap&gt;::local_support_point (6 samples, 0.02%)</title><rect x="5.2573%" y="437" width="0.0162%" height="15" fill="rgb(224,6,22)" fg:x="1942" fg:w="6"/><text x="5.5073%" y="447.50"></text></g><g><title>server`parry3d::utils::point_cloud_support_point::point_cloud_support_point (6 samples, 0.02%)</title><rect x="5.2573%" y="421" width="0.0162%" height="15" fill="rgb(224,145,5)" fg:x="1942" fg:w="6"/><text x="5.5073%" y="431.50"></text></g><g><title>server`parry3d::utils::point_cloud_support_point::point_cloud_support_point_id (5 samples, 0.01%)</title><rect x="5.2600%" y="405" width="0.0135%" height="15" fill="rgb(234,130,49)" fg:x="1943" fg:w="5"/><text x="5.5100%" y="415.50"></text></g><g><title>server`nalgebra::base::blas::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dot (4 samples, 0.01%)</title><rect x="5.2627%" y="389" width="0.0108%" height="15" fill="rgb(254,6,2)" fg:x="1944" fg:w="4"/><text x="5.5127%" y="399.50"></text></g><g><title>server`&lt;parry3d::shape::convex_polyhedron::ConvexPolyhedron as parry3d::shape::support_map::SupportMap&gt;::local_support_point (8 samples, 0.02%)</title><rect x="5.2763%" y="421" width="0.0217%" height="15" fill="rgb(208,96,46)" fg:x="1949" fg:w="8"/><text x="5.5263%" y="431.50"></text></g><g><title>server`parry3d::utils::point_cloud_support_point::point_cloud_support_point (8 samples, 0.02%)</title><rect x="5.2763%" y="405" width="0.0217%" height="15" fill="rgb(239,3,39)" fg:x="1949" fg:w="8"/><text x="5.5263%" y="415.50"></text></g><g><title>server`parry3d::utils::point_cloud_support_point::point_cloud_support_point_id (8 samples, 0.02%)</title><rect x="5.2763%" y="389" width="0.0217%" height="15" fill="rgb(233,210,1)" fg:x="1949" fg:w="8"/><text x="5.5263%" y="399.50"></text></g><g><title>server`nalgebra::base::blas::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dot (7 samples, 0.02%)</title><rect x="5.2790%" y="373" width="0.0190%" height="15" fill="rgb(244,137,37)" fg:x="1950" fg:w="7"/><text x="5.5290%" y="383.50"></text></g><g><title>server`parry3d::query::gjk::cso_point::CSOPoint::from_shapes (10 samples, 0.03%)</title><rect x="5.2763%" y="437" width="0.0271%" height="15" fill="rgb(240,136,2)" fg:x="1949" fg:w="10"/><text x="5.5263%" y="447.50"></text></g><g><title>server`parry3d::query::point::point_tetrahedron::_&lt;impl parry3d::query::point::point_query::PointQueryWithLocation for parry3d::shape::tetrahedron::Tetrahedron&gt;::project_local_point_and_get_location (10 samples, 0.03%)</title><rect x="5.3115%" y="421" width="0.0271%" height="15" fill="rgb(239,18,37)" fg:x="1962" fg:w="10"/><text x="5.5615%" y="431.50"></text></g><g><title>server`parry3d::query::contact::contact_support_map_support_map::contact_support_map_support_map_with_params (70 samples, 0.19%)</title><rect x="5.1544%" y="469" width="0.1895%" height="15" fill="rgb(218,185,22)" fg:x="1904" fg:w="70"/><text x="5.4044%" y="479.50"></text></g><g><title>server`parry3d::query::gjk::gjk::closest_points (26 samples, 0.07%)</title><rect x="5.2736%" y="453" width="0.0704%" height="15" fill="rgb(225,218,4)" fg:x="1948" fg:w="26"/><text x="5.5236%" y="463.50"></text></g><g><title>server`parry3d::query::gjk::voronoi_simplex3::VoronoiSimplex::project_origin_and_reduce (12 samples, 0.03%)</title><rect x="5.3115%" y="437" width="0.0325%" height="15" fill="rgb(230,182,32)" fg:x="1962" fg:w="12"/><text x="5.5615%" y="447.50"></text></g><g><title>server`&lt;parry3d::query::default_query_dispatcher::DefaultQueryDispatcher as parry3d::query::query_dispatcher::PersistentQueryDispatcher&lt;ManifoldData,ContactData&gt;&gt;::contact_manifolds (111 samples, 0.30%)</title><rect x="5.0976%" y="517" width="0.3005%" height="15" fill="rgb(242,56,43)" fg:x="1883" fg:w="111"/><text x="5.3476%" y="527.50"></text></g><g><title>server`&lt;parry3d::query::default_query_dispatcher::DefaultQueryDispatcher as parry3d::query::query_dispatcher::PersistentQueryDispatcher&lt;ManifoldData,ContactData&gt;&gt;::contact_manifold_convex_convex (111 samples, 0.30%)</title><rect x="5.0976%" y="501" width="0.3005%" height="15" fill="rgb(233,99,24)" fg:x="1883" fg:w="111"/><text x="5.3476%" y="511.50"></text></g><g><title>server`parry3d::query::contact_manifolds::contact_manifolds_pfm_pfm::contact_manifold_pfm_pfm (93 samples, 0.25%)</title><rect x="5.1463%" y="485" width="0.2518%" height="15" fill="rgb(234,209,42)" fg:x="1901" fg:w="93"/><text x="5.3963%" y="495.50"></text></g><g><title>server`parry3d::shape::polygonal_feature3d::PolygonalFeature::contacts (19 samples, 0.05%)</title><rect x="5.3467%" y="469" width="0.0514%" height="15" fill="rgb(227,7,12)" fg:x="1975" fg:w="19"/><text x="5.5967%" y="479.50"></text></g><g><title>server`parry3d::shape::polygonal_feature3d::PolygonalFeature::contacts_face_face (19 samples, 0.05%)</title><rect x="5.3467%" y="453" width="0.0514%" height="15" fill="rgb(245,203,43)" fg:x="1975" fg:w="19"/><text x="5.5967%" y="463.50"></text></g><g><title>server`parry3d::shape::polygonal_feature3d::closest_points_line2d (9 samples, 0.02%)</title><rect x="5.3737%" y="437" width="0.0244%" height="15" fill="rgb(238,205,33)" fg:x="1985" fg:w="9"/><text x="5.6237%" y="447.50"></text></g><g><title>server`nalgebra::geometry::point_ops::_&lt;impl core::ops::arith::Sub for nalgebra::geometry::point::OPoint&lt;T,D&gt;&gt;::sub (5 samples, 0.01%)</title><rect x="5.3846%" y="421" width="0.0135%" height="15" fill="rgb(231,56,7)" fg:x="1989" fg:w="5"/><text x="5.6346%" y="431.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Sub&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub (5 samples, 0.01%)</title><rect x="5.3846%" y="405" width="0.0135%" height="15" fill="rgb(244,186,29)" fg:x="1989" fg:w="5"/><text x="5.6346%" y="415.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Sub&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub (5 samples, 0.01%)</title><rect x="5.3846%" y="389" width="0.0135%" height="15" fill="rgb(234,111,31)" fg:x="1989" fg:w="5"/><text x="5.6346%" y="399.50"></text></g><g><title>server`&lt;rapier3d::geometry::collider_set::ColliderSet as core::ops::index::Index&lt;rapier3d::geometry::collider_components::ColliderHandle&gt;&gt;::index (5 samples, 0.01%)</title><rect x="5.4008%" y="517" width="0.0135%" height="15" fill="rgb(241,149,10)" fg:x="1995" fg:w="5"/><text x="5.6508%" y="527.50"></text></g><g><title>server`&lt;rapier3d::data::arena::Arena&lt;T&gt; as core::ops::index::Index&lt;rapier3d::data::arena::Index&gt;&gt;::index (5 samples, 0.01%)</title><rect x="5.4008%" y="501" width="0.0135%" height="15" fill="rgb(249,206,44)" fg:x="1995" fg:w="5"/><text x="5.6508%" y="511.50"></text></g><g><title>server`rapier3d::data::arena::Arena&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="5.4008%" y="485" width="0.0135%" height="15" fill="rgb(251,153,30)" fg:x="1995" fg:w="5"/><text x="5.6508%" y="495.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::get (4 samples, 0.01%)</title><rect x="5.4035%" y="469" width="0.0108%" height="15" fill="rgb(239,152,38)" fg:x="1996" fg:w="4"/><text x="5.6535%" y="479.50"></text></g><g><title>server`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (4 samples, 0.01%)</title><rect x="5.4035%" y="453" width="0.0108%" height="15" fill="rgb(249,139,47)" fg:x="1996" fg:w="4"/><text x="5.6535%" y="463.50"></text></g><g><title>server`rapier3d::geometry::narrow_phase::NarrowPhase::compute_contacts (120 samples, 0.32%)</title><rect x="5.0922%" y="565" width="0.3249%" height="15" fill="rgb(244,64,35)" fg:x="1881" fg:w="120"/><text x="5.3422%" y="575.50"></text></g><g><title>server`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (120 samples, 0.32%)</title><rect x="5.0922%" y="549" width="0.3249%" height="15" fill="rgb(216,46,15)" fg:x="1881" fg:w="120"/><text x="5.3422%" y="559.50"></text></g><g><title>server`rapier3d::geometry::narrow_phase::NarrowPhase::compute_contacts::_{{closure}} (118 samples, 0.32%)</title><rect x="5.0976%" y="533" width="0.3194%" height="15" fill="rgb(250,74,19)" fg:x="1883" fg:w="118"/><text x="5.3476%" y="543.50"></text></g><g><title>server`rapier3d::pipeline::physics_pipeline::PhysicsPipeline::detect_collisions (1,750 samples, 4.74%)</title><rect x="0.6849%" y="581" width="4.7375%" height="15" fill="rgb(249,42,33)" fg:x="253" fg:w="1750"/><text x="0.9349%" y="591.50">server..</text></g><g><title>server`nalgebra::geometry::quaternion::Quaternion&lt;T&gt;::exp_eps::_{{closure}} (5 samples, 0.01%)</title><rect x="5.4387%" y="469" width="0.0135%" height="15" fill="rgb(242,149,17)" fg:x="2009" fg:w="5"/><text x="5.6887%" y="479.50"></text></g><g><title>server`nalgebra::geometry::quaternion::Quaternion&lt;T&gt;::exp (7 samples, 0.02%)</title><rect x="5.4360%" y="501" width="0.0190%" height="15" fill="rgb(244,29,21)" fg:x="2008" fg:w="7"/><text x="5.6860%" y="511.50"></text></g><g><title>server`nalgebra::geometry::quaternion::Quaternion&lt;T&gt;::exp_eps (7 samples, 0.02%)</title><rect x="5.4360%" y="485" width="0.0190%" height="15" fill="rgb(220,130,37)" fg:x="2008" fg:w="7"/><text x="5.6860%" y="495.50"></text></g><g><title>server`nalgebra::geometry::isometry_construction::_&lt;impl nalgebra::geometry::isometry::Isometry&lt;T,nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;,3_usize&gt;&gt;::new (8 samples, 0.02%)</title><rect x="5.4360%" y="549" width="0.0217%" height="15" fill="rgb(211,67,2)" fg:x="2008" fg:w="8"/><text x="5.6860%" y="559.50"></text></g><g><title>server`nalgebra::geometry::quaternion_construction::_&lt;impl nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::from_scaled_axis (8 samples, 0.02%)</title><rect x="5.4360%" y="533" width="0.0217%" height="15" fill="rgb(235,68,52)" fg:x="2008" fg:w="8"/><text x="5.6860%" y="543.50"></text></g><g><title>server`nalgebra::geometry::quaternion_construction::_&lt;impl nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::new (8 samples, 0.02%)</title><rect x="5.4360%" y="517" width="0.0217%" height="15" fill="rgb(246,142,3)" fg:x="2008" fg:w="8"/><text x="5.6860%" y="527.50"></text></g><g><title>server`&lt;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt; as nalgebra::geometry::abstract_rotation::AbstractRotation&lt;T,3_usize&gt;&gt;::transform_vector (4 samples, 0.01%)</title><rect x="5.4576%" y="517" width="0.0108%" height="15" fill="rgb(241,25,7)" fg:x="2016" fg:w="4"/><text x="5.7076%" y="527.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,SB&gt;&gt; for &amp;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::mul (4 samples, 0.01%)</title><rect x="5.4576%" y="501" width="0.0108%" height="15" fill="rgb(242,119,39)" fg:x="2016" fg:w="4"/><text x="5.7076%" y="511.50"></text></g><g><title>server`nalgebra::geometry::isometry_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::geometry::isometry::Isometry&lt;T,R,_&gt;&gt; for nalgebra::geometry::isometry::Isometry&lt;T,R,_&gt;&gt;::mul (8 samples, 0.02%)</title><rect x="5.4576%" y="549" width="0.0217%" height="15" fill="rgb(241,98,45)" fg:x="2016" fg:w="8"/><text x="5.7076%" y="559.50"></text></g><g><title>server`nalgebra::geometry::isometry_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::geometry::isometry::Isometry&lt;T,R,_&gt;&gt; for &amp;nalgebra::geometry::isometry::Isometry&lt;T,R,_&gt;&gt;::mul (8 samples, 0.02%)</title><rect x="5.4576%" y="533" width="0.0217%" height="15" fill="rgb(254,28,30)" fg:x="2016" fg:w="8"/><text x="5.7076%" y="543.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul for nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::mul (4 samples, 0.01%)</title><rect x="5.4685%" y="517" width="0.0108%" height="15" fill="rgb(241,142,54)" fg:x="2020" fg:w="4"/><text x="5.7185%" y="527.50"></text></g><g><title>server`&lt;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt; as nalgebra::geometry::abstract_rotation::AbstractRotation&lt;T,3_usize&gt;&gt;::transform_point (7 samples, 0.02%)</title><rect x="5.4793%" y="533" width="0.0190%" height="15" fill="rgb(222,85,15)" fg:x="2024" fg:w="7"/><text x="5.7293%" y="543.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::geometry::point::OPoint&lt;T,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt; for &amp;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::mul (7 samples, 0.02%)</title><rect x="5.4793%" y="517" width="0.0190%" height="15" fill="rgb(210,85,47)" fg:x="2024" fg:w="7"/><text x="5.7293%" y="527.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,SB&gt;&gt; for &amp;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::mul (6 samples, 0.02%)</title><rect x="5.4820%" y="501" width="0.0162%" height="15" fill="rgb(224,206,25)" fg:x="2025" fg:w="6"/><text x="5.7320%" y="511.50"></text></g><g><title>server`nalgebra::geometry::isometry_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::geometry::point::OPoint&lt;T,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt; for &amp;nalgebra::geometry::isometry::Isometry&lt;T,R,_&gt;&gt;::mul (8 samples, 0.02%)</title><rect x="5.4793%" y="549" width="0.0217%" height="15" fill="rgb(243,201,19)" fg:x="2024" fg:w="8"/><text x="5.7293%" y="559.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::cross (4 samples, 0.01%)</title><rect x="5.5037%" y="485" width="0.0108%" height="15" fill="rgb(236,59,4)" fg:x="2033" fg:w="4"/><text x="5.7537%" y="495.50"></text></g><g><title>server`&lt;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt; as nalgebra::geometry::abstract_rotation::AbstractRotation&lt;T,3_usize&gt;&gt;::transform_vector (7 samples, 0.02%)</title><rect x="5.5037%" y="517" width="0.0190%" height="15" fill="rgb(254,179,45)" fg:x="2033" fg:w="7"/><text x="5.7537%" y="527.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,SB&gt;&gt; for &amp;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::mul (7 samples, 0.02%)</title><rect x="5.5037%" y="501" width="0.0190%" height="15" fill="rgb(226,14,10)" fg:x="2033" fg:w="7"/><text x="5.7537%" y="511.50"></text></g><g><title>server`nalgebra::geometry::isometry_ops::_&lt;impl core::ops::arith::Mul&lt;nalgebra::geometry::translation::Translation&lt;T,_&gt;&gt; for nalgebra::geometry::isometry::Isometry&lt;T,R,_&gt;&gt;::mul (9 samples, 0.02%)</title><rect x="5.5010%" y="549" width="0.0244%" height="15" fill="rgb(244,27,41)" fg:x="2032" fg:w="9"/><text x="5.7510%" y="559.50"></text></g><g><title>server`nalgebra::geometry::isometry_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::geometry::translation::Translation&lt;T,_&gt;&gt; for &amp;nalgebra::geometry::isometry::Isometry&lt;T,R,_&gt;&gt;::mul (8 samples, 0.02%)</title><rect x="5.5037%" y="533" width="0.0217%" height="15" fill="rgb(235,35,32)" fg:x="2033" fg:w="8"/><text x="5.7537%" y="543.50"></text></g><g><title>server`rapier3d::dynamics::rigid_body_components::RigidBodyVelocity::integrate (37 samples, 0.10%)</title><rect x="5.4279%" y="565" width="0.1002%" height="15" fill="rgb(218,68,31)" fg:x="2005" fg:w="37"/><text x="5.6779%" y="575.50"></text></g><g><title>server`rapier3d::pipeline::physics_pipeline::PhysicsPipeline::interpolate_kinematic_velocities (41 samples, 0.11%)</title><rect x="5.4225%" y="581" width="0.1110%" height="15" fill="rgb(207,120,37)" fg:x="2003" fg:w="41"/><text x="5.6725%" y="591.50"></text></g><g><title>server`rapier3d::pipeline::physics_pipeline::PhysicsPipeline::step (2,019 samples, 5.47%)</title><rect x="0.0704%" y="597" width="5.4658%" height="15" fill="rgb(227,98,0)" fg:x="26" fg:w="2019"/><text x="0.3204%" y="607.50">server`..</text></g><g><title>server`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="5.5741%" y="165" width="0.0108%" height="15" fill="rgb(207,7,3)" fg:x="2059" fg:w="4"/><text x="5.8241%" y="175.50"></text></g><g><title>server`core::str::traits::_&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (4 samples, 0.01%)</title><rect x="5.5876%" y="165" width="0.0108%" height="15" fill="rgb(206,98,19)" fg:x="2064" fg:w="4"/><text x="5.8376%" y="175.50"></text></g><g><title>server`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (4 samples, 0.01%)</title><rect x="5.5876%" y="149" width="0.0108%" height="15" fill="rgb(217,5,26)" fg:x="2064" fg:w="4"/><text x="5.8376%" y="159.50"></text></g><g><title>server`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (13 samples, 0.04%)</title><rect x="5.5686%" y="261" width="0.0352%" height="15" fill="rgb(235,190,38)" fg:x="2057" fg:w="13"/><text x="5.8186%" y="271.50"></text></g><g><title>server`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (12 samples, 0.03%)</title><rect x="5.5713%" y="245" width="0.0325%" height="15" fill="rgb(247,86,24)" fg:x="2058" fg:w="12"/><text x="5.8213%" y="255.50"></text></g><g><title>server`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (12 samples, 0.03%)</title><rect x="5.5713%" y="229" width="0.0325%" height="15" fill="rgb(205,101,16)" fg:x="2058" fg:w="12"/><text x="5.8213%" y="239.50"></text></g><g><title>server`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (12 samples, 0.03%)</title><rect x="5.5713%" y="213" width="0.0325%" height="15" fill="rgb(246,168,33)" fg:x="2058" fg:w="12"/><text x="5.8213%" y="223.50"></text></g><g><title>server`serde_json::ser::format_escaped_str (12 samples, 0.03%)</title><rect x="5.5713%" y="197" width="0.0325%" height="15" fill="rgb(231,114,1)" fg:x="2058" fg:w="12"/><text x="5.8213%" y="207.50"></text></g><g><title>server`serde_json::ser::format_escaped_str_contents (11 samples, 0.03%)</title><rect x="5.5741%" y="181" width="0.0298%" height="15" fill="rgb(207,184,53)" fg:x="2059" fg:w="11"/><text x="5.8241%" y="191.50"></text></g><g><title>server`serde::ser::impls::_&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (5 samples, 0.01%)</title><rect x="5.6065%" y="245" width="0.0135%" height="15" fill="rgb(224,95,51)" fg:x="2071" fg:w="5"/><text x="5.8565%" y="255.50"></text></g><g><title>server`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (5 samples, 0.01%)</title><rect x="5.6065%" y="229" width="0.0135%" height="15" fill="rgb(212,188,45)" fg:x="2071" fg:w="5"/><text x="5.8565%" y="239.50"></text></g><g><title>server`serde_json::ser::format_escaped_str (5 samples, 0.01%)</title><rect x="5.6065%" y="213" width="0.0135%" height="15" fill="rgb(223,154,38)" fg:x="2071" fg:w="5"/><text x="5.8565%" y="223.50"></text></g><g><title>server`serde_json::ser::format_escaped_str_contents (5 samples, 0.01%)</title><rect x="5.6065%" y="197" width="0.0135%" height="15" fill="rgb(251,22,52)" fg:x="2071" fg:w="5"/><text x="5.8565%" y="207.50"></text></g><g><title>server`serde_json::ser::Formatter::begin_object_value (4 samples, 0.01%)</title><rect x="5.6201%" y="245" width="0.0108%" height="15" fill="rgb(229,209,22)" fg:x="2076" fg:w="4"/><text x="5.8701%" y="255.50"></text></g><g><title>server`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (4 samples, 0.01%)</title><rect x="5.6201%" y="229" width="0.0108%" height="15" fill="rgb(234,138,34)" fg:x="2076" fg:w="4"/><text x="5.8701%" y="239.50"></text></g><g><title>server`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (4 samples, 0.01%)</title><rect x="5.6201%" y="213" width="0.0108%" height="15" fill="rgb(212,95,11)" fg:x="2076" fg:w="4"/><text x="5.8701%" y="223.50"></text></g><g><title>server`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.01%)</title><rect x="5.6201%" y="197" width="0.0108%" height="15" fill="rgb(240,179,47)" fg:x="2076" fg:w="4"/><text x="5.8701%" y="207.50"></text></g><g><title>server`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (10 samples, 0.03%)</title><rect x="5.6390%" y="181" width="0.0271%" height="15" fill="rgb(240,163,11)" fg:x="2083" fg:w="10"/><text x="5.8890%" y="191.50"></text></g><g><title>server`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (10 samples, 0.03%)</title><rect x="5.6390%" y="165" width="0.0271%" height="15" fill="rgb(236,37,12)" fg:x="2083" fg:w="10"/><text x="5.8890%" y="175.50"></text></g><g><title>server`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (10 samples, 0.03%)</title><rect x="5.6390%" y="149" width="0.0271%" height="15" fill="rgb(232,164,16)" fg:x="2083" fg:w="10"/><text x="5.8890%" y="159.50"></text></g><g><title>server`serde_json::ser::format_escaped_str (10 samples, 0.03%)</title><rect x="5.6390%" y="133" width="0.0271%" height="15" fill="rgb(244,205,15)" fg:x="2083" fg:w="10"/><text x="5.8890%" y="143.50"></text></g><g><title>server`serde_json::ser::format_escaped_str_contents (6 samples, 0.02%)</title><rect x="5.6499%" y="117" width="0.0162%" height="15" fill="rgb(223,117,47)" fg:x="2087" fg:w="6"/><text x="5.8999%" y="127.50"></text></g><g><title>server`serde_json::ser::Formatter::write_string_fragment (4 samples, 0.01%)</title><rect x="5.6553%" y="101" width="0.0108%" height="15" fill="rgb(244,107,35)" fg:x="2089" fg:w="4"/><text x="5.9053%" y="111.50"></text></g><g><title>server`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (4 samples, 0.01%)</title><rect x="5.6553%" y="85" width="0.0108%" height="15" fill="rgb(205,140,8)" fg:x="2089" fg:w="4"/><text x="5.9053%" y="95.50"></text></g><g><title>server`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (4 samples, 0.01%)</title><rect x="5.6553%" y="69" width="0.0108%" height="15" fill="rgb(228,84,46)" fg:x="2089" fg:w="4"/><text x="5.9053%" y="79.50"></text></g><g><title>server`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.01%)</title><rect x="5.6553%" y="53" width="0.0108%" height="15" fill="rgb(254,188,9)" fg:x="2089" fg:w="4"/><text x="5.9053%" y="63.50"></text></g><g><title>server`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.01%)</title><rect x="5.6553%" y="37" width="0.0108%" height="15" fill="rgb(206,112,54)" fg:x="2089" fg:w="4"/><text x="5.9053%" y="47.50"></text></g><g><title>server`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (11 samples, 0.03%)</title><rect x="5.6390%" y="197" width="0.0298%" height="15" fill="rgb(216,84,49)" fg:x="2083" fg:w="11"/><text x="5.8890%" y="207.50"></text></g><g><title>server`ryu::f2s::f2d (4 samples, 0.01%)</title><rect x="5.6742%" y="85" width="0.0108%" height="15" fill="rgb(214,194,35)" fg:x="2096" fg:w="4"/><text x="5.9242%" y="95.50"></text></g><g><title>server`&lt;f32 as ryu::buffer::Sealed&gt;::write_to_ryu_buffer (6 samples, 0.02%)</title><rect x="5.6715%" y="117" width="0.0162%" height="15" fill="rgb(249,28,3)" fg:x="2095" fg:w="6"/><text x="5.9215%" y="127.50"></text></g><g><title>server`ryu::pretty::format32 (6 samples, 0.02%)</title><rect x="5.6715%" y="101" width="0.0162%" height="15" fill="rgb(222,56,52)" fg:x="2095" fg:w="6"/><text x="5.9215%" y="111.50"></text></g><g><title>server`ryu::buffer::Buffer::format_finite (7 samples, 0.02%)</title><rect x="5.6715%" y="133" width="0.0190%" height="15" fill="rgb(245,217,50)" fg:x="2095" fg:w="7"/><text x="5.9215%" y="143.50"></text></g><g><title>server`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (12 samples, 0.03%)</title><rect x="5.6688%" y="181" width="0.0325%" height="15" fill="rgb(213,201,24)" fg:x="2094" fg:w="12"/><text x="5.9188%" y="191.50"></text></g><g><title>server`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_f32 (12 samples, 0.03%)</title><rect x="5.6688%" y="165" width="0.0325%" height="15" fill="rgb(248,116,28)" fg:x="2094" fg:w="12"/><text x="5.9188%" y="175.50"></text></g><g><title>server`serde_json::ser::Formatter::write_f32 (11 samples, 0.03%)</title><rect x="5.6715%" y="149" width="0.0298%" height="15" fill="rgb(219,72,43)" fg:x="2095" fg:w="11"/><text x="5.9215%" y="159.50"></text></g><g><title>server`std::io::impls::_&lt;impl std::io::Write for &amp;mut W&gt;::write_all (4 samples, 0.01%)</title><rect x="5.6905%" y="133" width="0.0108%" height="15" fill="rgb(209,138,14)" fg:x="2102" fg:w="4"/><text x="5.9405%" y="143.50"></text></g><g><title>server`std::io::impls::_&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (4 samples, 0.01%)</title><rect x="5.6905%" y="117" width="0.0108%" height="15" fill="rgb(222,18,33)" fg:x="2102" fg:w="4"/><text x="5.9405%" y="127.50"></text></g><g><title>server`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.01%)</title><rect x="5.6905%" y="101" width="0.0108%" height="15" fill="rgb(213,199,7)" fg:x="2102" fg:w="4"/><text x="5.9405%" y="111.50"></text></g><g><title>server`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.01%)</title><rect x="5.6905%" y="85" width="0.0108%" height="15" fill="rgb(250,110,10)" fg:x="2102" fg:w="4"/><text x="5.9405%" y="95.50"></text></g><g><title>server`server::structs::_::_&lt;impl serde::ser::Serialize for server::structs::Quat&gt;::serialize (28 samples, 0.08%)</title><rect x="5.6309%" y="245" width="0.0758%" height="15" fill="rgb(248,123,6)" fg:x="2080" fg:w="28"/><text x="5.8809%" y="255.50"></text></g><g><title>server`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (25 samples, 0.07%)</title><rect x="5.6390%" y="229" width="0.0677%" height="15" fill="rgb(206,91,31)" fg:x="2083" fg:w="25"/><text x="5.8890%" y="239.50"></text></g><g><title>server`serde::ser::SerializeMap::serialize_entry (25 samples, 0.07%)</title><rect x="5.6390%" y="213" width="0.0677%" height="15" fill="rgb(211,154,13)" fg:x="2083" fg:w="25"/><text x="5.8890%" y="223.50"></text></g><g><title>server`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 0.04%)</title><rect x="5.6688%" y="197" width="0.0379%" height="15" fill="rgb(225,148,7)" fg:x="2094" fg:w="14"/><text x="5.9188%" y="207.50"></text></g><g><title>server`serde::ser::impls::_&lt;impl serde::ser::Serialize for str&gt;::serialize (10 samples, 0.03%)</title><rect x="5.7121%" y="181" width="0.0271%" height="15" fill="rgb(220,160,43)" fg:x="2110" fg:w="10"/><text x="5.9621%" y="191.50"></text></g><g><title>server`&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (10 samples, 0.03%)</title><rect x="5.7121%" y="165" width="0.0271%" height="15" fill="rgb(213,52,39)" fg:x="2110" fg:w="10"/><text x="5.9621%" y="175.50"></text></g><g><title>server`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (10 samples, 0.03%)</title><rect x="5.7121%" y="149" width="0.0271%" height="15" fill="rgb(243,137,7)" fg:x="2110" fg:w="10"/><text x="5.9621%" y="159.50"></text></g><g><title>server`serde_json::ser::format_escaped_str (10 samples, 0.03%)</title><rect x="5.7121%" y="133" width="0.0271%" height="15" fill="rgb(230,79,13)" fg:x="2110" fg:w="10"/><text x="5.9621%" y="143.50"></text></g><g><title>server`serde_json::ser::format_escaped_str_contents (5 samples, 0.01%)</title><rect x="5.7257%" y="117" width="0.0135%" height="15" fill="rgb(247,105,23)" fg:x="2115" fg:w="5"/><text x="5.9757%" y="127.50"></text></g><g><title>server`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (11 samples, 0.03%)</title><rect x="5.7121%" y="197" width="0.0298%" height="15" fill="rgb(223,179,41)" fg:x="2110" fg:w="11"/><text x="5.9621%" y="207.50"></text></g><g><title>server`ryu::f2s::f2d (8 samples, 0.02%)</title><rect x="5.7473%" y="85" width="0.0217%" height="15" fill="rgb(218,9,34)" fg:x="2123" fg:w="8"/><text x="5.9973%" y="95.50"></text></g><g><title>server`ryu::f2s_intrinsics::mul_pow5_div_pow2 (5 samples, 0.01%)</title><rect x="5.7554%" y="69" width="0.0135%" height="15" fill="rgb(222,106,8)" fg:x="2126" fg:w="5"/><text x="6.0054%" y="79.50"></text></g><g><title>server`ryu::buffer::Buffer::format_finite (10 samples, 0.03%)</title><rect x="5.7446%" y="133" width="0.0271%" height="15" fill="rgb(211,220,0)" fg:x="2122" fg:w="10"/><text x="5.9946%" y="143.50"></text></g><g><title>server`&lt;f32 as ryu::buffer::Sealed&gt;::write_to_ryu_buffer (10 samples, 0.03%)</title><rect x="5.7446%" y="117" width="0.0271%" height="15" fill="rgb(229,52,16)" fg:x="2122" fg:w="10"/><text x="5.9946%" y="127.50"></text></g><g><title>server`ryu::pretty::format32 (10 samples, 0.03%)</title><rect x="5.7446%" y="101" width="0.0271%" height="15" fill="rgb(212,155,18)" fg:x="2122" fg:w="10"/><text x="5.9946%" y="111.50"></text></g><g><title>server`serde::ser::impls::_&lt;impl serde::ser::Serialize for f32&gt;::serialize (13 samples, 0.04%)</title><rect x="5.7419%" y="181" width="0.0352%" height="15" fill="rgb(242,21,14)" fg:x="2121" fg:w="13"/><text x="5.9919%" y="191.50"></text></g><g><title>server`&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_f32 (13 samples, 0.04%)</title><rect x="5.7419%" y="165" width="0.0352%" height="15" fill="rgb(222,19,48)" fg:x="2121" fg:w="13"/><text x="5.9919%" y="175.50"></text></g><g><title>server`serde_json::ser::Formatter::write_f32 (12 samples, 0.03%)</title><rect x="5.7446%" y="149" width="0.0325%" height="15" fill="rgb(232,45,27)" fg:x="2122" fg:w="12"/><text x="5.9946%" y="159.50"></text></g><g><title>server`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 0.04%)</title><rect x="5.7419%" y="197" width="0.0406%" height="15" fill="rgb(249,103,42)" fg:x="2121" fg:w="15"/><text x="5.9919%" y="207.50"></text></g><g><title>server`serde::ser::impls::_&lt;impl serde::ser::Serialize for std::collections::hash::map::HashMap&lt;K,V,H&gt;&gt;::serialize (87 samples, 0.24%)</title><rect x="5.5497%" y="453" width="0.2355%" height="15" fill="rgb(246,81,33)" fg:x="2050" fg:w="87"/><text x="5.7997%" y="463.50"></text></g><g><title>server`serde::ser::Serializer::collect_map (87 samples, 0.24%)</title><rect x="5.5497%" y="437" width="0.2355%" height="15" fill="rgb(252,33,42)" fg:x="2050" fg:w="87"/><text x="5.7997%" y="447.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::try_for_each (85 samples, 0.23%)</title><rect x="5.5551%" y="421" width="0.2301%" height="15" fill="rgb(209,212,41)" fg:x="2052" fg:w="85"/><text x="5.8051%" y="431.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::try_fold (85 samples, 0.23%)</title><rect x="5.5551%" y="405" width="0.2301%" height="15" fill="rgb(207,154,6)" fg:x="2052" fg:w="85"/><text x="5.8051%" y="415.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (85 samples, 0.23%)</title><rect x="5.5551%" y="389" width="0.2301%" height="15" fill="rgb(223,64,47)" fg:x="2052" fg:w="85"/><text x="5.8051%" y="399.50"></text></g><g><title>server`serde::ser::Serializer::collect_map::_{{closure}} (85 samples, 0.23%)</title><rect x="5.5551%" y="373" width="0.2301%" height="15" fill="rgb(211,161,38)" fg:x="2052" fg:w="85"/><text x="5.8051%" y="383.50"></text></g><g><title>server`serde::ser::SerializeMap::serialize_entry (85 samples, 0.23%)</title><rect x="5.5551%" y="357" width="0.2301%" height="15" fill="rgb(219,138,40)" fg:x="2052" fg:w="85"/><text x="5.8051%" y="367.50"></text></g><g><title>server`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (82 samples, 0.22%)</title><rect x="5.5632%" y="341" width="0.2220%" height="15" fill="rgb(241,228,46)" fg:x="2055" fg:w="82"/><text x="5.8132%" y="351.50"></text></g><g><title>server`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (82 samples, 0.22%)</title><rect x="5.5632%" y="325" width="0.2220%" height="15" fill="rgb(223,209,38)" fg:x="2055" fg:w="82"/><text x="5.8132%" y="335.50"></text></g><g><title>server`server::structs::_::_&lt;impl serde::ser::Serialize for server::structs::PlayerUpdate&gt;::serialize (82 samples, 0.22%)</title><rect x="5.5632%" y="309" width="0.2220%" height="15" fill="rgb(236,164,45)" fg:x="2055" fg:w="82"/><text x="5.8132%" y="319.50"></text></g><g><title>server`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (81 samples, 0.22%)</title><rect x="5.5659%" y="293" width="0.2193%" height="15" fill="rgb(231,15,5)" fg:x="2056" fg:w="81"/><text x="5.8159%" y="303.50"></text></g><g><title>server`serde::ser::SerializeMap::serialize_entry (81 samples, 0.22%)</title><rect x="5.5659%" y="277" width="0.2193%" height="15" fill="rgb(252,35,15)" fg:x="2056" fg:w="81"/><text x="5.8159%" y="287.50"></text></g><g><title>server`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (67 samples, 0.18%)</title><rect x="5.6038%" y="261" width="0.1814%" height="15" fill="rgb(248,181,18)" fg:x="2070" fg:w="67"/><text x="5.8538%" y="271.50"></text></g><g><title>server`server::structs::_::_&lt;impl serde::ser::Serialize for server::structs::Vec3&gt;::serialize (29 samples, 0.08%)</title><rect x="5.7067%" y="245" width="0.0785%" height="15" fill="rgb(233,39,42)" fg:x="2108" fg:w="29"/><text x="5.9567%" y="255.50"></text></g><g><title>server`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (27 samples, 0.07%)</title><rect x="5.7121%" y="229" width="0.0731%" height="15" fill="rgb(238,110,33)" fg:x="2110" fg:w="27"/><text x="5.9621%" y="239.50"></text></g><g><title>server`serde::ser::SerializeMap::serialize_entry (27 samples, 0.07%)</title><rect x="5.7121%" y="213" width="0.0731%" height="15" fill="rgb(233,195,10)" fg:x="2110" fg:w="27"/><text x="5.9621%" y="223.50"></text></g><g><title>server`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (88 samples, 0.24%)</title><rect x="5.5497%" y="517" width="0.2382%" height="15" fill="rgb(254,105,3)" fg:x="2050" fg:w="88"/><text x="5.7997%" y="527.50"></text></g><g><title>server`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (88 samples, 0.24%)</title><rect x="5.5497%" y="501" width="0.2382%" height="15" fill="rgb(221,225,9)" fg:x="2050" fg:w="88"/><text x="5.7997%" y="511.50"></text></g><g><title>server`serde::ser::SerializeMap::serialize_entry (88 samples, 0.24%)</title><rect x="5.5497%" y="485" width="0.2382%" height="15" fill="rgb(224,227,45)" fg:x="2050" fg:w="88"/><text x="5.7997%" y="495.50"></text></g><g><title>server`&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (88 samples, 0.24%)</title><rect x="5.5497%" y="469" width="0.2382%" height="15" fill="rgb(229,198,43)" fg:x="2050" fg:w="88"/><text x="5.7997%" y="479.50"></text></g><g><title>server`serde_json::ser::to_string (91 samples, 0.25%)</title><rect x="5.5443%" y="581" width="0.2464%" height="15" fill="rgb(206,209,35)" fg:x="2048" fg:w="91"/><text x="5.7943%" y="591.50"></text></g><g><title>server`serde_json::ser::to_vec (91 samples, 0.25%)</title><rect x="5.5443%" y="565" width="0.2464%" height="15" fill="rgb(245,195,53)" fg:x="2048" fg:w="91"/><text x="5.7943%" y="575.50"></text></g><g><title>server`serde_json::ser::to_writer (91 samples, 0.25%)</title><rect x="5.5443%" y="549" width="0.2464%" height="15" fill="rgb(240,92,26)" fg:x="2048" fg:w="91"/><text x="5.7943%" y="559.50"></text></g><g><title>server`server::structs::_::_&lt;impl serde::ser::Serialize for server::structs::MessageType&gt;::serialize (91 samples, 0.25%)</title><rect x="5.5443%" y="533" width="0.2464%" height="15" fill="rgb(207,40,23)" fg:x="2048" fg:w="91"/><text x="5.7943%" y="543.50"></text></g><g><title>server`server::client::Client::send (97 samples, 0.26%)</title><rect x="5.5362%" y="597" width="0.2626%" height="15" fill="rgb(223,111,35)" fg:x="2045" fg:w="97"/><text x="5.7862%" y="607.50"></text></g><g><title>server`nalgebra::base::indexing::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::get_unchecked (7 samples, 0.02%)</title><rect x="5.8421%" y="485" width="0.0190%" height="15" fill="rgb(229,147,28)" fg:x="2158" fg:w="7"/><text x="6.0921%" y="495.50"></text></g><g><title>server`nalgebra::base::storage::RawStorage::get_unchecked (7 samples, 0.02%)</title><rect x="5.8421%" y="469" width="0.0190%" height="15" fill="rgb(211,29,28)" fg:x="2158" fg:w="7"/><text x="6.0921%" y="479.50"></text></g><g><title>server`server::dynamic::DynamicObject::get_info (29 samples, 0.08%)</title><rect x="5.7987%" y="597" width="0.0785%" height="15" fill="rgb(228,72,33)" fg:x="2142" fg:w="29"/><text x="6.0487%" y="607.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul&lt;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt; for &amp;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::mul (28 samples, 0.08%)</title><rect x="5.8015%" y="581" width="0.0758%" height="15" fill="rgb(205,214,31)" fg:x="2143" fg:w="28"/><text x="6.0515%" y="591.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt; for &amp;nalgebra::base::unit::Unit&lt;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;&gt;::mul (28 samples, 0.08%)</title><rect x="5.8015%" y="565" width="0.0758%" height="15" fill="rgb(224,111,15)" fg:x="2143" fg:w="28"/><text x="6.0515%" y="575.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::arith::Mul&lt;&amp;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt; for &amp;nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;::mul (25 samples, 0.07%)</title><rect x="5.8096%" y="549" width="0.0677%" height="15" fill="rgb(253,21,26)" fg:x="2146" fg:w="25"/><text x="6.0596%" y="559.50"></text></g><g><title>server`nalgebra::geometry::quaternion_ops::_&lt;impl core::ops::index::Index&lt;usize&gt; for nalgebra::geometry::quaternion::Quaternion&lt;T&gt;&gt;::index (22 samples, 0.06%)</title><rect x="5.8177%" y="533" width="0.0596%" height="15" fill="rgb(245,139,43)" fg:x="2149" fg:w="22"/><text x="6.0677%" y="543.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::index::Index&lt;usize&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (20 samples, 0.05%)</title><rect x="5.8231%" y="517" width="0.0541%" height="15" fill="rgb(252,170,7)" fg:x="2151" fg:w="20"/><text x="6.0731%" y="527.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::index::Index&lt;(usize,usize)&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::index (16 samples, 0.04%)</title><rect x="5.8339%" y="501" width="0.0433%" height="15" fill="rgb(231,118,14)" fg:x="2155" fg:w="16"/><text x="6.0839%" y="511.50"></text></g><g><title>server`nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::shape (6 samples, 0.02%)</title><rect x="5.8610%" y="485" width="0.0162%" height="15" fill="rgb(238,83,0)" fg:x="2165" fg:w="6"/><text x="6.1110%" y="495.50"></text></g><g><title>server`gltf::Gltf::from_reader (6 samples, 0.02%)</title><rect x="5.8827%" y="549" width="0.0162%" height="15" fill="rgb(221,39,39)" fg:x="2173" fg:w="6"/><text x="6.1327%" y="559.50"></text></g><g><title>server`gltf::Gltf::from_reader_without_validation (6 samples, 0.02%)</title><rect x="5.8827%" y="533" width="0.0162%" height="15" fill="rgb(222,119,46)" fg:x="2173" fg:w="6"/><text x="6.1327%" y="543.50"></text></g><g><title>server`serde_json::de::from_slice (4 samples, 0.01%)</title><rect x="5.8881%" y="517" width="0.0108%" height="15" fill="rgb(222,165,49)" fg:x="2175" fg:w="4"/><text x="6.1381%" y="527.50"></text></g><g><title>server`serde_json::de::from_trait (4 samples, 0.01%)</title><rect x="5.8881%" y="501" width="0.0108%" height="15" fill="rgb(219,113,52)" fg:x="2175" fg:w="4"/><text x="6.1381%" y="511.50"></text></g><g><title>server`gltf_json::root::_::_&lt;impl serde::de::Deserialize for gltf_json::root::Root&gt;::deserialize (4 samples, 0.01%)</title><rect x="5.8881%" y="485" width="0.0108%" height="15" fill="rgb(214,7,15)" fg:x="2175" fg:w="4"/><text x="6.1381%" y="495.50"></text></g><g><title>server`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (4 samples, 0.01%)</title><rect x="5.8881%" y="469" width="0.0108%" height="15" fill="rgb(235,32,4)" fg:x="2175" fg:w="4"/><text x="6.1381%" y="479.50"></text></g><g><title>server`&lt;gltf_json::root::_::&lt;impl serde::de::Deserialize for gltf_json::root::Root&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.01%)</title><rect x="5.8881%" y="453" width="0.0108%" height="15" fill="rgb(238,90,54)" fg:x="2175" fg:w="4"/><text x="6.1381%" y="463.50"></text></g><g><title>server`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (4 samples, 0.01%)</title><rect x="6.0072%" y="293" width="0.0108%" height="15" fill="rgb(213,208,19)" fg:x="2219" fg:w="4"/><text x="6.2572%" y="303.50"></text></g><g><title>server`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.08%)</title><rect x="5.9476%" y="309" width="0.0839%" height="15" fill="rgb(233,156,4)" fg:x="2197" fg:w="31"/><text x="6.1976%" y="319.50"></text></g><g><title>server`core::option::Option&lt;T&gt;::map (13 samples, 0.04%)</title><rect x="6.0316%" y="309" width="0.0352%" height="15" fill="rgb(207,194,5)" fg:x="2228" fg:w="13"/><text x="6.2816%" y="319.50"></text></g><g><title>server`core::ptr::read (4 samples, 0.01%)</title><rect x="6.0559%" y="293" width="0.0108%" height="15" fill="rgb(206,111,30)" fg:x="2237" fg:w="4"/><text x="6.3059%" y="303.50"></text></g><g><title>server`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (7 samples, 0.02%)</title><rect x="6.0668%" y="309" width="0.0190%" height="15" fill="rgb(243,70,54)" fg:x="2241" fg:w="7"/><text x="6.3168%" y="319.50"></text></g><g><title>server`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 0.16%)</title><rect x="5.9287%" y="325" width="0.1597%" height="15" fill="rgb(242,28,8)" fg:x="2190" fg:w="59"/><text x="6.1787%" y="335.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::for_each (74 samples, 0.20%)</title><rect x="5.9070%" y="357" width="0.2003%" height="15" fill="rgb(219,106,18)" fg:x="2182" fg:w="74"/><text x="6.1570%" y="367.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::fold (74 samples, 0.20%)</title><rect x="5.9070%" y="341" width="0.2003%" height="15" fill="rgb(244,222,10)" fg:x="2182" fg:w="74"/><text x="6.1570%" y="351.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (7 samples, 0.02%)</title><rect x="6.0884%" y="325" width="0.0190%" height="15" fill="rgb(236,179,52)" fg:x="2249" fg:w="7"/><text x="6.3384%" y="335.50"></text></g><g><title>server`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::nth (4 samples, 0.01%)</title><rect x="6.1399%" y="245" width="0.0108%" height="15" fill="rgb(213,23,39)" fg:x="2268" fg:w="4"/><text x="6.3899%" y="255.50"></text></g><g><title>server`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.01%)</title><rect x="6.1561%" y="245" width="0.0108%" height="15" fill="rgb(238,48,10)" fg:x="2274" fg:w="4"/><text x="6.4061%" y="255.50"></text></g><g><title>server`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.01%)</title><rect x="6.1561%" y="229" width="0.0108%" height="15" fill="rgb(251,196,23)" fg:x="2274" fg:w="4"/><text x="6.4061%" y="239.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.02%)</title><rect x="6.2102%" y="197" width="0.0190%" height="15" fill="rgb(250,152,24)" fg:x="2294" fg:w="7"/><text x="6.4602%" y="207.50"></text></g><g><title>server`miniz_oxide::inflate::core::decompress_fast (45 samples, 0.12%)</title><rect x="6.1128%" y="261" width="0.1218%" height="15" fill="rgb(209,150,17)" fg:x="2258" fg:w="45"/><text x="6.3628%" y="271.50"></text></g><g><title>server`miniz_oxide::inflate::core::apply_match (22 samples, 0.06%)</title><rect x="6.1750%" y="245" width="0.0596%" height="15" fill="rgb(234,202,34)" fg:x="2281" fg:w="22"/><text x="6.4250%" y="255.50"></text></g><g><title>server`miniz_oxide::inflate::core::transfer (22 samples, 0.06%)</title><rect x="6.1750%" y="229" width="0.0596%" height="15" fill="rgb(253,148,53)" fg:x="2281" fg:w="22"/><text x="6.4250%" y="239.50"></text></g><g><title>server`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (10 samples, 0.03%)</title><rect x="6.2075%" y="213" width="0.0271%" height="15" fill="rgb(218,129,16)" fg:x="2293" fg:w="10"/><text x="6.4575%" y="223.50"></text></g><g><title>server`core::ptr::metadata::from_raw_parts (4 samples, 0.01%)</title><rect x="6.4701%" y="181" width="0.0108%" height="15" fill="rgb(216,85,19)" fg:x="2390" fg:w="4"/><text x="6.7201%" y="191.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (39 samples, 0.11%)</title><rect x="6.4160%" y="197" width="0.1056%" height="15" fill="rgb(235,228,7)" fg:x="2370" fg:w="39"/><text x="6.6660%" y="207.50"></text></g><g><title>server`core::ptr::slice_from_raw_parts (15 samples, 0.04%)</title><rect x="6.4810%" y="181" width="0.0406%" height="15" fill="rgb(245,175,0)" fg:x="2394" fg:w="15"/><text x="6.7310%" y="191.50"></text></g><g><title>server`miniz_oxide::inflate::core::decompress (157 samples, 0.43%)</title><rect x="6.1101%" y="293" width="0.4250%" height="15" fill="rgb(208,168,36)" fg:x="2257" fg:w="157"/><text x="6.3601%" y="303.50"></text></g><g><title>server`miniz_oxide::inflate::core::decompress_inner (157 samples, 0.43%)</title><rect x="6.1101%" y="277" width="0.4250%" height="15" fill="rgb(246,171,24)" fg:x="2257" fg:w="157"/><text x="6.3601%" y="287.50"></text></g><g><title>server`miniz_oxide::shared::update_adler32 (108 samples, 0.29%)</title><rect x="6.2427%" y="261" width="0.2924%" height="15" fill="rgb(215,142,24)" fg:x="2306" fg:w="108"/><text x="6.4927%" y="271.50"></text></g><g><title>server`adler32::RollingAdler32::update_buffer (108 samples, 0.29%)</title><rect x="6.2427%" y="245" width="0.2924%" height="15" fill="rgb(250,187,7)" fg:x="2306" fg:w="108"/><text x="6.4927%" y="255.50"></text></g><g><title>server`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (78 samples, 0.21%)</title><rect x="6.3239%" y="229" width="0.2112%" height="15" fill="rgb(228,66,33)" fg:x="2336" fg:w="78"/><text x="6.5739%" y="239.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (65 samples, 0.18%)</title><rect x="6.3591%" y="213" width="0.1760%" height="15" fill="rgb(234,215,21)" fg:x="2349" fg:w="65"/><text x="6.6091%" y="223.50"></text></g><g><title>server`core::ptr::const_ptr::_&lt;impl *const [T]&gt;::as_ptr (5 samples, 0.01%)</title><rect x="6.5216%" y="197" width="0.0135%" height="15" fill="rgb(222,191,20)" fg:x="2409" fg:w="5"/><text x="6.7716%" y="207.50"></text></g><g><title>server`core::mem::replace (9 samples, 0.02%)</title><rect x="6.6082%" y="213" width="0.0244%" height="15" fill="rgb(245,79,54)" fg:x="2441" fg:w="9"/><text x="6.8582%" y="223.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (25 samples, 0.07%)</title><rect x="6.5811%" y="229" width="0.0677%" height="15" fill="rgb(240,10,37)" fg:x="2431" fg:w="25"/><text x="6.8311%" y="239.50"></text></g><g><title>server`core::ptr::read (6 samples, 0.02%)</title><rect x="6.6326%" y="213" width="0.0162%" height="15" fill="rgb(214,192,32)" fg:x="2450" fg:w="6"/><text x="6.8826%" y="223.50"></text></g><g><title>server`alloc::vec::Vec&lt;T,A&gt;::extend_with (48 samples, 0.13%)</title><rect x="6.5351%" y="261" width="0.1299%" height="15" fill="rgb(209,36,54)" fg:x="2414" fg:w="48"/><text x="6.7851%" y="271.50"></text></g><g><title>server`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (36 samples, 0.10%)</title><rect x="6.5676%" y="245" width="0.0975%" height="15" fill="rgb(220,10,11)" fg:x="2426" fg:w="36"/><text x="6.8176%" y="255.50"></text></g><g><title>server`png::decoder::zlib::ZlibStream::prepare_vec_for_appending (49 samples, 0.13%)</title><rect x="6.5351%" y="293" width="0.1327%" height="15" fill="rgb(221,106,17)" fg:x="2414" fg:w="49"/><text x="6.7851%" y="303.50"></text></g><g><title>server`alloc::vec::Vec&lt;T,A&gt;::resize (49 samples, 0.13%)</title><rect x="6.5351%" y="277" width="0.1327%" height="15" fill="rgb(251,142,44)" fg:x="2414" fg:w="49"/><text x="6.7851%" y="287.50"></text></g><g><title>server`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.08%)</title><rect x="6.6975%" y="197" width="0.0785%" height="15" fill="rgb(238,13,15)" fg:x="2474" fg:w="29"/><text x="6.9475%" y="207.50"></text></g><g><title>server`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (6 samples, 0.02%)</title><rect x="6.7923%" y="181" width="0.0162%" height="15" fill="rgb(208,107,27)" fg:x="2509" fg:w="6"/><text x="7.0423%" y="191.50"></text></g><g><title>server`core::option::Option&lt;T&gt;::map (18 samples, 0.05%)</title><rect x="6.7760%" y="197" width="0.0487%" height="15" fill="rgb(205,136,37)" fg:x="2503" fg:w="18"/><text x="7.0260%" y="207.50"></text></g><g><title>server`core::ptr::read (6 samples, 0.02%)</title><rect x="6.8085%" y="181" width="0.0162%" height="15" fill="rgb(250,205,27)" fg:x="2515" fg:w="6"/><text x="7.0585%" y="191.50"></text></g><g><title>server`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.01%)</title><rect x="6.8248%" y="197" width="0.0108%" height="15" fill="rgb(210,80,43)" fg:x="2521" fg:w="4"/><text x="7.0748%" y="207.50"></text></g><g><title>server`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.15%)</title><rect x="6.6840%" y="213" width="0.1543%" height="15" fill="rgb(247,160,36)" fg:x="2469" fg:w="57"/><text x="6.9340%" y="223.50"></text></g><g><title>server`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (9 samples, 0.02%)</title><rect x="6.8437%" y="197" width="0.0244%" height="15" fill="rgb(234,13,49)" fg:x="2528" fg:w="9"/><text x="7.0937%" y="207.50"></text></g><g><title>server`png::decoder::ReadDecoder&lt;R&gt;::decode_next (285 samples, 0.77%)</title><rect x="6.1074%" y="357" width="0.7715%" height="15" fill="rgb(234,122,0)" fg:x="2256" fg:w="285"/><text x="6.3574%" y="367.50"></text></g><g><title>server`png::decoder::stream::StreamingDecoder::update (285 samples, 0.77%)</title><rect x="6.1074%" y="341" width="0.7715%" height="15" fill="rgb(207,146,38)" fg:x="2256" fg:w="285"/><text x="6.3574%" y="351.50"></text></g><g><title>server`png::decoder::stream::StreamingDecoder::next_state (285 samples, 0.77%)</title><rect x="6.1074%" y="325" width="0.7715%" height="15" fill="rgb(207,177,25)" fg:x="2256" fg:w="285"/><text x="6.3574%" y="335.50"></text></g><g><title>server`png::decoder::zlib::ZlibStream::decompress (284 samples, 0.77%)</title><rect x="6.1101%" y="309" width="0.7688%" height="15" fill="rgb(211,178,42)" fg:x="2257" fg:w="284"/><text x="6.3601%" y="319.50"></text></g><g><title>server`png::decoder::zlib::ZlibStream::transfer_finished_data (78 samples, 0.21%)</title><rect x="6.6677%" y="293" width="0.2112%" height="15" fill="rgb(230,69,54)" fg:x="2463" fg:w="78"/><text x="6.9177%" y="303.50"></text></g><g><title>server`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (78 samples, 0.21%)</title><rect x="6.6677%" y="277" width="0.2112%" height="15" fill="rgb(214,135,41)" fg:x="2463" fg:w="78"/><text x="6.9177%" y="287.50"></text></g><g><title>server`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (78 samples, 0.21%)</title><rect x="6.6677%" y="261" width="0.2112%" height="15" fill="rgb(237,67,25)" fg:x="2463" fg:w="78"/><text x="6.9177%" y="271.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::for_each (78 samples, 0.21%)</title><rect x="6.6677%" y="245" width="0.2112%" height="15" fill="rgb(222,189,50)" fg:x="2463" fg:w="78"/><text x="6.9177%" y="255.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::fold (78 samples, 0.21%)</title><rect x="6.6677%" y="229" width="0.2112%" height="15" fill="rgb(245,148,34)" fg:x="2463" fg:w="78"/><text x="6.9177%" y="239.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (15 samples, 0.04%)</title><rect x="6.8383%" y="213" width="0.0406%" height="15" fill="rgb(222,29,6)" fg:x="2526" fg:w="15"/><text x="7.0883%" y="223.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (4 samples, 0.01%)</title><rect x="6.9953%" y="261" width="0.0108%" height="15" fill="rgb(221,189,43)" fg:x="2584" fg:w="4"/><text x="7.2453%" y="271.50"></text></g><g><title>server`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (9 samples, 0.02%)</title><rect x="6.9872%" y="277" width="0.0244%" height="15" fill="rgb(207,36,27)" fg:x="2581" fg:w="9"/><text x="7.2372%" y="287.50"></text></g><g><title>server`&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.09%)</title><rect x="6.9493%" y="341" width="0.0893%" height="15" fill="rgb(217,90,24)" fg:x="2567" fg:w="33"/><text x="7.1993%" y="351.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::split_at (30 samples, 0.08%)</title><rect x="6.9574%" y="325" width="0.0812%" height="15" fill="rgb(224,66,35)" fg:x="2570" fg:w="30"/><text x="7.2074%" y="335.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (29 samples, 0.08%)</title><rect x="6.9601%" y="309" width="0.0785%" height="15" fill="rgb(221,13,50)" fg:x="2571" fg:w="29"/><text x="7.2101%" y="319.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::get_unchecked (25 samples, 0.07%)</title><rect x="6.9710%" y="293" width="0.0677%" height="15" fill="rgb(236,68,49)" fg:x="2575" fg:w="25"/><text x="7.2210%" y="303.50"></text></g><g><title>server`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.03%)</title><rect x="7.0116%" y="277" width="0.0271%" height="15" fill="rgb(229,146,28)" fg:x="2590" fg:w="10"/><text x="7.2616%" y="287.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.02%)</title><rect x="7.0224%" y="261" width="0.0162%" height="15" fill="rgb(225,31,38)" fg:x="2594" fg:w="6"/><text x="7.2724%" y="271.50"></text></g><g><title>server`core::ptr::read (8 samples, 0.02%)</title><rect x="7.0576%" y="325" width="0.0217%" height="15" fill="rgb(250,208,3)" fg:x="2607" fg:w="8"/><text x="7.3076%" y="335.50"></text></g><g><title>server`&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.07%)</title><rect x="7.0386%" y="341" width="0.0731%" height="15" fill="rgb(246,54,23)" fg:x="2600" fg:w="27"/><text x="7.2886%" y="351.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::split_at_mut (12 samples, 0.03%)</title><rect x="7.0792%" y="325" width="0.0325%" height="15" fill="rgb(243,76,11)" fg:x="2615" fg:w="12"/><text x="7.3292%" y="335.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::split_at_mut_unchecked (12 samples, 0.03%)</title><rect x="7.0792%" y="309" width="0.0325%" height="15" fill="rgb(245,21,50)" fg:x="2615" fg:w="12"/><text x="7.3292%" y="319.50"></text></g><g><title>server`core::slice::raw::from_raw_parts_mut (9 samples, 0.02%)</title><rect x="7.0874%" y="293" width="0.0244%" height="15" fill="rgb(228,9,43)" fg:x="2618" fg:w="9"/><text x="7.3374%" y="303.50"></text></g><g><title>server`core::ptr::slice_from_raw_parts_mut (5 samples, 0.01%)</title><rect x="7.0982%" y="277" width="0.0135%" height="15" fill="rgb(208,100,47)" fg:x="2622" fg:w="5"/><text x="7.3482%" y="287.50"></text></g><g><title>server`core::mem::replace (4 samples, 0.01%)</title><rect x="7.1713%" y="309" width="0.0108%" height="15" fill="rgb(232,26,8)" fg:x="2649" fg:w="4"/><text x="7.4213%" y="319.50"></text></g><g><title>server`core::ptr::read (4 samples, 0.01%)</title><rect x="7.1821%" y="309" width="0.0108%" height="15" fill="rgb(216,166,38)" fg:x="2653" fg:w="4"/><text x="7.4321%" y="319.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (26 samples, 0.07%)</title><rect x="7.1280%" y="325" width="0.0704%" height="15" fill="rgb(251,202,51)" fg:x="2633" fg:w="26"/><text x="7.3780%" y="335.50"></text></g><g><title>server`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (37 samples, 0.10%)</title><rect x="7.1171%" y="341" width="0.1002%" height="15" fill="rgb(254,216,34)" fg:x="2629" fg:w="37"/><text x="7.3671%" y="351.50"></text></g><g><title>server`gltf::import::import_impl (527 samples, 1.43%)</title><rect x="5.8989%" y="549" width="1.4267%" height="15" fill="rgb(251,32,27)" fg:x="2179" fg:w="527"/><text x="6.1489%" y="559.50"></text></g><g><title>server`gltf::import::import_image_data (527 samples, 1.43%)</title><rect x="5.8989%" y="533" width="1.4267%" height="15" fill="rgb(208,127,28)" fg:x="2179" fg:w="527"/><text x="6.1489%" y="543.50"></text></g><g><title>server`image::io::free_functions::load (526 samples, 1.42%)</title><rect x="5.9016%" y="517" width="1.4240%" height="15" fill="rgb(224,137,22)" fg:x="2180" fg:w="526"/><text x="6.1516%" y="527.50"></text></g><g><title>server`image::dynimage::DynamicImage::from_decoder (525 samples, 1.42%)</title><rect x="5.9043%" y="501" width="1.4213%" height="15" fill="rgb(254,70,32)" fg:x="2181" fg:w="525"/><text x="6.1543%" y="511.50"></text></g><g><title>server`image::dynimage::decoder_to_image (525 samples, 1.42%)</title><rect x="5.9043%" y="485" width="1.4213%" height="15" fill="rgb(229,75,37)" fg:x="2181" fg:w="525"/><text x="6.1543%" y="495.50"></text></g><g><title>server`image::image::decoder_to_vec (525 samples, 1.42%)</title><rect x="5.9043%" y="469" width="1.4213%" height="15" fill="rgb(252,64,23)" fg:x="2181" fg:w="525"/><text x="6.1543%" y="479.50"></text></g><g><title>server`&lt;image::codecs::png::PngDecoder&lt;R&gt; as image::image::ImageDecoder&gt;::read_image (525 samples, 1.42%)</title><rect x="5.9043%" y="453" width="1.4213%" height="15" fill="rgb(232,162,48)" fg:x="2181" fg:w="525"/><text x="6.1543%" y="463.50"></text></g><g><title>server`png::decoder::Reader&lt;R&gt;::next_frame (525 samples, 1.42%)</title><rect x="5.9043%" y="437" width="1.4213%" height="15" fill="rgb(246,160,12)" fg:x="2181" fg:w="525"/><text x="6.1543%" y="447.50"></text></g><g><title>server`png::decoder::Reader&lt;R&gt;::next_row (525 samples, 1.42%)</title><rect x="5.9043%" y="421" width="1.4213%" height="15" fill="rgb(247,166,0)" fg:x="2181" fg:w="525"/><text x="6.1543%" y="431.50"></text></g><g><title>server`png::decoder::Reader&lt;R&gt;::next_interlaced_row (525 samples, 1.42%)</title><rect x="5.9043%" y="405" width="1.4213%" height="15" fill="rgb(249,219,21)" fg:x="2181" fg:w="525"/><text x="6.1543%" y="415.50"></text></g><g><title>server`png::decoder::Reader&lt;R&gt;::next_interlaced_row_impl (525 samples, 1.42%)</title><rect x="5.9043%" y="389" width="1.4213%" height="15" fill="rgb(205,209,3)" fg:x="2181" fg:w="525"/><text x="6.1543%" y="399.50"></text></g><g><title>server`png::decoder::Reader&lt;R&gt;::next_raw_interlaced_row (524 samples, 1.42%)</title><rect x="5.9070%" y="373" width="1.4186%" height="15" fill="rgb(243,44,1)" fg:x="2182" fg:w="524"/><text x="6.1570%" y="383.50"></text></g><g><title>server`png::filter::unfilter (165 samples, 0.45%)</title><rect x="6.8789%" y="357" width="0.4467%" height="15" fill="rgb(206,159,16)" fg:x="2541" fg:w="165"/><text x="7.1289%" y="367.50"></text></g><g><title>server`png::filter::filter_paeth (38 samples, 0.10%)</title><rect x="7.2227%" y="341" width="0.1029%" height="15" fill="rgb(244,77,30)" fg:x="2668" fg:w="38"/><text x="7.4727%" y="351.50"></text></g><g><title>server`core::num::_&lt;impl i16&gt;::abs (26 samples, 0.07%)</title><rect x="7.2552%" y="325" width="0.0704%" height="15" fill="rgb(218,69,12)" fg:x="2680" fg:w="26"/><text x="7.5052%" y="335.50"></text></g><g><title>server`gltf::import::import (534 samples, 1.45%)</title><rect x="5.8827%" y="581" width="1.4456%" height="15" fill="rgb(212,87,7)" fg:x="2173" fg:w="534"/><text x="6.1327%" y="591.50"></text></g><g><title>server`gltf::import::import_path (534 samples, 1.45%)</title><rect x="5.8827%" y="565" width="1.4456%" height="15" fill="rgb(245,114,25)" fg:x="2173" fg:w="534"/><text x="6.1327%" y="575.50"></text></g><g><title>server`parry3d::shape::convex_polyhedron::ConvexPolyhedron::from_convex_mesh (6 samples, 0.02%)</title><rect x="7.3283%" y="533" width="0.0162%" height="15" fill="rgb(210,61,42)" fg:x="2707" fg:w="6"/><text x="7.5783%" y="543.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::triangle_facet::TriangleFacet::add_visible_point (5 samples, 0.01%)</title><rect x="7.3635%" y="501" width="0.0135%" height="15" fill="rgb(211,52,33)" fg:x="2720" fg:w="5"/><text x="7.6135%" y="511.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::triangle_facet::TriangleFacet::distance_to_point (4 samples, 0.01%)</title><rect x="7.3662%" y="485" width="0.0108%" height="15" fill="rgb(234,58,33)" fg:x="2721" fg:w="4"/><text x="7.6162%" y="495.50"></text></g><g><title>server`nalgebra::base::blas::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dot (4 samples, 0.01%)</title><rect x="7.3797%" y="485" width="0.0108%" height="15" fill="rgb(220,115,36)" fg:x="2726" fg:w="4"/><text x="7.6297%" y="495.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::triangle_facet::TriangleFacet::distance_to_point (8 samples, 0.02%)</title><rect x="7.3797%" y="501" width="0.0217%" height="15" fill="rgb(243,153,54)" fg:x="2726" fg:w="8"/><text x="7.6297%" y="511.50"></text></g><g><title>server`nalgebra::geometry::point_ops::_&lt;impl core::ops::arith::Sub for nalgebra::geometry::point::OPoint&lt;T,D&gt;&gt;::sub (4 samples, 0.01%)</title><rect x="7.3906%" y="485" width="0.0108%" height="15" fill="rgb(251,47,18)" fg:x="2730" fg:w="4"/><text x="7.6406%" y="495.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Sub&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub (4 samples, 0.01%)</title><rect x="7.3906%" y="469" width="0.0108%" height="15" fill="rgb(242,102,42)" fg:x="2730" fg:w="4"/><text x="7.6406%" y="479.50"></text></g><g><title>server`nalgebra::base::ops::_&lt;impl core::ops::arith::Sub&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub (4 samples, 0.01%)</title><rect x="7.3906%" y="453" width="0.0108%" height="15" fill="rgb(234,31,38)" fg:x="2730" fg:w="4"/><text x="7.6406%" y="463.50"></text></g><g><title>server`nalgebra::base::norm::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::normalize (4 samples, 0.01%)</title><rect x="7.4068%" y="485" width="0.0108%" height="15" fill="rgb(221,117,51)" fg:x="2736" fg:w="4"/><text x="7.6568%" y="495.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::convex_hull::attach_and_push_facets (33 samples, 0.09%)</title><rect x="7.3527%" y="517" width="0.0893%" height="15" fill="rgb(212,20,18)" fg:x="2716" fg:w="33"/><text x="7.6027%" y="527.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::triangle_facet::TriangleFacet::new (15 samples, 0.04%)</title><rect x="7.4014%" y="501" width="0.0406%" height="15" fill="rgb(245,133,36)" fg:x="2734" fg:w="15"/><text x="7.6514%" y="511.50"></text></g><g><title>server`parry3d::shape::triangle::Triangle::is_affinely_dependent (6 samples, 0.02%)</title><rect x="7.4258%" y="485" width="0.0162%" height="15" fill="rgb(212,6,19)" fg:x="2743" fg:w="6"/><text x="7.6758%" y="495.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::convex_hull::compute_silhouette (4 samples, 0.01%)</title><rect x="7.4420%" y="293" width="0.0108%" height="15" fill="rgb(218,1,36)" fg:x="2749" fg:w="4"/><text x="7.6920%" y="303.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::convex_hull::compute_silhouette (4 samples, 0.01%)</title><rect x="7.4420%" y="277" width="0.0108%" height="15" fill="rgb(246,84,54)" fg:x="2749" fg:w="4"/><text x="7.6920%" y="287.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::convex_hull::compute_silhouette (4 samples, 0.01%)</title><rect x="7.4420%" y="261" width="0.0108%" height="15" fill="rgb(242,110,6)" fg:x="2749" fg:w="4"/><text x="7.6920%" y="271.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::convex_hull::compute_silhouette (4 samples, 0.01%)</title><rect x="7.4420%" y="245" width="0.0108%" height="15" fill="rgb(214,47,5)" fg:x="2749" fg:w="4"/><text x="7.6920%" y="255.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::convex_hull::compute_silhouette (5 samples, 0.01%)</title><rect x="7.4420%" y="357" width="0.0135%" height="15" fill="rgb(218,159,25)" fg:x="2749" fg:w="5"/><text x="7.6920%" y="367.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::convex_hull::compute_silhouette (5 samples, 0.01%)</title><rect x="7.4420%" y="341" width="0.0135%" height="15" fill="rgb(215,211,28)" fg:x="2749" fg:w="5"/><text x="7.6920%" y="351.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::convex_hull::compute_silhouette (5 samples, 0.01%)</title><rect x="7.4420%" y="325" width="0.0135%" height="15" fill="rgb(238,59,32)" fg:x="2749" fg:w="5"/><text x="7.6920%" y="335.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::convex_hull::compute_silhouette (5 samples, 0.01%)</title><rect x="7.4420%" y="309" width="0.0135%" height="15" fill="rgb(226,82,3)" fg:x="2749" fg:w="5"/><text x="7.6920%" y="319.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::convex_hull::compute_silhouette (6 samples, 0.02%)</title><rect x="7.4420%" y="389" width="0.0162%" height="15" fill="rgb(240,164,32)" fg:x="2749" fg:w="6"/><text x="7.6920%" y="399.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::convex_hull::compute_silhouette (6 samples, 0.02%)</title><rect x="7.4420%" y="373" width="0.0162%" height="15" fill="rgb(232,46,7)" fg:x="2749" fg:w="6"/><text x="7.6920%" y="383.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::convex_hull::compute_silhouette (7 samples, 0.02%)</title><rect x="7.4420%" y="421" width="0.0190%" height="15" fill="rgb(229,129,53)" fg:x="2749" fg:w="7"/><text x="7.6920%" y="431.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::convex_hull::compute_silhouette (7 samples, 0.02%)</title><rect x="7.4420%" y="405" width="0.0190%" height="15" fill="rgb(234,188,29)" fg:x="2749" fg:w="7"/><text x="7.6920%" y="415.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::convex_hull::compute_silhouette (8 samples, 0.02%)</title><rect x="7.4420%" y="437" width="0.0217%" height="15" fill="rgb(246,141,4)" fg:x="2749" fg:w="8"/><text x="7.6920%" y="447.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::convex_hull::compute_silhouette (9 samples, 0.02%)</title><rect x="7.4420%" y="453" width="0.0244%" height="15" fill="rgb(229,23,39)" fg:x="2749" fg:w="9"/><text x="7.6920%" y="463.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::convex_hull::compute_silhouette (11 samples, 0.03%)</title><rect x="7.4420%" y="485" width="0.0298%" height="15" fill="rgb(206,12,3)" fg:x="2749" fg:w="11"/><text x="7.6920%" y="495.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::convex_hull::compute_silhouette (11 samples, 0.03%)</title><rect x="7.4420%" y="469" width="0.0298%" height="15" fill="rgb(252,226,20)" fg:x="2749" fg:w="11"/><text x="7.6920%" y="479.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::convex_hull::compute_silhouette (12 samples, 0.03%)</title><rect x="7.4420%" y="517" width="0.0325%" height="15" fill="rgb(216,123,35)" fg:x="2749" fg:w="12"/><text x="7.6920%" y="527.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::convex_hull::compute_silhouette (12 samples, 0.03%)</title><rect x="7.4420%" y="501" width="0.0325%" height="15" fill="rgb(212,68,40)" fg:x="2749" fg:w="12"/><text x="7.6920%" y="511.50"></text></g><g><title>server`parry3d::shape::triangle::Triangle::area (4 samples, 0.01%)</title><rect x="7.4745%" y="501" width="0.0108%" height="15" fill="rgb(254,125,32)" fg:x="2761" fg:w="4"/><text x="7.7245%" y="511.50"></text></g><g><title>server`nalgebra::distance (4 samples, 0.01%)</title><rect x="7.4745%" y="485" width="0.0108%" height="15" fill="rgb(253,97,22)" fg:x="2761" fg:w="4"/><text x="7.7245%" y="495.50"></text></g><g><title>server`rapier3d::geometry::collider::ColliderBuilder::convex_hull (63 samples, 0.17%)</title><rect x="7.3283%" y="581" width="0.1706%" height="15" fill="rgb(241,101,14)" fg:x="2707" fg:w="63"/><text x="7.5783%" y="591.50"></text></g><g><title>server`parry3d::shape::shared_shape::SharedShape::convex_hull (63 samples, 0.17%)</title><rect x="7.3283%" y="565" width="0.1706%" height="15" fill="rgb(238,103,29)" fg:x="2707" fg:w="63"/><text x="7.5783%" y="575.50"></text></g><g><title>server`parry3d::shape::convex_polyhedron::ConvexPolyhedron::from_convex_hull (63 samples, 0.17%)</title><rect x="7.3283%" y="549" width="0.1706%" height="15" fill="rgb(233,195,47)" fg:x="2707" fg:w="63"/><text x="7.5783%" y="559.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::convex_hull::convex_hull (57 samples, 0.15%)</title><rect x="7.3445%" y="533" width="0.1543%" height="15" fill="rgb(246,218,30)" fg:x="2713" fg:w="57"/><text x="7.5945%" y="543.50"></text></g><g><title>server`parry3d::transformation::convex_hull3::initial_mesh::get_initial_mesh (9 samples, 0.02%)</title><rect x="7.4745%" y="517" width="0.0244%" height="15" fill="rgb(219,145,47)" fg:x="2761" fg:w="9"/><text x="7.7245%" y="527.50"></text></g><g><title>server`server::world::World::new (603 samples, 1.63%)</title><rect x="5.8800%" y="597" width="1.6324%" height="15" fill="rgb(243,12,26)" fg:x="2172" fg:w="603"/><text x="6.1300%" y="607.50"></text></g><g><title>server`rapier3d::geometry::collider_set::ColliderSet::insert_with_parent (4 samples, 0.01%)</title><rect x="7.5016%" y="581" width="0.0108%" height="15" fill="rgb(214,87,16)" fg:x="2771" fg:w="4"/><text x="7.7516%" y="591.50"></text></g><g><title>server`hashbrown::map::make_hasher::_{{closure}} (4 samples, 0.01%)</title><rect x="7.5395%" y="501" width="0.0108%" height="15" fill="rgb(208,99,42)" fg:x="2785" fg:w="4"/><text x="7.7895%" y="511.50"></text></g><g><title>server`hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="7.5395%" y="485" width="0.0108%" height="15" fill="rgb(253,99,2)" fg:x="2785" fg:w="4"/><text x="7.7895%" y="495.50"></text></g><g><title>server`core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="7.5395%" y="469" width="0.0108%" height="15" fill="rgb(220,168,23)" fg:x="2785" fg:w="4"/><text x="7.7895%" y="479.50"></text></g><g><title>server`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (6 samples, 0.02%)</title><rect x="7.5395%" y="517" width="0.0162%" height="15" fill="rgb(242,38,24)" fg:x="2785" fg:w="6"/><text x="7.7895%" y="527.50"></text></g><g><title>server`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (10 samples, 0.03%)</title><rect x="7.5340%" y="549" width="0.0271%" height="15" fill="rgb(225,182,9)" fg:x="2783" fg:w="10"/><text x="7.7840%" y="559.50"></text></g><g><title>server`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.03%)</title><rect x="7.5340%" y="533" width="0.0271%" height="15" fill="rgb(243,178,37)" fg:x="2783" fg:w="10"/><text x="7.7840%" y="543.50"></text></g><g><title>server`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (20 samples, 0.05%)</title><rect x="7.5124%" y="581" width="0.0541%" height="15" fill="rgb(232,139,19)" fg:x="2775" fg:w="20"/><text x="7.7624%" y="591.50"></text></g><g><title>server`hashbrown::raw::RawTable&lt;T,A&gt;::insert (14 samples, 0.04%)</title><rect x="7.5286%" y="565" width="0.0379%" height="15" fill="rgb(225,201,24)" fg:x="2781" fg:w="14"/><text x="7.7786%" y="575.50"></text></g><g><title>server`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (21 samples, 0.06%)</title><rect x="7.5124%" y="597" width="0.0569%" height="15" fill="rgb(221,47,46)" fg:x="2775" fg:w="21"/><text x="7.7624%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`__posix_spawn (672 samples, 1.82%)</title><rect x="7.5747%" y="549" width="1.8192%" height="15" fill="rgb(249,23,13)" fg:x="2798" fg:w="672"/><text x="7.8247%" y="559.50">l..</text></g><g><title>libsystem_c.dylib`posix_spawnp (674 samples, 1.82%)</title><rect x="7.5747%" y="565" width="1.8246%" height="15" fill="rgb(219,9,5)" fg:x="2798" fg:w="674"/><text x="7.8247%" y="575.50">l..</text></g><g><title>libsystem_kernel.dylib`stat (10 samples, 0.03%)</title><rect x="9.3993%" y="565" width="0.0271%" height="15" fill="rgb(254,171,16)" fg:x="3472" fg:w="10"/><text x="9.6493%" y="575.50"></text></g><g><title>server`std::process::Command::spawn (685 samples, 1.85%)</title><rect x="7.5747%" y="597" width="1.8544%" height="15" fill="rgb(230,171,20)" fg:x="2798" fg:w="685"/><text x="7.8247%" y="607.50">s..</text></g><g><title>server`std::sys::unix::process::process_inner::_&lt;impl std::sys::unix::process::process_common::Command&gt;::spawn (685 samples, 1.85%)</title><rect x="7.5747%" y="581" width="1.8544%" height="15" fill="rgb(210,71,41)" fg:x="2798" fg:w="685"/><text x="7.8247%" y="591.50">s..</text></g><g><title>dyld`start (3,486 samples, 9.44%)</title><rect x="0.0000%" y="725" width="9.4372%" height="15" fill="rgb(206,173,20)" fg:x="0" fg:w="3486"/><text x="0.2500%" y="735.50">dyld`start</text></g><g><title>server`main (3,486 samples, 9.44%)</title><rect x="0.0000%" y="709" width="9.4372%" height="15" fill="rgb(233,88,34)" fg:x="0" fg:w="3486"/><text x="0.2500%" y="719.50">server`main</text></g><g><title>server`std::rt::lang_start (3,486 samples, 9.44%)</title><rect x="0.0000%" y="693" width="9.4372%" height="15" fill="rgb(223,209,46)" fg:x="0" fg:w="3486"/><text x="0.2500%" y="703.50">server`std::r..</text></g><g><title>server`std::rt::lang_start_internal (3,486 samples, 9.44%)</title><rect x="0.0000%" y="677" width="9.4372%" height="15" fill="rgb(250,43,18)" fg:x="0" fg:w="3486"/><text x="0.2500%" y="687.50">server`std::r..</text></g><g><title>server`std::rt::lang_start::_{{closure}} (3,486 samples, 9.44%)</title><rect x="0.0000%" y="661" width="9.4372%" height="15" fill="rgb(208,13,10)" fg:x="0" fg:w="3486"/><text x="0.2500%" y="671.50">server`std::r..</text></g><g><title>server`std::sys_common::backtrace::__rust_begin_short_backtrace (3,486 samples, 9.44%)</title><rect x="0.0000%" y="645" width="9.4372%" height="15" fill="rgb(212,200,36)" fg:x="0" fg:w="3486"/><text x="0.2500%" y="655.50">server`std::s..</text></g><g><title>server`core::ops::function::FnOnce::call_once (3,486 samples, 9.44%)</title><rect x="0.0000%" y="629" width="9.4372%" height="15" fill="rgb(225,90,30)" fg:x="0" fg:w="3486"/><text x="0.2500%" y="639.50">server`core::..</text></g><g><title>server`server::main (3,485 samples, 9.43%)</title><rect x="0.0027%" y="613" width="9.4345%" height="15" fill="rgb(236,182,39)" fg:x="1" fg:w="3485"/><text x="0.2527%" y="623.50">server`server..</text></g><g><title>libsystem_kernel.dylib`__posix_spawn (28 samples, 0.08%)</title><rect x="9.4372%" y="725" width="0.0758%" height="15" fill="rgb(212,144,35)" fg:x="3486" fg:w="28"/><text x="9.6872%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (254 samples, 0.69%)</title><rect x="9.5157%" y="533" width="0.6876%" height="15" fill="rgb(228,63,44)" fg:x="3515" fg:w="254"/><text x="9.7657%" y="543.50"></text></g><g><title>server`&lt;websocket_base::ws::receiver::MessageIterator&lt;Recv,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="10.2033%" y="533" width="0.0190%" height="15" fill="rgb(228,109,6)" fg:x="3769" fg:w="7"/><text x="10.4533%" y="543.50"></text></g><g><title>server`DYLD-STUB$$memcpy (18 samples, 0.05%)</title><rect x="10.2223%" y="533" width="0.0487%" height="15" fill="rgb(238,117,24)" fg:x="3776" fg:w="18"/><text x="10.4723%" y="543.50"></text></g><g><title>server`core::ptr::drop_in_place&lt;websocket_base::result::WebSocketError&gt; (4 samples, 0.01%)</title><rect x="10.2710%" y="533" width="0.0108%" height="15" fill="rgb(242,26,26)" fg:x="3794" fg:w="4"/><text x="10.5210%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (261 samples, 0.71%)</title><rect x="10.8909%" y="517" width="0.7066%" height="15" fill="rgb(221,92,48)" fg:x="4023" fg:w="261"/><text x="11.1409%" y="527.50"></text></g><g><title>server`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (250 samples, 0.68%)</title><rect x="11.9142%" y="501" width="0.6768%" height="15" fill="rgb(209,209,32)" fg:x="4401" fg:w="250"/><text x="12.1642%" y="511.50"></text></g><g><title>server`&lt;websocket::receiver::Receiver as websocket_base::ws::receiver::Receiver&gt;::recv_message_dataframes (50 samples, 0.14%)</title><rect x="12.5964%" y="501" width="0.1354%" height="15" fill="rgb(221,70,22)" fg:x="4653" fg:w="50"/><text x="12.8464%" y="511.50"></text></g><g><title>server`&lt;T as core::convert::From&lt;T&gt;&gt;::from (65 samples, 0.18%)</title><rect x="13.4898%" y="485" width="0.1760%" height="15" fill="rgb(248,145,5)" fg:x="4983" fg:w="65"/><text x="13.7398%" y="495.50"></text></g><g><title>server`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (129 samples, 0.35%)</title><rect x="13.6658%" y="485" width="0.3492%" height="15" fill="rgb(226,116,26)" fg:x="5048" fg:w="129"/><text x="13.9158%" y="495.50"></text></g><g><title>server`&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (236 samples, 0.64%)</title><rect x="14.0150%" y="485" width="0.6389%" height="15" fill="rgb(244,5,17)" fg:x="5177" fg:w="236"/><text x="14.2650%" y="495.50"></text></g><g><title>server`&lt;T as core::convert::From&lt;T&gt;&gt;::from (60 samples, 0.16%)</title><rect x="16.0481%" y="469" width="0.1624%" height="15" fill="rgb(252,159,33)" fg:x="5928" fg:w="60"/><text x="16.2981%" y="479.50"></text></g><g><title>server`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (301 samples, 0.81%)</title><rect x="18.1976%" y="437" width="0.8149%" height="15" fill="rgb(206,71,0)" fg:x="6722" fg:w="301"/><text x="18.4476%" y="447.50"></text></g><g><title>server`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (299 samples, 0.81%)</title><rect x="19.0124%" y="437" width="0.8094%" height="15" fill="rgb(233,118,54)" fg:x="7023" fg:w="299"/><text x="19.2624%" y="447.50"></text></g><g><title>server`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (309 samples, 0.84%)</title><rect x="19.8219%" y="437" width="0.8365%" height="15" fill="rgb(234,83,48)" fg:x="7322" fg:w="309"/><text x="20.0719%" y="447.50"></text></g><g><title>server`alloc::vec::Vec&lt;T,A&gt;::as_ptr (1,443 samples, 3.91%)</title><rect x="16.9008%" y="453" width="3.9064%" height="15" fill="rgb(228,3,54)" fg:x="6243" fg:w="1443"/><text x="17.1508%" y="463.50">serv..</text></g><g><title>server`core::ptr::unique::Unique&lt;T&gt;::as_ptr (55 samples, 0.15%)</title><rect x="20.6584%" y="437" width="0.1489%" height="15" fill="rgb(226,155,13)" fg:x="7631" fg:w="55"/><text x="20.9084%" y="447.50"></text></g><g><title>server`core::ptr::const_ptr::_&lt;impl *const T&gt;::cast (32 samples, 0.09%)</title><rect x="21.0482%" y="437" width="0.0866%" height="15" fill="rgb(241,28,37)" fg:x="7775" fg:w="32"/><text x="21.2982%" y="447.50"></text></g><g><title>server`core::ptr::metadata::from_raw_parts (206 samples, 0.56%)</title><rect x="21.1348%" y="437" width="0.5577%" height="15" fill="rgb(233,93,10)" fg:x="7807" fg:w="206"/><text x="21.3848%" y="447.50"></text></g><g><title>server`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,316 samples, 6.27%)</title><rect x="16.2105%" y="469" width="6.2698%" height="15" fill="rgb(225,113,19)" fg:x="5988" fg:w="2316"/><text x="16.4605%" y="479.50">server`&lt;..</text></g><g><title>server`core::slice::raw::from_raw_parts (617 samples, 1.67%)</title><rect x="20.8100%" y="453" width="1.6703%" height="15" fill="rgb(241,2,18)" fg:x="7687" fg:w="617"/><text x="21.0600%" y="463.50"></text></g><g><title>server`core::ptr::slice_from_raw_parts (291 samples, 0.79%)</title><rect x="21.6925%" y="437" width="0.7878%" height="15" fill="rgb(228,207,21)" fg:x="8013" fg:w="291"/><text x="21.9425%" y="447.50"></text></g><g><title>server`&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (104 samples, 0.28%)</title><rect x="22.4803%" y="469" width="0.2815%" height="15" fill="rgb(213,211,35)" fg:x="8304" fg:w="104"/><text x="22.7303%" y="479.50"></text></g><g><title>server`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (139 samples, 0.38%)</title><rect x="23.0272%" y="453" width="0.3763%" height="15" fill="rgb(209,83,10)" fg:x="8506" fg:w="139"/><text x="23.2772%" y="463.50"></text></g><g><title>server`&lt;T as core::convert::From&lt;T&gt;&gt;::from (26 samples, 0.07%)</title><rect x="24.0207%" y="437" width="0.0704%" height="15" fill="rgb(209,164,1)" fg:x="8873" fg:w="26"/><text x="24.2707%" y="447.50"></text></g><g><title>server`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (253 samples, 0.68%)</title><rect x="24.0911%" y="437" width="0.6849%" height="15" fill="rgb(213,184,43)" fg:x="8899" fg:w="253"/><text x="24.3411%" y="447.50"></text></g><g><title>server`&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (85 samples, 0.23%)</title><rect x="24.7760%" y="437" width="0.2301%" height="15" fill="rgb(231,61,34)" fg:x="9152" fg:w="85"/><text x="25.0260%" y="447.50"></text></g><g><title>server`websocket_base::dataframe::DataFrame::read_dataframe_body (4 samples, 0.01%)</title><rect x="25.0088%" y="437" width="0.0108%" height="15" fill="rgb(235,75,3)" fg:x="9238" fg:w="4"/><text x="25.2588%" y="447.50"></text></g><g><title>server`websocket_base::ws::util::mask::mask_data (4 samples, 0.01%)</title><rect x="25.0088%" y="421" width="0.0108%" height="15" fill="rgb(220,106,47)" fg:x="9238" fg:w="4"/><text x="25.2588%" y="431.50"></text></g><g><title>server`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (78 samples, 0.21%)</title><rect x="25.4744%" y="421" width="0.2112%" height="15" fill="rgb(210,196,33)" fg:x="9410" fg:w="78"/><text x="25.7244%" y="431.50"></text></g><g><title>server`&lt;std::io::error::ErrorKind as core::cmp::PartialEq&gt;::eq (70 samples, 0.19%)</title><rect x="25.9617%" y="405" width="0.1895%" height="15" fill="rgb(229,154,42)" fg:x="9590" fg:w="70"/><text x="26.2117%" y="415.50"></text></g><g><title>server`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::addr (22 samples, 0.06%)</title><rect x="27.3126%" y="357" width="0.0596%" height="15" fill="rgb(228,114,26)" fg:x="10089" fg:w="22"/><text x="27.5626%" y="367.50"></text></g><g><title>server`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (16 samples, 0.04%)</title><rect x="27.3722%" y="357" width="0.0433%" height="15" fill="rgb(208,144,1)" fg:x="10111" fg:w="16"/><text x="27.6222%" y="367.50"></text></g><g><title>server`std::io::error::Error::kind (593 samples, 1.61%)</title><rect x="26.6169%" y="389" width="1.6053%" height="15" fill="rgb(239,112,37)" fg:x="9832" fg:w="593"/><text x="26.8669%" y="399.50"></text></g><g><title>server`std::io::error::repr_bitpacked::Repr::data (433 samples, 1.17%)</title><rect x="27.0500%" y="373" width="1.1722%" height="15" fill="rgb(210,96,50)" fg:x="9992" fg:w="433"/><text x="27.3000%" y="383.50"></text></g><g><title>server`std::io::error::repr_bitpacked::decode_repr (298 samples, 0.81%)</title><rect x="27.4155%" y="357" width="0.8067%" height="15" fill="rgb(222,178,2)" fg:x="10127" fg:w="298"/><text x="27.6655%" y="367.50"></text></g><g><title>server`&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (978 samples, 2.65%)</title><rect x="25.6856%" y="421" width="2.6476%" height="15" fill="rgb(226,74,18)" fg:x="9488" fg:w="978"/><text x="25.9356%" y="431.50">se..</text></g><g><title>server`&lt;websocket_base::result::WebSocketError as core::convert::From&lt;std::io::error::Error&gt;&gt;::from (806 samples, 2.18%)</title><rect x="26.1512%" y="405" width="2.1820%" height="15" fill="rgb(225,67,54)" fg:x="9660" fg:w="806"/><text x="26.4012%" y="415.50">s..</text></g><g><title>server`std::sys::unix::decode_error_kind (41 samples, 0.11%)</title><rect x="28.2222%" y="389" width="0.1110%" height="15" fill="rgb(251,92,32)" fg:x="10425" fg:w="41"/><text x="28.4722%" y="399.50"></text></g><g><title>server`&lt;T as core::convert::From&lt;T&gt;&gt;::from (23 samples, 0.06%)</title><rect x="28.9450%" y="405" width="0.0623%" height="15" fill="rgb(228,149,22)" fg:x="10692" fg:w="23"/><text x="29.1950%" y="415.50"></text></g><g><title>server`&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (98 samples, 0.27%)</title><rect x="29.0073%" y="405" width="0.2653%" height="15" fill="rgb(243,54,13)" fg:x="10715" fg:w="98"/><text x="29.2573%" y="415.50"></text></g><g><title>server`&lt;std::io::error::ErrorKind as core::cmp::PartialEq&gt;::eq (68 samples, 0.18%)</title><rect x="29.4377%" y="389" width="0.1841%" height="15" fill="rgb(243,180,28)" fg:x="10874" fg:w="68"/><text x="29.6877%" y="399.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::is_empty (57 samples, 0.15%)</title><rect x="29.6218%" y="389" width="0.1543%" height="15" fill="rgb(208,167,24)" fg:x="10942" fg:w="57"/><text x="29.8718%" y="399.50"></text></g><g><title>server`&lt;T as core::convert::From&lt;T&gt;&gt;::from (26 samples, 0.07%)</title><rect x="31.5006%" y="373" width="0.0704%" height="15" fill="rgb(245,73,45)" fg:x="11636" fg:w="26"/><text x="31.7506%" y="383.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__recvfrom (94 samples, 0.25%)</title><rect x="33.6230%" y="341" width="0.2545%" height="15" fill="rgb(237,203,48)" fg:x="12420" fg:w="94"/><text x="33.8730%" y="351.50"></text></g><g><title>libsystem_c.dylib`recv (34 samples, 0.09%)</title><rect x="33.8775%" y="341" width="0.0920%" height="15" fill="rgb(211,197,16)" fg:x="12514" fg:w="34"/><text x="34.1275%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__error (96 samples, 0.26%)</title><rect x="33.9695%" y="341" width="0.2599%" height="15" fill="rgb(243,99,51)" fg:x="12548" fg:w="96"/><text x="34.2195%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (17,232 samples, 46.65%)</title><rect x="34.2294%" y="341" width="46.6499%" height="15" fill="rgb(215,123,29)" fg:x="12644" fg:w="17232"/><text x="34.4794%" y="351.50">libsystem_kernel.dylib`__recvfrom</text></g><g><title>server`alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (62 samples, 0.17%)</title><rect x="81.9243%" y="309" width="0.1678%" height="15" fill="rgb(239,186,37)" fg:x="30262" fg:w="62"/><text x="82.1743%" y="319.50"></text></g><g><title>server`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (56 samples, 0.15%)</title><rect x="82.0921%" y="309" width="0.1516%" height="15" fill="rgb(252,136,39)" fg:x="30324" fg:w="56"/><text x="82.3421%" y="319.50"></text></g><g><title>server`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (94 samples, 0.25%)</title><rect x="82.2437%" y="309" width="0.2545%" height="15" fill="rgb(223,213,32)" fg:x="30380" fg:w="94"/><text x="82.4937%" y="319.50"></text></g><g><title>server`alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (432 samples, 1.17%)</title><rect x="81.3720%" y="325" width="1.1695%" height="15" fill="rgb(233,115,5)" fg:x="30058" fg:w="432"/><text x="81.6220%" y="335.50"></text></g><g><title>server`core::ptr::unique::Unique&lt;T&gt;::as_ptr (16 samples, 0.04%)</title><rect x="82.4982%" y="309" width="0.0433%" height="15" fill="rgb(207,226,44)" fg:x="30474" fg:w="16"/><text x="82.7482%" y="319.50"></text></g><g><title>server`core::ptr::metadata::from_raw_parts_mut (50 samples, 0.14%)</title><rect x="82.8582%" y="309" width="0.1354%" height="15" fill="rgb(208,126,0)" fg:x="30607" fg:w="50"/><text x="83.1082%" y="319.50"></text></g><g><title>server`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (877 samples, 2.37%)</title><rect x="80.8793%" y="341" width="2.3742%" height="15" fill="rgb(244,66,21)" fg:x="29876" fg:w="877"/><text x="81.1293%" y="351.50">se..</text></g><g><title>server`core::slice::raw::from_raw_parts_mut (263 samples, 0.71%)</title><rect x="82.5415%" y="325" width="0.7120%" height="15" fill="rgb(222,97,12)" fg:x="30490" fg:w="263"/><text x="82.7915%" y="335.50"></text></g><g><title>server`core::ptr::slice_from_raw_parts_mut (96 samples, 0.26%)</title><rect x="82.9936%" y="309" width="0.2599%" height="15" fill="rgb(219,213,19)" fg:x="30657" fg:w="96"/><text x="83.2436%" y="319.50"></text></g><g><title>server`DYLD-STUB$$recv (24 samples, 0.06%)</title><rect x="83.2535%" y="341" width="0.0650%" height="15" fill="rgb(252,169,30)" fg:x="30753" fg:w="24"/><text x="83.5035%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`_pthread_exit_if_canceled (44 samples, 0.12%)</title><rect x="83.4376%" y="309" width="0.1191%" height="15" fill="rgb(206,32,51)" fg:x="30821" fg:w="44"/><text x="83.6876%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`cerror_nocancel (158 samples, 0.43%)</title><rect x="83.5594%" y="309" width="0.4277%" height="15" fill="rgb(250,172,42)" fg:x="30866" fg:w="158"/><text x="83.8094%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (250 samples, 0.68%)</title><rect x="83.4376%" y="325" width="0.6768%" height="15" fill="rgb(209,34,43)" fg:x="30821" fg:w="250"/><text x="83.6876%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit_if_canceled (47 samples, 0.13%)</title><rect x="83.9871%" y="309" width="0.1272%" height="15" fill="rgb(223,11,35)" fg:x="31024" fg:w="47"/><text x="84.2371%" y="319.50"></text></g><g><title>server`&lt;hyper::buffer::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (18,924 samples, 51.23%)</title><rect x="32.9760%" y="357" width="51.2304%" height="15" fill="rgb(251,219,26)" fg:x="12181" fg:w="18924"/><text x="33.2260%" y="367.50">server`&lt;hyper::buffer::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf</text></g><g><title>server`std::net::udp::UdpSocket::recv (328 samples, 0.89%)</title><rect x="83.3184%" y="341" width="0.8880%" height="15" fill="rgb(231,119,3)" fg:x="30777" fg:w="328"/><text x="83.5684%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`cerror (34 samples, 0.09%)</title><rect x="84.1144%" y="325" width="0.0920%" height="15" fill="rgb(216,97,11)" fg:x="31071" fg:w="34"/><text x="84.3644%" y="335.50"></text></g><g><title>server`&lt;hyper::buffer::BufReader&lt;R&gt; as std::io::Read&gt;::read (19,444 samples, 52.64%)</title><rect x="31.5737%" y="373" width="52.6381%" height="15" fill="rgb(223,59,9)" fg:x="11663" fg:w="19444"/><text x="31.8237%" y="383.50">server`&lt;hyper::buffer::BufReader&lt;R&gt; as std::io::Read&gt;::read</text></g><g><title>server`alloc::vec::Vec&lt;T,A&gt;::len (20 samples, 0.05%)</title><rect x="84.2118%" y="373" width="0.0541%" height="15" fill="rgb(233,93,31)" fg:x="31107" fg:w="20"/><text x="84.4618%" y="383.50"></text></g><g><title>server`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::addr (21 samples, 0.06%)</title><rect x="84.8913%" y="341" width="0.0569%" height="15" fill="rgb(239,81,33)" fg:x="31358" fg:w="21"/><text x="85.1413%" y="351.50"></text></g><g><title>server`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (22 samples, 0.06%)</title><rect x="84.9482%" y="341" width="0.0596%" height="15" fill="rgb(213,120,34)" fg:x="31379" fg:w="22"/><text x="85.1982%" y="351.50"></text></g><g><title>server`std::io::error::Error::kind (470 samples, 1.27%)</title><rect x="84.2660%" y="373" width="1.2724%" height="15" fill="rgb(243,49,53)" fg:x="31127" fg:w="470"/><text x="84.5160%" y="383.50"></text></g><g><title>server`std::io::error::repr_bitpacked::Repr::data (332 samples, 0.90%)</title><rect x="84.6395%" y="357" width="0.8988%" height="15" fill="rgb(247,216,33)" fg:x="31265" fg:w="332"/><text x="84.8895%" y="367.50"></text></g><g><title>server`std::io::error::repr_bitpacked::decode_repr (196 samples, 0.53%)</title><rect x="85.0077%" y="341" width="0.5306%" height="15" fill="rgb(226,26,14)" fg:x="31401" fg:w="196"/><text x="85.2577%" y="351.50"></text></g><g><title>server`websocket_base::dataframe::DataFrame::read_dataframe_with_limit (22,996 samples, 62.25%)</title><rect x="23.4034%" y="453" width="62.2540%" height="15" fill="rgb(215,49,53)" fg:x="8645" fg:w="22996"/><text x="23.6534%" y="463.50">server`websocket_base::dataframe::DataFrame::read_dataframe_with_limit</text></g><g><title>server`websocket_base::ws::util::header::read_header (22,399 samples, 60.64%)</title><rect x="25.0196%" y="437" width="60.6378%" height="15" fill="rgb(245,162,40)" fg:x="9242" fg:w="22399"/><text x="25.2696%" y="447.50">server`websocket_base::ws::util::header::read_header</text></g><g><title>server`byteorder::io::ReadBytesExt::read_u8 (21,175 samples, 57.32%)</title><rect x="28.3332%" y="421" width="57.3242%" height="15" fill="rgb(229,68,17)" fg:x="10466" fg:w="21175"/><text x="28.5832%" y="431.50">server`byteorder::io::ReadBytesExt::read_u8</text></g><g><title>server`std::io::Read::read_exact (20,828 samples, 56.38%)</title><rect x="29.2726%" y="405" width="56.3849%" height="15" fill="rgb(213,182,10)" fg:x="10813" fg:w="20828"/><text x="29.5226%" y="415.50">server`std::io::Read::read_exact</text></g><g><title>server`std::io::default_read_exact (20,642 samples, 55.88%)</title><rect x="29.7761%" y="389" width="55.8813%" height="15" fill="rgb(245,125,30)" fg:x="10999" fg:w="20642"/><text x="30.0261%" y="399.50">server`std::io::default_read_exact</text></g><g><title>server`std::sys::unix::decode_error_kind (44 samples, 0.12%)</title><rect x="85.5383%" y="373" width="0.1191%" height="15" fill="rgb(232,202,2)" fg:x="31597" fg:w="44"/><text x="85.7883%" y="383.50"></text></g><g><title>server`&lt;websocket::receiver::Receiver as websocket_base::ws::receiver::Receiver&gt;::recv_dataframe (23,272 samples, 63.00%)</title><rect x="22.7619%" y="469" width="63.0012%" height="15" fill="rgb(237,140,51)" fg:x="8408" fg:w="23272"/><text x="23.0119%" y="479.50">server`&lt;websocket::receiver::Receiver as websocket_base::ws::receiver::Receiver&gt;::recv_dataframe</text></g><g><title>server`websocket_base::ws::util::header::read_header (39 samples, 0.11%)</title><rect x="85.6574%" y="453" width="0.1056%" height="15" fill="rgb(236,157,25)" fg:x="31641" fg:w="39"/><text x="85.9074%" y="463.50"></text></g><g><title>server`alloc::vec::Vec&lt;T,A&gt;::is_empty (88 samples, 0.24%)</title><rect x="85.7630%" y="469" width="0.2382%" height="15" fill="rgb(219,209,0)" fg:x="31680" fg:w="88"/><text x="86.0130%" y="479.50"></text></g><g><title>server`alloc::vec::Vec&lt;T,A&gt;::len (33 samples, 0.09%)</title><rect x="86.0012%" y="469" width="0.0893%" height="15" fill="rgb(240,116,54)" fg:x="31768" fg:w="33"/><text x="86.2512%" y="479.50"></text></g><g><title>server`core::iter::adapters::map::Map&lt;I,F&gt;::new (42 samples, 0.11%)</title><rect x="86.0960%" y="469" width="0.1137%" height="15" fill="rgb(216,10,36)" fg:x="31803" fg:w="42"/><text x="86.3460%" y="479.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::map (55 samples, 0.15%)</title><rect x="86.2097%" y="469" width="0.1489%" height="15" fill="rgb(222,72,44)" fg:x="31845" fg:w="55"/><text x="86.4597%" y="479.50"></text></g><g><title>server`core::ptr::const_ptr::_&lt;impl *const T&gt;::guaranteed_eq (48 samples, 0.13%)</title><rect x="88.9250%" y="389" width="0.1299%" height="15" fill="rgb(232,159,9)" fg:x="32848" fg:w="48"/><text x="89.1750%" y="399.50"></text></g><g><title>server`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (104 samples, 0.28%)</title><rect x="89.0549%" y="389" width="0.2815%" height="15" fill="rgb(210,39,32)" fg:x="32896" fg:w="104"/><text x="89.3049%" y="399.50"></text></g><g><title>server`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (139 samples, 0.38%)</title><rect x="89.3365%" y="389" width="0.3763%" height="15" fill="rgb(216,194,45)" fg:x="33000" fg:w="139"/><text x="89.5865%" y="399.50"></text></g><g><title>server`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (741 samples, 2.01%)</title><rect x="87.9504%" y="405" width="2.0060%" height="15" fill="rgb(218,18,35)" fg:x="32488" fg:w="741"/><text x="88.2004%" y="415.50">s..</text></g><g><title>server`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (90 samples, 0.24%)</title><rect x="89.7128%" y="389" width="0.2436%" height="15" fill="rgb(207,83,51)" fg:x="33139" fg:w="90"/><text x="89.9628%" y="399.50"></text></g><g><title>server`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,228 samples, 3.32%)</title><rect x="86.8026%" y="437" width="3.3244%" height="15" fill="rgb(225,63,43)" fg:x="32064" fg:w="1228"/><text x="87.0526%" y="447.50">ser..</text></g><g><title>server`core::iter::traits::iterator::Iterator::fold (1,054 samples, 2.85%)</title><rect x="87.2736%" y="421" width="2.8534%" height="15" fill="rgb(207,57,36)" fg:x="32238" fg:w="1054"/><text x="87.5236%" y="431.50">se..</text></g><g><title>server`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (63 samples, 0.17%)</title><rect x="89.9564%" y="405" width="0.1706%" height="15" fill="rgb(216,99,33)" fg:x="33229" fg:w="63"/><text x="90.2064%" y="415.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::sum (1,428 samples, 3.87%)</title><rect x="86.3586%" y="469" width="3.8658%" height="15" fill="rgb(225,42,16)" fg:x="31900" fg:w="1428"/><text x="86.6086%" y="479.50">serv..</text></g><g><title>server`&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,361 samples, 3.68%)</title><rect x="86.5400%" y="453" width="3.6845%" height="15" fill="rgb(220,201,45)" fg:x="31967" fg:w="1361"/><text x="86.7900%" y="463.50">serv..</text></g><g><title>server`core::iter::adapters::map::map_fold (36 samples, 0.10%)</title><rect x="90.1270%" y="437" width="0.0975%" height="15" fill="rgb(225,33,4)" fg:x="33292" fg:w="36"/><text x="90.3770%" y="447.50"></text></g><g><title>server`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (23 samples, 0.06%)</title><rect x="90.4654%" y="453" width="0.0623%" height="15" fill="rgb(224,33,50)" fg:x="33417" fg:w="23"/><text x="90.7154%" y="463.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::as_ptr (26 samples, 0.07%)</title><rect x="90.5276%" y="453" width="0.0704%" height="15" fill="rgb(246,198,51)" fg:x="33440" fg:w="26"/><text x="90.7776%" y="463.50"></text></g><g><title>server`core::ptr::const_ptr::_&lt;impl *const T&gt;::guaranteed_eq (52 samples, 0.14%)</title><rect x="91.4643%" y="437" width="0.1408%" height="15" fill="rgb(205,22,4)" fg:x="33786" fg:w="52"/><text x="91.7143%" y="447.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::iter (624 samples, 1.69%)</title><rect x="90.2244%" y="469" width="1.6893%" height="15" fill="rgb(206,3,8)" fg:x="33328" fg:w="624"/><text x="90.4744%" y="479.50"></text></g><g><title>server`core::slice::iter::Iter&lt;T&gt;::new (486 samples, 1.32%)</title><rect x="90.5980%" y="453" width="1.3157%" height="15" fill="rgb(251,23,15)" fg:x="33466" fg:w="486"/><text x="90.8480%" y="463.50"></text></g><g><title>server`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (114 samples, 0.31%)</title><rect x="91.6051%" y="437" width="0.3086%" height="15" fill="rgb(252,88,28)" fg:x="33838" fg:w="114"/><text x="91.8551%" y="447.50"></text></g><g><title>server`core::slice::iter::Iter&lt;T&gt;::new (10 samples, 0.03%)</title><rect x="91.9137%" y="469" width="0.0271%" height="15" fill="rgb(212,127,14)" fg:x="33952" fg:w="10"/><text x="92.1637%" y="479.50"></text></g><g><title>server`&lt;websocket::receiver::Receiver as websocket_base::ws::receiver::Receiver&gt;::recv_message_dataframes (28,602 samples, 77.43%)</title><rect x="14.6539%" y="485" width="77.4304%" height="15" fill="rgb(247,145,37)" fg:x="5413" fg:w="28602"/><text x="14.9039%" y="495.50">server`&lt;websocket::receiver::Receiver as websocket_base::ws::receiver::Receiver&gt;::recv_message_dataframes</text></g><g><title>server`websocket_base::dataframe::DataFrame::read_dataframe_with_limit (53 samples, 0.14%)</title><rect x="91.9408%" y="469" width="0.1435%" height="15" fill="rgb(209,117,53)" fg:x="33962" fg:w="53"/><text x="92.1908%" y="479.50"></text></g><g><title>server`&lt;websocket_base::ws::receiver::MessageIterator&lt;Recv,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (29,733 samples, 80.49%)</title><rect x="11.5975%" y="517" width="80.4922%" height="15" fill="rgb(212,90,42)" fg:x="4284" fg:w="29733"/><text x="11.8475%" y="527.50">server`&lt;websocket_base::ws::receiver::MessageIterator&lt;Recv,R&gt; as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>server`websocket_base::ws::receiver::Receiver::recv_message (29,314 samples, 79.36%)</title><rect x="12.7318%" y="501" width="79.3579%" height="15" fill="rgb(218,164,37)" fg:x="4703" fg:w="29314"/><text x="12.9818%" y="511.50">server`websocket_base::ws::receiver::Receiver::recv_message</text></g><g><title>server`DYLD-STUB$$memcpy (24 samples, 0.06%)</title><rect x="92.0897%" y="517" width="0.0650%" height="15" fill="rgb(246,65,34)" fg:x="34017" fg:w="24"/><text x="92.3397%" y="527.50"></text></g><g><title>server`core::ptr::drop_in_place&lt;std::io::error::ErrorData&lt;alloc::boxed::Box&lt;std::io::error::Custom&gt;&gt;&gt; (191 samples, 0.52%)</title><rect x="93.4514%" y="453" width="0.5171%" height="15" fill="rgb(231,100,33)" fg:x="34520" fg:w="191"/><text x="93.7014%" y="463.50"></text></g><g><title>server`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::addr (37 samples, 0.10%)</title><rect x="93.9684%" y="453" width="0.1002%" height="15" fill="rgb(228,126,14)" fg:x="34711" fg:w="37"/><text x="94.2184%" y="463.50"></text></g><g><title>server`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (14 samples, 0.04%)</title><rect x="94.0686%" y="453" width="0.0379%" height="15" fill="rgb(215,173,21)" fg:x="34748" fg:w="14"/><text x="94.3186%" y="463.50"></text></g><g><title>server`&lt;std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop&gt;::drop (1,436 samples, 3.89%)</title><rect x="93.0561%" y="469" width="3.8875%" height="15" fill="rgb(210,6,40)" fg:x="34374" fg:w="1436"/><text x="93.3061%" y="479.50">serv..</text></g><g><title>server`std::io::error::repr_bitpacked::decode_repr (1,048 samples, 2.84%)</title><rect x="94.1065%" y="453" width="2.8371%" height="15" fill="rgb(212,48,18)" fg:x="34762" fg:w="1048"/><text x="94.3565%" y="463.50">se..</text></g><g><title>server`core::ptr::drop_in_place&lt;websocket_base::result::WebSocketError&gt; (1,771 samples, 4.79%)</title><rect x="92.1546%" y="517" width="4.7944%" height="15" fill="rgb(230,214,11)" fg:x="34041" fg:w="1771"/><text x="92.4046%" y="527.50">server..</text></g><g><title>server`core::ptr::drop_in_place&lt;std::io::error::Error&gt; (1,557 samples, 4.22%)</title><rect x="92.7340%" y="501" width="4.2151%" height="15" fill="rgb(254,105,39)" fg:x="34255" fg:w="1557"/><text x="92.9840%" y="511.50">serve..</text></g><g><title>server`core::ptr::drop_in_place&lt;std::io::error::repr_bitpacked::Repr&gt; (1,487 samples, 4.03%)</title><rect x="92.9235%" y="485" width="4.0256%" height="15" fill="rgb(245,158,5)" fg:x="34325" fg:w="1487"/><text x="93.1735%" y="495.50">serv..</text></g><g><title>libsystem_pthread.dylib`thread_start (32,357 samples, 87.60%)</title><rect x="9.5130%" y="725" width="87.5958%" height="15" fill="rgb(249,208,11)" fg:x="3514" fg:w="32357"/><text x="9.7630%" y="735.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (32,357 samples, 87.60%)</title><rect x="9.5130%" y="709" width="87.5958%" height="15" fill="rgb(210,39,28)" fg:x="3514" fg:w="32357"/><text x="9.7630%" y="719.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>server`std::sys::unix::thread::Thread::new::thread_start (32,357 samples, 87.60%)</title><rect x="9.5130%" y="693" width="87.5958%" height="15" fill="rgb(211,56,53)" fg:x="3514" fg:w="32357"/><text x="9.7630%" y="703.50">server`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>server`core::ops::function::FnOnce::call_once{{vtable.shim}} (32,357 samples, 87.60%)</title><rect x="9.5130%" y="677" width="87.5958%" height="15" fill="rgb(226,201,30)" fg:x="3514" fg:w="32357"/><text x="9.7630%" y="687.50">server`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>server`std::thread::Builder::spawn_unchecked_::_{{closure}} (32,357 samples, 87.60%)</title><rect x="9.5130%" y="661" width="87.5958%" height="15" fill="rgb(239,101,34)" fg:x="3514" fg:w="32357"/><text x="9.7630%" y="671.50">server`std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>server`std::panic::catch_unwind (32,356 samples, 87.59%)</title><rect x="9.5157%" y="645" width="87.5931%" height="15" fill="rgb(226,209,5)" fg:x="3515" fg:w="32356"/><text x="9.7657%" y="655.50">server`std::panic::catch_unwind</text></g><g><title>server`std::panicking::try (32,356 samples, 87.59%)</title><rect x="9.5157%" y="629" width="87.5931%" height="15" fill="rgb(250,105,47)" fg:x="3515" fg:w="32356"/><text x="9.7657%" y="639.50">server`std::panicking::try</text></g><g><title>server`__rust_try (32,356 samples, 87.59%)</title><rect x="9.5157%" y="613" width="87.5931%" height="15" fill="rgb(230,72,3)" fg:x="3515" fg:w="32356"/><text x="9.7657%" y="623.50">server`__rust_try</text></g><g><title>server`std::panicking::try::do_call (32,356 samples, 87.59%)</title><rect x="9.5157%" y="597" width="87.5931%" height="15" fill="rgb(232,218,39)" fg:x="3515" fg:w="32356"/><text x="9.7657%" y="607.50">server`std::panicking::try::do_call</text></g><g><title>server`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (32,356 samples, 87.59%)</title><rect x="9.5157%" y="581" width="87.5931%" height="15" fill="rgb(248,166,6)" fg:x="3515" fg:w="32356"/><text x="9.7657%" y="591.50">server`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>server`std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (32,356 samples, 87.59%)</title><rect x="9.5157%" y="565" width="87.5931%" height="15" fill="rgb(247,89,20)" fg:x="3515" fg:w="32356"/><text x="9.7657%" y="575.50">server`std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>server`std::sys_common::backtrace::__rust_begin_short_backtrace (32,356 samples, 87.59%)</title><rect x="9.5157%" y="549" width="87.5931%" height="15" fill="rgb(248,130,54)" fg:x="3515" fg:w="32356"/><text x="9.7657%" y="559.50">server`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>server`server::client::Client::new::_{{closure}} (32,073 samples, 86.83%)</title><rect x="10.2818%" y="533" width="86.8269%" height="15" fill="rgb(234,196,4)" fg:x="3798" fg:w="32073"/><text x="10.5318%" y="543.50">server`server::client::Client::new::_{{closure}}</text></g><g><title>server`websocket_base::ws::receiver::Receiver::recv_message (57 samples, 0.15%)</title><rect x="96.9544%" y="517" width="0.1543%" height="15" fill="rgb(250,143,31)" fg:x="35814" fg:w="57"/><text x="97.2044%" y="527.50"></text></g><g><title>server`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (5 samples, 0.01%)</title><rect x="97.2252%" y="501" width="0.0135%" height="15" fill="rgb(211,110,34)" fg:x="35914" fg:w="5"/><text x="97.4752%" y="511.50"></text></g><g><title>server`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (5 samples, 0.01%)</title><rect x="97.2387%" y="501" width="0.0135%" height="15" fill="rgb(215,124,48)" fg:x="35919" fg:w="5"/><text x="97.4887%" y="511.50"></text></g><g><title>server`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.11%)</title><rect x="97.1602%" y="517" width="0.1110%" height="15" fill="rgb(216,46,13)" fg:x="35890" fg:w="41"/><text x="97.4102%" y="527.50"></text></g><g><title>server`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (7 samples, 0.02%)</title><rect x="97.2522%" y="501" width="0.0190%" height="15" fill="rgb(205,184,25)" fg:x="35924" fg:w="7"/><text x="97.5022%" y="511.50"></text></g><g><title>server`core::option::Option&lt;T&gt;::map (12 samples, 0.03%)</title><rect x="97.2712%" y="517" width="0.0325%" height="15" fill="rgb(228,1,10)" fg:x="35931" fg:w="12"/><text x="97.5212%" y="527.50"></text></g><g><title>server`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (69 samples, 0.19%)</title><rect x="97.1277%" y="533" width="0.1868%" height="15" fill="rgb(213,116,27)" fg:x="35878" fg:w="69"/><text x="97.3777%" y="543.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::for_each (82 samples, 0.22%)</title><rect x="97.1115%" y="565" width="0.2220%" height="15" fill="rgb(241,95,50)" fg:x="35872" fg:w="82"/><text x="97.3615%" y="575.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::fold (82 samples, 0.22%)</title><rect x="97.1115%" y="549" width="0.2220%" height="15" fill="rgb(238,48,32)" fg:x="35872" fg:w="82"/><text x="97.3615%" y="559.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (7 samples, 0.02%)</title><rect x="97.3145%" y="533" width="0.0190%" height="15" fill="rgb(235,113,49)" fg:x="35947" fg:w="7"/><text x="97.5645%" y="543.50"></text></g><g><title>server`miniz_oxide::inflate::core::HuffmanTable::lookup (4 samples, 0.01%)</title><rect x="97.3849%" y="453" width="0.0108%" height="15" fill="rgb(205,127,43)" fg:x="35973" fg:w="4"/><text x="97.6349%" y="463.50"></text></g><g><title>server`miniz_oxide::inflate::core::decompress_fast (40 samples, 0.11%)</title><rect x="97.3389%" y="469" width="0.1083%" height="15" fill="rgb(250,162,2)" fg:x="35956" fg:w="40"/><text x="97.5889%" y="479.50"></text></g><g><title>server`miniz_oxide::inflate::core::apply_match (19 samples, 0.05%)</title><rect x="97.3957%" y="453" width="0.0514%" height="15" fill="rgb(220,13,41)" fg:x="35977" fg:w="19"/><text x="97.6457%" y="463.50"></text></g><g><title>server`miniz_oxide::inflate::core::transfer (17 samples, 0.05%)</title><rect x="97.4011%" y="437" width="0.0460%" height="15" fill="rgb(249,221,25)" fg:x="35979" fg:w="17"/><text x="97.6511%" y="447.50"></text></g><g><title>server`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.02%)</title><rect x="97.4282%" y="421" width="0.0190%" height="15" fill="rgb(215,208,19)" fg:x="35989" fg:w="7"/><text x="97.6782%" y="431.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.02%)</title><rect x="97.4282%" y="405" width="0.0190%" height="15" fill="rgb(236,175,2)" fg:x="35989" fg:w="7"/><text x="97.6782%" y="415.50"></text></g><g><title>server`core::ptr::metadata::from_raw_parts (4 samples, 0.01%)</title><rect x="97.7233%" y="389" width="0.0108%" height="15" fill="rgb(241,52,2)" fg:x="36098" fg:w="4"/><text x="97.9733%" y="399.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (42 samples, 0.11%)</title><rect x="97.6421%" y="405" width="0.1137%" height="15" fill="rgb(248,140,14)" fg:x="36068" fg:w="42"/><text x="97.8921%" y="415.50"></text></g><g><title>server`core::ptr::slice_from_raw_parts (8 samples, 0.02%)</title><rect x="97.7341%" y="389" width="0.0217%" height="15" fill="rgb(253,22,42)" fg:x="36102" fg:w="8"/><text x="97.9841%" y="399.50"></text></g><g><title>server`miniz_oxide::inflate::core::decompress (159 samples, 0.43%)</title><rect x="97.3361%" y="501" width="0.4304%" height="15" fill="rgb(234,61,47)" fg:x="35955" fg:w="159"/><text x="97.5861%" y="511.50"></text></g><g><title>server`miniz_oxide::inflate::core::decompress_inner (159 samples, 0.43%)</title><rect x="97.3361%" y="485" width="0.4304%" height="15" fill="rgb(208,226,15)" fg:x="35955" fg:w="159"/><text x="97.5861%" y="495.50"></text></g><g><title>server`miniz_oxide::shared::update_adler32 (116 samples, 0.31%)</title><rect x="97.4526%" y="469" width="0.3140%" height="15" fill="rgb(217,221,4)" fg:x="35998" fg:w="116"/><text x="97.7026%" y="479.50"></text></g><g><title>server`adler32::RollingAdler32::update_buffer (116 samples, 0.31%)</title><rect x="97.4526%" y="453" width="0.3140%" height="15" fill="rgb(212,174,34)" fg:x="35998" fg:w="116"/><text x="97.7026%" y="463.50"></text></g><g><title>server`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (71 samples, 0.19%)</title><rect x="97.5744%" y="437" width="0.1922%" height="15" fill="rgb(253,83,4)" fg:x="36043" fg:w="71"/><text x="97.8244%" y="447.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (63 samples, 0.17%)</title><rect x="97.5960%" y="421" width="0.1706%" height="15" fill="rgb(250,195,49)" fg:x="36051" fg:w="63"/><text x="97.8460%" y="431.50"></text></g><g><title>server`core::ptr::const_ptr::_&lt;impl *const [T]&gt;::as_ptr (4 samples, 0.01%)</title><rect x="97.7558%" y="405" width="0.0108%" height="15" fill="rgb(241,192,25)" fg:x="36110" fg:w="4"/><text x="98.0058%" y="415.50"></text></g><g><title>server`core::mem::replace (7 samples, 0.02%)</title><rect x="97.8478%" y="421" width="0.0190%" height="15" fill="rgb(208,124,10)" fg:x="36144" fg:w="7"/><text x="98.0978%" y="431.50"></text></g><g><title>server`core::ptr::read (4 samples, 0.01%)</title><rect x="97.8668%" y="421" width="0.0108%" height="15" fill="rgb(222,33,0)" fg:x="36151" fg:w="4"/><text x="98.1168%" y="431.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (28 samples, 0.08%)</title><rect x="97.8099%" y="437" width="0.0758%" height="15" fill="rgb(234,209,28)" fg:x="36130" fg:w="28"/><text x="98.0599%" y="447.50"></text></g><g><title>server`alloc::vec::Vec&lt;T,A&gt;::extend_with (53 samples, 0.14%)</title><rect x="97.7666%" y="469" width="0.1435%" height="15" fill="rgb(224,11,23)" fg:x="36114" fg:w="53"/><text x="98.0166%" y="479.50"></text></g><g><title>server`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (40 samples, 0.11%)</title><rect x="97.8018%" y="453" width="0.1083%" height="15" fill="rgb(232,99,1)" fg:x="36127" fg:w="40"/><text x="98.0518%" y="463.50"></text></g><g><title>server`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (4 samples, 0.01%)</title><rect x="97.8992%" y="437" width="0.0108%" height="15" fill="rgb(237,95,45)" fg:x="36163" fg:w="4"/><text x="98.1492%" y="447.50"></text></g><g><title>server`png::decoder::zlib::ZlibStream::prepare_vec_for_appending (54 samples, 0.15%)</title><rect x="97.7666%" y="501" width="0.1462%" height="15" fill="rgb(208,109,11)" fg:x="36114" fg:w="54"/><text x="98.0166%" y="511.50"></text></g><g><title>server`alloc::vec::Vec&lt;T,A&gt;::resize (54 samples, 0.15%)</title><rect x="97.7666%" y="485" width="0.1462%" height="15" fill="rgb(216,190,48)" fg:x="36114" fg:w="54"/><text x="98.0166%" y="495.50"></text></g><g><title>server`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (5 samples, 0.01%)</title><rect x="98.0156%" y="389" width="0.0135%" height="15" fill="rgb(251,171,36)" fg:x="36206" fg:w="5"/><text x="98.2656%" y="399.50"></text></g><g><title>server`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (6 samples, 0.02%)</title><rect x="98.0292%" y="389" width="0.0162%" height="15" fill="rgb(230,62,22)" fg:x="36211" fg:w="6"/><text x="98.2792%" y="399.50"></text></g><g><title>server`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.11%)</title><rect x="97.9480%" y="405" width="0.1110%" height="15" fill="rgb(225,114,35)" fg:x="36181" fg:w="41"/><text x="98.1980%" y="415.50"></text></g><g><title>server`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (5 samples, 0.01%)</title><rect x="98.0454%" y="389" width="0.0135%" height="15" fill="rgb(215,118,42)" fg:x="36217" fg:w="5"/><text x="98.2954%" y="399.50"></text></g><g><title>server`core::option::Option&lt;T&gt;::map (14 samples, 0.04%)</title><rect x="98.0590%" y="405" width="0.0379%" height="15" fill="rgb(243,119,21)" fg:x="36222" fg:w="14"/><text x="98.3090%" y="415.50"></text></g><g><title>server`core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (6 samples, 0.02%)</title><rect x="98.0969%" y="405" width="0.0162%" height="15" fill="rgb(252,177,53)" fg:x="36236" fg:w="6"/><text x="98.3469%" y="415.50"></text></g><g><title>server`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (69 samples, 0.19%)</title><rect x="97.9290%" y="421" width="0.1868%" height="15" fill="rgb(237,209,29)" fg:x="36174" fg:w="69"/><text x="98.1790%" y="431.50"></text></g><g><title>server`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (12 samples, 0.03%)</title><rect x="98.1185%" y="405" width="0.0325%" height="15" fill="rgb(212,65,23)" fg:x="36244" fg:w="12"/><text x="98.3685%" y="415.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (15 samples, 0.04%)</title><rect x="98.1158%" y="421" width="0.0406%" height="15" fill="rgb(230,222,46)" fg:x="36243" fg:w="15"/><text x="98.3658%" y="431.50"></text></g><g><title>server`png::decoder::ReadDecoder&lt;R&gt;::decode_next (305 samples, 0.83%)</title><rect x="97.3334%" y="565" width="0.8257%" height="15" fill="rgb(215,135,32)" fg:x="35954" fg:w="305"/><text x="97.5834%" y="575.50"></text></g><g><title>server`png::decoder::stream::StreamingDecoder::update (305 samples, 0.83%)</title><rect x="97.3334%" y="549" width="0.8257%" height="15" fill="rgb(246,101,22)" fg:x="35954" fg:w="305"/><text x="97.5834%" y="559.50"></text></g><g><title>server`png::decoder::stream::StreamingDecoder::next_state (305 samples, 0.83%)</title><rect x="97.3334%" y="533" width="0.8257%" height="15" fill="rgb(206,107,13)" fg:x="35954" fg:w="305"/><text x="97.5834%" y="543.50"></text></g><g><title>server`png::decoder::zlib::ZlibStream::decompress (304 samples, 0.82%)</title><rect x="97.3361%" y="517" width="0.8230%" height="15" fill="rgb(250,100,44)" fg:x="35955" fg:w="304"/><text x="97.5861%" y="527.50"></text></g><g><title>server`png::decoder::zlib::ZlibStream::transfer_finished_data (91 samples, 0.25%)</title><rect x="97.9128%" y="501" width="0.2464%" height="15" fill="rgb(231,147,38)" fg:x="36168" fg:w="91"/><text x="98.1628%" y="511.50"></text></g><g><title>server`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (91 samples, 0.25%)</title><rect x="97.9128%" y="485" width="0.2464%" height="15" fill="rgb(229,8,40)" fg:x="36168" fg:w="91"/><text x="98.1628%" y="495.50"></text></g><g><title>server`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (91 samples, 0.25%)</title><rect x="97.9128%" y="469" width="0.2464%" height="15" fill="rgb(221,135,30)" fg:x="36168" fg:w="91"/><text x="98.1628%" y="479.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::for_each (91 samples, 0.25%)</title><rect x="97.9128%" y="453" width="0.2464%" height="15" fill="rgb(249,193,18)" fg:x="36168" fg:w="91"/><text x="98.1628%" y="463.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::fold (91 samples, 0.25%)</title><rect x="97.9128%" y="437" width="0.2464%" height="15" fill="rgb(209,133,39)" fg:x="36168" fg:w="91"/><text x="98.1628%" y="447.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.02%)</title><rect x="98.2241%" y="469" width="0.0162%" height="15" fill="rgb(232,100,14)" fg:x="36283" fg:w="6"/><text x="98.4741%" y="479.50"></text></g><g><title>server`core::ptr::slice_from_raw_parts (4 samples, 0.01%)</title><rect x="98.2295%" y="453" width="0.0108%" height="15" fill="rgb(224,185,1)" fg:x="36285" fg:w="4"/><text x="98.4795%" y="463.50"></text></g><g><title>server`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.03%)</title><rect x="98.2187%" y="485" width="0.0271%" height="15" fill="rgb(223,139,8)" fg:x="36281" fg:w="10"/><text x="98.4687%" y="495.50"></text></g><g><title>server`&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.06%)</title><rect x="98.2160%" y="549" width="0.0569%" height="15" fill="rgb(232,213,38)" fg:x="36280" fg:w="21"/><text x="98.4660%" y="559.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::split_at (20 samples, 0.05%)</title><rect x="98.2187%" y="533" width="0.0541%" height="15" fill="rgb(207,94,22)" fg:x="36281" fg:w="20"/><text x="98.4687%" y="543.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (20 samples, 0.05%)</title><rect x="98.2187%" y="517" width="0.0541%" height="15" fill="rgb(219,183,54)" fg:x="36281" fg:w="20"/><text x="98.4687%" y="527.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::get_unchecked (20 samples, 0.05%)</title><rect x="98.2187%" y="501" width="0.0541%" height="15" fill="rgb(216,185,54)" fg:x="36281" fg:w="20"/><text x="98.4687%" y="511.50"></text></g><g><title>server`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.03%)</title><rect x="98.2458%" y="485" width="0.0271%" height="15" fill="rgb(254,217,39)" fg:x="36291" fg:w="10"/><text x="98.4958%" y="495.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (7 samples, 0.02%)</title><rect x="98.2539%" y="469" width="0.0190%" height="15" fill="rgb(240,178,23)" fg:x="36294" fg:w="7"/><text x="98.5039%" y="479.50"></text></g><g><title>server`core::ptr::read (8 samples, 0.02%)</title><rect x="98.2837%" y="533" width="0.0217%" height="15" fill="rgb(218,11,47)" fg:x="36305" fg:w="8"/><text x="98.5337%" y="543.50"></text></g><g><title>server`core::ptr::metadata::from_raw_parts_mut (4 samples, 0.01%)</title><rect x="98.3161%" y="485" width="0.0108%" height="15" fill="rgb(218,51,51)" fg:x="36317" fg:w="4"/><text x="98.5661%" y="495.50"></text></g><g><title>server`&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.06%)</title><rect x="98.2728%" y="549" width="0.0623%" height="15" fill="rgb(238,126,27)" fg:x="36301" fg:w="23"/><text x="98.5228%" y="559.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::split_at_mut (11 samples, 0.03%)</title><rect x="98.3053%" y="533" width="0.0298%" height="15" fill="rgb(249,202,22)" fg:x="36313" fg:w="11"/><text x="98.5553%" y="543.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::split_at_mut_unchecked (11 samples, 0.03%)</title><rect x="98.3053%" y="517" width="0.0298%" height="15" fill="rgb(254,195,49)" fg:x="36313" fg:w="11"/><text x="98.5553%" y="527.50"></text></g><g><title>server`core::slice::raw::from_raw_parts_mut (9 samples, 0.02%)</title><rect x="98.3107%" y="501" width="0.0244%" height="15" fill="rgb(208,123,14)" fg:x="36315" fg:w="9"/><text x="98.5607%" y="511.50"></text></g><g><title>server`core::mem::replace (7 samples, 0.02%)</title><rect x="98.4217%" y="517" width="0.0190%" height="15" fill="rgb(224,200,8)" fg:x="36356" fg:w="7"/><text x="98.6717%" y="527.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (34 samples, 0.09%)</title><rect x="98.3649%" y="533" width="0.0920%" height="15" fill="rgb(217,61,36)" fg:x="36335" fg:w="34"/><text x="98.6149%" y="543.50"></text></g><g><title>server`core::ptr::write (5 samples, 0.01%)</title><rect x="98.4434%" y="517" width="0.0135%" height="15" fill="rgb(206,35,45)" fg:x="36364" fg:w="5"/><text x="98.6934%" y="527.50"></text></g><g><title>server`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (50 samples, 0.14%)</title><rect x="98.3405%" y="549" width="0.1354%" height="15" fill="rgb(217,65,33)" fg:x="36326" fg:w="50"/><text x="98.5905%" y="559.50"></text></g><g><title>server`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (5 samples, 0.01%)</title><rect x="98.4623%" y="533" width="0.0135%" height="15" fill="rgb(222,158,48)" fg:x="36371" fg:w="5"/><text x="98.7123%" y="543.50"></text></g><g><title>server`png::filter::filter_paeth (34 samples, 0.09%)</title><rect x="98.4786%" y="549" width="0.0920%" height="15" fill="rgb(254,2,54)" fg:x="36377" fg:w="34"/><text x="98.7286%" y="559.50"></text></g><g><title>server`core::num::_&lt;impl i16&gt;::abs (19 samples, 0.05%)</title><rect x="98.5192%" y="533" width="0.0514%" height="15" fill="rgb(250,143,38)" fg:x="36392" fg:w="19"/><text x="98.7692%" y="543.50"></text></g><g><title>server`png::decoder::Reader&lt;R&gt;::next_raw_interlaced_row (541 samples, 1.46%)</title><rect x="97.1087%" y="581" width="1.4646%" height="15" fill="rgb(248,25,0)" fg:x="35871" fg:w="541"/><text x="97.3587%" y="591.50"></text></g><g><title>server`png::filter::unfilter (153 samples, 0.41%)</title><rect x="98.1591%" y="565" width="0.4142%" height="15" fill="rgb(206,152,27)" fg:x="36259" fg:w="153"/><text x="98.4091%" y="575.50"></text></g><g><title>server`image::io::free_functions::load (542 samples, 1.47%)</title><rect x="97.1087%" y="725" width="1.4673%" height="15" fill="rgb(240,77,30)" fg:x="35871" fg:w="542"/><text x="97.3587%" y="735.50"></text></g><g><title>server`image::dynimage::DynamicImage::from_decoder (542 samples, 1.47%)</title><rect x="97.1087%" y="709" width="1.4673%" height="15" fill="rgb(231,5,3)" fg:x="35871" fg:w="542"/><text x="97.3587%" y="719.50"></text></g><g><title>server`image::dynimage::decoder_to_image (542 samples, 1.47%)</title><rect x="97.1087%" y="693" width="1.4673%" height="15" fill="rgb(207,226,32)" fg:x="35871" fg:w="542"/><text x="97.3587%" y="703.50"></text></g><g><title>server`image::image::decoder_to_vec (542 samples, 1.47%)</title><rect x="97.1087%" y="677" width="1.4673%" height="15" fill="rgb(222,207,47)" fg:x="35871" fg:w="542"/><text x="97.3587%" y="687.50"></text></g><g><title>server`&lt;image::codecs::png::PngDecoder&lt;R&gt; as image::image::ImageDecoder&gt;::read_image (542 samples, 1.47%)</title><rect x="97.1087%" y="661" width="1.4673%" height="15" fill="rgb(229,115,45)" fg:x="35871" fg:w="542"/><text x="97.3587%" y="671.50"></text></g><g><title>server`png::decoder::Reader&lt;R&gt;::next_frame (542 samples, 1.47%)</title><rect x="97.1087%" y="645" width="1.4673%" height="15" fill="rgb(224,191,6)" fg:x="35871" fg:w="542"/><text x="97.3587%" y="655.50"></text></g><g><title>server`png::decoder::Reader&lt;R&gt;::next_row (542 samples, 1.47%)</title><rect x="97.1087%" y="629" width="1.4673%" height="15" fill="rgb(230,227,24)" fg:x="35871" fg:w="542"/><text x="97.3587%" y="639.50"></text></g><g><title>server`png::decoder::Reader&lt;R&gt;::next_interlaced_row (542 samples, 1.47%)</title><rect x="97.1087%" y="613" width="1.4673%" height="15" fill="rgb(228,80,19)" fg:x="35871" fg:w="542"/><text x="97.3587%" y="623.50"></text></g><g><title>server`png::decoder::Reader&lt;R&gt;::next_interlaced_row_impl (542 samples, 1.47%)</title><rect x="97.1087%" y="597" width="1.4673%" height="15" fill="rgb(247,229,0)" fg:x="35871" fg:w="542"/><text x="97.3587%" y="607.50"></text></g><g><title>server`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (6 samples, 0.02%)</title><rect x="98.6816%" y="421" width="0.0162%" height="15" fill="rgb(237,194,15)" fg:x="36452" fg:w="6"/><text x="98.9316%" y="431.50"></text></g><g><title>server`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.11%)</title><rect x="98.6058%" y="437" width="0.1110%" height="15" fill="rgb(219,203,20)" fg:x="36424" fg:w="41"/><text x="98.8558%" y="447.50"></text></g><g><title>server`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (4 samples, 0.01%)</title><rect x="98.7060%" y="421" width="0.0108%" height="15" fill="rgb(234,128,8)" fg:x="36461" fg:w="4"/><text x="98.9560%" y="431.50"></text></g><g><title>server`core::option::Option&lt;T&gt;::map (17 samples, 0.05%)</title><rect x="98.7168%" y="437" width="0.0460%" height="15" fill="rgb(248,202,8)" fg:x="36465" fg:w="17"/><text x="98.9668%" y="447.50"></text></g><g><title>server`core::ptr::read (6 samples, 0.02%)</title><rect x="98.7466%" y="421" width="0.0162%" height="15" fill="rgb(206,104,37)" fg:x="36476" fg:w="6"/><text x="98.9966%" y="431.50"></text></g><g><title>server`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.18%)</title><rect x="98.5923%" y="453" width="0.1787%" height="15" fill="rgb(223,8,27)" fg:x="36419" fg:w="66"/><text x="98.8423%" y="463.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::for_each (78 samples, 0.21%)</title><rect x="98.5787%" y="485" width="0.2112%" height="15" fill="rgb(216,217,28)" fg:x="36414" fg:w="78"/><text x="98.8287%" y="495.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::fold (78 samples, 0.21%)</title><rect x="98.5787%" y="469" width="0.2112%" height="15" fill="rgb(249,199,1)" fg:x="36414" fg:w="78"/><text x="98.8287%" y="479.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (7 samples, 0.02%)</title><rect x="98.7709%" y="453" width="0.0190%" height="15" fill="rgb(240,85,17)" fg:x="36485" fg:w="7"/><text x="99.0209%" y="463.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (9 samples, 0.02%)</title><rect x="98.8630%" y="325" width="0.0244%" height="15" fill="rgb(206,108,45)" fg:x="36519" fg:w="9"/><text x="99.1130%" y="335.50"></text></g><g><title>server`miniz_oxide::inflate::core::apply_match (17 samples, 0.05%)</title><rect x="98.8440%" y="373" width="0.0460%" height="15" fill="rgb(245,210,41)" fg:x="36512" fg:w="17"/><text x="99.0940%" y="383.50"></text></g><g><title>server`miniz_oxide::inflate::core::transfer (17 samples, 0.05%)</title><rect x="98.8440%" y="357" width="0.0460%" height="15" fill="rgb(206,13,37)" fg:x="36512" fg:w="17"/><text x="99.0940%" y="367.50"></text></g><g><title>server`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (10 samples, 0.03%)</title><rect x="98.8630%" y="341" width="0.0271%" height="15" fill="rgb(250,61,18)" fg:x="36519" fg:w="10"/><text x="99.1130%" y="351.50"></text></g><g><title>server`miniz_oxide::inflate::core::decompress_fast (36 samples, 0.10%)</title><rect x="98.7980%" y="389" width="0.0975%" height="15" fill="rgb(235,172,48)" fg:x="36495" fg:w="36"/><text x="99.0480%" y="399.50"></text></g><g><title>server`core::ptr::metadata::from_raw_parts (6 samples, 0.02%)</title><rect x="99.1608%" y="309" width="0.0162%" height="15" fill="rgb(249,201,17)" fg:x="36629" fg:w="6"/><text x="99.4108%" y="319.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (33 samples, 0.09%)</title><rect x="99.1066%" y="325" width="0.0893%" height="15" fill="rgb(219,208,6)" fg:x="36609" fg:w="33"/><text x="99.3566%" y="335.50"></text></g><g><title>server`core::ptr::slice_from_raw_parts (7 samples, 0.02%)</title><rect x="99.1770%" y="309" width="0.0190%" height="15" fill="rgb(248,31,23)" fg:x="36635" fg:w="7"/><text x="99.4270%" y="319.50"></text></g><g><title>server`adler32::RollingAdler32::update_buffer (114 samples, 0.31%)</title><rect x="98.9009%" y="373" width="0.3086%" height="15" fill="rgb(245,15,42)" fg:x="36533" fg:w="114"/><text x="99.1509%" y="383.50"></text></g><g><title>server`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (77 samples, 0.21%)</title><rect x="99.0011%" y="357" width="0.2085%" height="15" fill="rgb(222,217,39)" fg:x="36570" fg:w="77"/><text x="99.2511%" y="367.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (59 samples, 0.16%)</title><rect x="99.0498%" y="341" width="0.1597%" height="15" fill="rgb(210,219,27)" fg:x="36588" fg:w="59"/><text x="99.2998%" y="351.50"></text></g><g><title>server`core::ptr::const_ptr::_&lt;impl *const [T]&gt;::as_ptr (5 samples, 0.01%)</title><rect x="99.1960%" y="325" width="0.0135%" height="15" fill="rgb(252,166,36)" fg:x="36642" fg:w="5"/><text x="99.4460%" y="335.50"></text></g><g><title>server`miniz_oxide::inflate::core::decompress (155 samples, 0.42%)</title><rect x="98.7926%" y="421" width="0.4196%" height="15" fill="rgb(245,132,34)" fg:x="36493" fg:w="155"/><text x="99.0426%" y="431.50"></text></g><g><title>server`miniz_oxide::inflate::core::decompress_inner (155 samples, 0.42%)</title><rect x="98.7926%" y="405" width="0.4196%" height="15" fill="rgb(236,54,3)" fg:x="36493" fg:w="155"/><text x="99.0426%" y="415.50"></text></g><g><title>server`miniz_oxide::shared::update_adler32 (115 samples, 0.31%)</title><rect x="98.9009%" y="389" width="0.3113%" height="15" fill="rgb(241,173,43)" fg:x="36533" fg:w="115"/><text x="99.1509%" y="399.50"></text></g><g><title>server`core::mem::replace (8 samples, 0.02%)</title><rect x="99.2853%" y="341" width="0.0217%" height="15" fill="rgb(215,190,9)" fg:x="36675" fg:w="8"/><text x="99.5353%" y="351.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (24 samples, 0.06%)</title><rect x="99.2582%" y="357" width="0.0650%" height="15" fill="rgb(242,101,16)" fg:x="36665" fg:w="24"/><text x="99.5082%" y="367.50"></text></g><g><title>server`core::ptr::read (6 samples, 0.02%)</title><rect x="99.3070%" y="341" width="0.0162%" height="15" fill="rgb(223,190,21)" fg:x="36683" fg:w="6"/><text x="99.5570%" y="351.50"></text></g><g><title>server`alloc::vec::Vec&lt;T,A&gt;::extend_with (45 samples, 0.12%)</title><rect x="99.2122%" y="389" width="0.1218%" height="15" fill="rgb(215,228,25)" fg:x="36648" fg:w="45"/><text x="99.4622%" y="399.50"></text></g><g><title>server`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (31 samples, 0.08%)</title><rect x="99.2501%" y="373" width="0.0839%" height="15" fill="rgb(225,36,22)" fg:x="36662" fg:w="31"/><text x="99.5001%" y="383.50"></text></g><g><title>server`alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (4 samples, 0.01%)</title><rect x="99.3340%" y="389" width="0.0108%" height="15" fill="rgb(251,106,46)" fg:x="36693" fg:w="4"/><text x="99.5840%" y="399.50"></text></g><g><title>server`png::decoder::zlib::ZlibStream::prepare_vec_for_appending (50 samples, 0.14%)</title><rect x="99.2122%" y="421" width="0.1354%" height="15" fill="rgb(208,90,1)" fg:x="36648" fg:w="50"/><text x="99.4622%" y="431.50"></text></g><g><title>server`alloc::vec::Vec&lt;T,A&gt;::resize (50 samples, 0.14%)</title><rect x="99.2122%" y="405" width="0.1354%" height="15" fill="rgb(243,10,4)" fg:x="36648" fg:w="50"/><text x="99.4622%" y="415.50"></text></g><g><title>server`core::ptr::const_ptr::_&lt;impl *const T&gt;::guaranteed_eq (5 samples, 0.01%)</title><rect x="99.4288%" y="309" width="0.0135%" height="15" fill="rgb(212,137,27)" fg:x="36728" fg:w="5"/><text x="99.6788%" y="319.50"></text></g><g><title>server`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.09%)</title><rect x="99.3801%" y="325" width="0.0893%" height="15" fill="rgb(231,220,49)" fg:x="36710" fg:w="33"/><text x="99.6301%" y="335.50"></text></g><g><title>server`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (6 samples, 0.02%)</title><rect x="99.4532%" y="309" width="0.0162%" height="15" fill="rgb(237,96,20)" fg:x="36737" fg:w="6"/><text x="99.7032%" y="319.50"></text></g><g><title>server`core::option::Option&lt;T&gt;::map (15 samples, 0.04%)</title><rect x="99.4694%" y="325" width="0.0406%" height="15" fill="rgb(239,229,30)" fg:x="36743" fg:w="15"/><text x="99.7194%" y="335.50"></text></g><g><title>server`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.16%)</title><rect x="99.3638%" y="341" width="0.1570%" height="15" fill="rgb(219,65,33)" fg:x="36704" fg:w="58"/><text x="99.6138%" y="351.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::fold (81 samples, 0.22%)</title><rect x="99.3476%" y="357" width="0.2193%" height="15" fill="rgb(243,134,7)" fg:x="36698" fg:w="81"/><text x="99.5976%" y="367.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (17 samples, 0.05%)</title><rect x="99.5208%" y="341" width="0.0460%" height="15" fill="rgb(216,177,54)" fg:x="36762" fg:w="17"/><text x="99.7708%" y="351.50"></text></g><g><title>server`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (14 samples, 0.04%)</title><rect x="99.5290%" y="325" width="0.0379%" height="15" fill="rgb(211,160,20)" fg:x="36765" fg:w="14"/><text x="99.7790%" y="335.50"></text></g><g><title>server`png::decoder::ReadDecoder&lt;R&gt;::decode_next (288 samples, 0.78%)</title><rect x="98.7899%" y="485" width="0.7797%" height="15" fill="rgb(239,85,39)" fg:x="36492" fg:w="288"/><text x="99.0399%" y="495.50"></text></g><g><title>server`png::decoder::stream::StreamingDecoder::update (288 samples, 0.78%)</title><rect x="98.7899%" y="469" width="0.7797%" height="15" fill="rgb(232,125,22)" fg:x="36492" fg:w="288"/><text x="99.0399%" y="479.50"></text></g><g><title>server`png::decoder::stream::StreamingDecoder::next_state (288 samples, 0.78%)</title><rect x="98.7899%" y="453" width="0.7797%" height="15" fill="rgb(244,57,34)" fg:x="36492" fg:w="288"/><text x="99.0399%" y="463.50"></text></g><g><title>server`png::decoder::zlib::ZlibStream::decompress (287 samples, 0.78%)</title><rect x="98.7926%" y="437" width="0.7770%" height="15" fill="rgb(214,203,32)" fg:x="36493" fg:w="287"/><text x="99.0426%" y="447.50"></text></g><g><title>server`png::decoder::zlib::ZlibStream::transfer_finished_data (82 samples, 0.22%)</title><rect x="99.3476%" y="421" width="0.2220%" height="15" fill="rgb(207,58,43)" fg:x="36698" fg:w="82"/><text x="99.5976%" y="431.50"></text></g><g><title>server`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (82 samples, 0.22%)</title><rect x="99.3476%" y="405" width="0.2220%" height="15" fill="rgb(215,193,15)" fg:x="36698" fg:w="82"/><text x="99.5976%" y="415.50"></text></g><g><title>server`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (82 samples, 0.22%)</title><rect x="99.3476%" y="389" width="0.2220%" height="15" fill="rgb(232,15,44)" fg:x="36698" fg:w="82"/><text x="99.5976%" y="399.50"></text></g><g><title>server`core::iter::traits::iterator::Iterator::for_each (82 samples, 0.22%)</title><rect x="99.3476%" y="373" width="0.2220%" height="15" fill="rgb(212,3,48)" fg:x="36698" fg:w="82"/><text x="99.5976%" y="383.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.03%)</title><rect x="99.6454%" y="389" width="0.0271%" height="15" fill="rgb(218,128,7)" fg:x="36808" fg:w="10"/><text x="99.8954%" y="399.50"></text></g><g><title>server`core::ptr::slice_from_raw_parts (4 samples, 0.01%)</title><rect x="99.6616%" y="373" width="0.0108%" height="15" fill="rgb(226,216,39)" fg:x="36814" fg:w="4"/><text x="99.9116%" y="383.50"></text></g><g><title>server`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (13 samples, 0.04%)</title><rect x="99.6399%" y="405" width="0.0352%" height="15" fill="rgb(243,47,51)" fg:x="36806" fg:w="13"/><text x="99.8899%" y="415.50"></text></g><g><title>server`&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.07%)</title><rect x="99.6210%" y="469" width="0.0731%" height="15" fill="rgb(241,183,40)" fg:x="36799" fg:w="27"/><text x="99.8710%" y="479.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::split_at (23 samples, 0.06%)</title><rect x="99.6318%" y="453" width="0.0623%" height="15" fill="rgb(231,217,32)" fg:x="36803" fg:w="23"/><text x="99.8818%" y="463.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (22 samples, 0.06%)</title><rect x="99.6345%" y="437" width="0.0596%" height="15" fill="rgb(229,61,38)" fg:x="36804" fg:w="22"/><text x="99.8845%" y="447.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::get_unchecked (20 samples, 0.05%)</title><rect x="99.6399%" y="421" width="0.0541%" height="15" fill="rgb(225,210,5)" fg:x="36806" fg:w="20"/><text x="99.8899%" y="431.50"></text></g><g><title>server`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (7 samples, 0.02%)</title><rect x="99.6751%" y="405" width="0.0190%" height="15" fill="rgb(231,79,45)" fg:x="36819" fg:w="7"/><text x="99.9251%" y="415.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (7 samples, 0.02%)</title><rect x="99.6751%" y="389" width="0.0190%" height="15" fill="rgb(224,100,7)" fg:x="36819" fg:w="7"/><text x="99.9251%" y="399.50"></text></g><g><title>server`core::ptr::read (12 samples, 0.03%)</title><rect x="99.7049%" y="453" width="0.0325%" height="15" fill="rgb(241,198,18)" fg:x="36830" fg:w="12"/><text x="99.9549%" y="463.50"></text></g><g><title>server`&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.08%)</title><rect x="99.6941%" y="469" width="0.0839%" height="15" fill="rgb(252,97,53)" fg:x="36826" fg:w="31"/><text x="99.9441%" y="479.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::split_at_mut (15 samples, 0.04%)</title><rect x="99.7374%" y="453" width="0.0406%" height="15" fill="rgb(220,88,7)" fg:x="36842" fg:w="15"/><text x="99.9874%" y="463.50"></text></g><g><title>server`core::slice::_&lt;impl [T]&gt;::split_at_mut_unchecked (12 samples, 0.03%)</title><rect x="99.7455%" y="437" width="0.0325%" height="15" fill="rgb(213,176,14)" fg:x="36845" fg:w="12"/><text x="99.9955%" y="447.50"></text></g><g><title>server`core::slice::raw::from_raw_parts_mut (6 samples, 0.02%)</title><rect x="99.7618%" y="421" width="0.0162%" height="15" fill="rgb(246,73,7)" fg:x="36851" fg:w="6"/><text x="100.0118%" y="431.50"></text></g><g><title>server`core::mem::replace (12 samples, 0.03%)</title><rect x="99.8376%" y="437" width="0.0325%" height="15" fill="rgb(245,64,36)" fg:x="36879" fg:w="12"/><text x="100.0876%" y="447.50"></text></g><g><title>server`core::ptr::read (5 samples, 0.01%)</title><rect x="99.8701%" y="437" width="0.0135%" height="15" fill="rgb(245,80,10)" fg:x="36891" fg:w="5"/><text x="100.1201%" y="447.50"></text></g><g><title>server`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (34 samples, 0.09%)</title><rect x="99.7997%" y="453" width="0.0920%" height="15" fill="rgb(232,107,50)" fg:x="36865" fg:w="34"/><text x="100.0497%" y="463.50"></text></g><g><title>server`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (50 samples, 0.14%)</title><rect x="99.7807%" y="469" width="0.1354%" height="15" fill="rgb(253,3,0)" fg:x="36858" fg:w="50"/><text x="100.0307%" y="479.50"></text></g><g><title>server`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (5 samples, 0.01%)</title><rect x="99.9025%" y="453" width="0.0135%" height="15" fill="rgb(212,99,53)" fg:x="36903" fg:w="5"/><text x="100.1525%" y="463.50"></text></g><g><title>server`png::filter::filter_paeth (27 samples, 0.07%)</title><rect x="99.9215%" y="469" width="0.0731%" height="15" fill="rgb(249,111,54)" fg:x="36910" fg:w="27"/><text x="100.1715%" y="479.50"></text></g><g><title>server`core::num::_&lt;impl i16&gt;::abs (12 samples, 0.03%)</title><rect x="99.9621%" y="453" width="0.0325%" height="15" fill="rgb(249,55,30)" fg:x="36925" fg:w="12"/><text x="100.2121%" y="463.50"></text></g><g><title>all (36,939 samples, 100%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(237,47,42)" fg:x="0" fg:w="36939"/><text x="0.2500%" y="751.50"></text></g><g><title>server`server::world::World::new (526 samples, 1.42%)</title><rect x="98.5760%" y="725" width="1.4240%" height="15" fill="rgb(211,20,18)" fg:x="36413" fg:w="526"/><text x="98.8260%" y="735.50"></text></g><g><title>server`gltf::import::import (526 samples, 1.42%)</title><rect x="98.5760%" y="709" width="1.4240%" height="15" fill="rgb(231,203,46)" fg:x="36413" fg:w="526"/><text x="98.8260%" y="719.50"></text></g><g><title>server`gltf::import::import_path (526 samples, 1.42%)</title><rect x="98.5760%" y="693" width="1.4240%" height="15" fill="rgb(237,142,3)" fg:x="36413" fg:w="526"/><text x="98.8260%" y="703.50"></text></g><g><title>server`gltf::import::import_impl (526 samples, 1.42%)</title><rect x="98.5760%" y="677" width="1.4240%" height="15" fill="rgb(241,107,1)" fg:x="36413" fg:w="526"/><text x="98.8260%" y="687.50"></text></g><g><title>server`gltf::import::import_image_data (526 samples, 1.42%)</title><rect x="98.5760%" y="661" width="1.4240%" height="15" fill="rgb(229,83,13)" fg:x="36413" fg:w="526"/><text x="98.8260%" y="671.50"></text></g><g><title>server`image::io::free_functions::load (526 samples, 1.42%)</title><rect x="98.5760%" y="645" width="1.4240%" height="15" fill="rgb(241,91,40)" fg:x="36413" fg:w="526"/><text x="98.8260%" y="655.50"></text></g><g><title>server`image::dynimage::DynamicImage::from_decoder (526 samples, 1.42%)</title><rect x="98.5760%" y="629" width="1.4240%" height="15" fill="rgb(225,3,45)" fg:x="36413" fg:w="526"/><text x="98.8260%" y="639.50"></text></g><g><title>server`image::dynimage::decoder_to_image (526 samples, 1.42%)</title><rect x="98.5760%" y="613" width="1.4240%" height="15" fill="rgb(244,223,14)" fg:x="36413" fg:w="526"/><text x="98.8260%" y="623.50"></text></g><g><title>server`image::image::decoder_to_vec (526 samples, 1.42%)</title><rect x="98.5760%" y="597" width="1.4240%" height="15" fill="rgb(224,124,37)" fg:x="36413" fg:w="526"/><text x="98.8260%" y="607.50"></text></g><g><title>server`&lt;image::codecs::png::PngDecoder&lt;R&gt; as image::image::ImageDecoder&gt;::read_image (526 samples, 1.42%)</title><rect x="98.5760%" y="581" width="1.4240%" height="15" fill="rgb(251,171,30)" fg:x="36413" fg:w="526"/><text x="98.8260%" y="591.50"></text></g><g><title>server`png::decoder::Reader&lt;R&gt;::next_frame (526 samples, 1.42%)</title><rect x="98.5760%" y="565" width="1.4240%" height="15" fill="rgb(236,46,54)" fg:x="36413" fg:w="526"/><text x="98.8260%" y="575.50"></text></g><g><title>server`png::decoder::Reader&lt;R&gt;::next_row (526 samples, 1.42%)</title><rect x="98.5760%" y="549" width="1.4240%" height="15" fill="rgb(245,213,5)" fg:x="36413" fg:w="526"/><text x="98.8260%" y="559.50"></text></g><g><title>server`png::decoder::Reader&lt;R&gt;::next_interlaced_row (526 samples, 1.42%)</title><rect x="98.5760%" y="533" width="1.4240%" height="15" fill="rgb(230,144,27)" fg:x="36413" fg:w="526"/><text x="98.8260%" y="543.50"></text></g><g><title>server`png::decoder::Reader&lt;R&gt;::next_interlaced_row_impl (526 samples, 1.42%)</title><rect x="98.5760%" y="517" width="1.4240%" height="15" fill="rgb(220,86,6)" fg:x="36413" fg:w="526"/><text x="98.8260%" y="527.50"></text></g><g><title>server`png::decoder::Reader&lt;R&gt;::next_raw_interlaced_row (525 samples, 1.42%)</title><rect x="98.5787%" y="501" width="1.4213%" height="15" fill="rgb(240,20,13)" fg:x="36414" fg:w="525"/><text x="98.8287%" y="511.50"></text></g><g><title>server`png::filter::unfilter (159 samples, 0.43%)</title><rect x="99.5696%" y="485" width="0.4304%" height="15" fill="rgb(217,89,34)" fg:x="36780" fg:w="159"/><text x="99.8196%" y="495.50"></text></g></svg></svg>